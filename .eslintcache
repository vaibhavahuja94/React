[{"D:\\w3bizz\\React\\src\\index.js":"1","D:\\w3bizz\\React\\src\\store.js":"2","D:\\w3bizz\\React\\src\\App.js":"3","D:\\w3bizz\\React\\src\\Services\\localStorage.js":"4","D:\\w3bizz\\React\\src\\redux\\rootReducer.js":"5","D:\\w3bizz\\React\\src\\component\\about\\Login.js":"6","D:\\w3bizz\\React\\src\\component\\about\\Register.js":"7","D:\\w3bizz\\React\\src\\component\\blogHome\\BlogHome.js":"8","D:\\w3bizz\\React\\src\\component\\privateRoute\\ProtectedRoute.js":"9","D:\\w3bizz\\React\\src\\component\\blogHome\\WebTemplate.js":"10","D:\\w3bizz\\React\\src\\component\\blogHome\\AdminBlogHome.js":"11","D:\\w3bizz\\React\\src\\component\\home\\Home.js":"12","D:\\w3bizz\\React\\src\\component\\blogHome\\RecentPage.js":"13","D:\\w3bizz\\React\\src\\component\\blogHome\\WebHome.js":"14","D:\\w3bizz\\React\\src\\component\\profile\\ProfileUpdate.js":"15","D:\\w3bizz\\React\\src\\Services\\apiFunction.js":"16","D:\\w3bizz\\React\\src\\component\\blogHome\\ShowBlogById.js":"17","D:\\w3bizz\\React\\src\\component\\AdminLayout.js":"18","D:\\w3bizz\\React\\src\\component\\privateRoute\\Auth.js":"19","D:\\w3bizz\\React\\src\\component\\Header.js":"20","D:\\w3bizz\\React\\src\\component\\BlogNavBar.js":"21","D:\\w3bizz\\React\\src\\redux\\actions\\LoginActions.js":"22","D:\\w3bizz\\React\\src\\redux\\actions\\GetBlogByIdActions.js":"23","D:\\w3bizz\\React\\src\\component\\blogHome\\RecentPageById.js":"24","D:\\w3bizz\\React\\src\\component\\blogHome\\AdminRecentPageById.js":"25","D:\\w3bizz\\React\\src\\redux\\reducer\\LoginReducers.js":"26","D:\\w3bizz\\React\\src\\redux\\reducer\\GetBlogByIdReducers.js":"27","D:\\w3bizz\\React\\src\\component\\blogHome\\AdminShowBlogById.js":"28","D:\\w3bizz\\React\\src\\component\\home\\HomeNavBar.js":"29","D:\\w3bizz\\React\\src\\Services\\headerServices.js":"30","D:\\w3bizz\\React\\src\\component\\blogHome\\LottieIcon.js":"31","D:\\w3bizz\\React\\src\\component\\about\\ForgotPassword.js":"32","D:\\w3bizz\\React\\src\\component\\about\\Usernameschema.js":"33","D:\\w3bizz\\React\\src\\component\\about\\OtpSchema.js":"34","D:\\w3bizz\\React\\src\\component\\about\\Styles.js":"35","D:\\w3bizz\\React\\src\\component\\about\\Passwordschema.js":"36","D:\\w3bizz\\React\\src\\component\\about\\UserNameSchema.js":"37","D:\\w3bizz\\React\\src\\component\\about\\PasswordSchema.js":"38","D:\\w3bizz\\React\\src\\component\\blogHome\\LottieIco.js":"39","D:\\w3bizz\\React\\src\\component\\payment\\StripeApp.js":"40"},{"size":343,"mtime":1622381557433,"results":"41","hashOfConfig":"42"},{"size":744,"mtime":1630738376101,"results":"43","hashOfConfig":"42"},{"size":1936,"mtime":1631726584570,"results":"44","hashOfConfig":"42"},{"size":658,"mtime":1622380864606,"results":"45","hashOfConfig":"42"},{"size":246,"mtime":1630558079509,"results":"46","hashOfConfig":"42"},{"size":8157,"mtime":1631726584572,"results":"47","hashOfConfig":"42"},{"size":5944,"mtime":1630952173372,"results":"48","hashOfConfig":"42"},{"size":8831,"mtime":1632246768180,"results":"49","hashOfConfig":"42"},{"size":566,"mtime":1631726584588,"results":"50","hashOfConfig":"42"},{"size":7892,"mtime":1630837712888,"results":"51","hashOfConfig":"42"},{"size":8644,"mtime":1631958439479,"results":"52","hashOfConfig":"42"},{"size":2803,"mtime":1627618219537,"results":"53","hashOfConfig":"42"},{"size":16974,"mtime":1632247667172,"results":"54","hashOfConfig":"42"},{"size":5268,"mtime":1630131439374,"results":"55","hashOfConfig":"42"},{"size":14137,"mtime":1632250433377,"results":"56","hashOfConfig":"42"},{"size":6461,"mtime":1632161653897,"results":"57","hashOfConfig":"42"},{"size":27864,"mtime":1632249587937,"results":"58","hashOfConfig":"42"},{"size":9236,"mtime":1631727030770,"results":"59","hashOfConfig":"42"},{"size":170,"mtime":1622380533560,"results":"60","hashOfConfig":"42"},{"size":1150,"mtime":1622386259438,"results":"61","hashOfConfig":"42"},{"size":6091,"mtime":1630837725497,"results":"62","hashOfConfig":"42"},{"size":262,"mtime":1630079981616,"results":"63","hashOfConfig":"42"},{"size":2407,"mtime":1632193678178,"results":"64","hashOfConfig":"42"},{"size":14688,"mtime":1632247399007,"results":"65","hashOfConfig":"42"},{"size":19005,"mtime":1632247591767,"results":"66","hashOfConfig":"42"},{"size":657,"mtime":1622393163975,"results":"67","hashOfConfig":"42"},{"size":1297,"mtime":1632193855804,"results":"68","hashOfConfig":"42"},{"size":16561,"mtime":1632247711991,"results":"69","hashOfConfig":"42"},{"size":10737,"mtime":1627616481272,"results":"70","hashOfConfig":"42"},{"size":465,"mtime":1622380533531,"results":"71","hashOfConfig":"42"},{"size":1225,"mtime":1631728044300,"results":"72","hashOfConfig":"42"},{"size":9864,"mtime":1631726584571,"results":"73","hashOfConfig":"42"},{"size":167,"mtime":1631472192608,"results":"74","hashOfConfig":"42"},{"size":308,"mtime":1631472243143,"results":"75","hashOfConfig":"42"},{"size":4111,"mtime":1631472146056,"results":"76","hashOfConfig":"42"},{"size":157,"mtime":1631472285735,"results":"77","hashOfConfig":"42"},{"size":167,"mtime":1631472192608,"results":"78","hashOfConfig":"42"},{"size":157,"mtime":1631472285735,"results":"79","hashOfConfig":"42"},{"size":918,"mtime":1631958334957,"results":"80","hashOfConfig":"42"},{"size":6921,"mtime":1632073785767,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1fpfzq5",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"84"},"D:\\w3bizz\\React\\src\\index.js",[],["178","179"],"D:\\w3bizz\\React\\src\\store.js",[],"D:\\w3bizz\\React\\src\\App.js",["180","181","182"],"import React,{Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport Login from './component/about/Login';\nimport Register from './component/about/Register';\nimport BlogHome from './component/blogHome/BlogHome';\nimport Home from './component/home/Home';\nimport WebTemplate from './component/blogHome/WebTemplate';\nimport ProtectedRoute from './component/privateRoute/ProtectedRoute';\nimport WebHome from './component/blogHome/WebHome';\nimport RecentPage from './component/blogHome/RecentPage';\nimport ProfileUpdate from './component/profile/ProfileUpdate';\nimport AdminBlogHome from './component/blogHome/AdminBlogHome';\nimport ForgotPassword from './component/about/ForgotPassword';\n\n  export default class App extends Component{  \n    render(){\n    return (\n      <Router>\n        <div>\n            {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/register\">\n              <Register />\n            </Route>\n           \n            <ProtectedRoute exact path=\"/savedPageTemplate\" component={AdminBlogHome}/>\n            <Route exact path=\"/forgotpass\" component={ForgotPassword}/>\n            <ProtectedRoute exact path=\"/savedWebTemplate\" component={AdminBlogHome}/>\n            <ProtectedRoute exact path=\"/recentWebTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/recentPageTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/webTemplate\" component={RecentPage}/>\n            <ProtectedRoute exact path=\"/updateProfile\" component={ProfileUpdate}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n}\n  }\n  ","D:\\w3bizz\\React\\src\\Services\\localStorage.js",[],"D:\\w3bizz\\React\\src\\redux\\rootReducer.js",[],"D:\\w3bizz\\React\\src\\component\\about\\Login.js",["183","184","185"],"import React, { Component } from 'react';\nimport Navigation from '../Header';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { loginUserError, loginUserSuccess } from '../../redux/actions/LoginActions'\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { postLogin } from '../../Services/apiFunction'\nimport { CircularProgress, Typography } from '@material-ui/core'\nimport '../App.css'\n\nclass Login extends Component {\n    state = {\n        loginError: false,\n        loader: false,\n        loginMessage: \"Username or Paasword is Incorrect\",\n        token: JSON.parse(localStorage.getItem('login'))\n    }\n\n    onSubmit = async (fields) => {\n        delete fields.recap;\n        this.captcha.reset();\n        this.setState({ loader: true })\n        await postLogin(fields)\n            .then((res) => {\n                if (res.data.success == 1) {\n                    this.setState({ loginError: false })\n                    let user1 = res.data.data\n                    this.props.loginUsersSuccess(user1)\n                    localStorage.setItem('login', JSON.stringify(true))\n                    localStorage.setItem('token', (res.data.token))\n                    this.props.history.push('/recentWebTemplate')\n                }\n                else {\n                    this.setState({ loginError: true })\n                    this.setState({ loader: false })\n                }\n            })\n            .catch(err => { console.log(err) })\n    }\n\n    // loginUnsuccessFul() {\n    //     console.log(this.props.data)\n    //     if (this.props.data.length===0) {\n    //         console.log(\"true\")\n    //         this.setState({ loginError: true })\n    //         return \"Error\"\n    //     }\n    //     else {\n    //         this.setState({ loginError: false })\n    //         return \"Success\"\n    //     }\n    // }\n    render() {\n        return (\n            <>\n                <div className=\"row container\">\n                    <div className=\"col-sm-7\" style={{ marginTop: \"7%\" }}></div>\n                    <div className=\"col-sm-5 col-xs-12\" style={{ marginTop: \"7%\" }}>\n                        <Formik\n                            initialValues={{\n                                email: '',\n                                password: '',\n                                recap: \"\",\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required'),\n                                password: Yup.string()\n                                    .min(6, 'Password must be at least 6 characters')\n                                    .required('Password is required'),\n                                recap: Yup.string().required('I am Not Robot').nullable()\n                            })}\n                            onSubmit={this.onSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"password\">Password</label>\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\"\n                                            style = {{transform:\"scale(0.77)\",webkiTransform:\"scale(0.77)\",transformOrigin:\"0 0\",webkitTransformOrigin:\"0 0\"}}\n                                            >\n                                                <ReCAPTCHA name=\"recap\"\n                                                    siz=\"compact\"\n                                                    sitekey=\"6Le_5kgcAAAAANIwiif5bGdTIxqLTEF1Z3mL12ue\"\n                                                    onChange={(value) => setFieldValue('recap', value)}\n                                                    ref={e => (this.captcha = e)}\n                                                    className={(errors.recap && touched.recap ? ' is-invalid' : '')}\n                                                />\n                                                <ErrorMessage name=\"recap\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Login</button>\n                                                }\n                                                &nbsp;\n                                                <button type=\"reset\" className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }}\n                                                    onClick={() => this.captcha.reset()}\n                                                >Reset</button>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <Link to=\"/forgotpass\" className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }}>Forgot Password?</Link>\n                                            </div>\n                                            <div>\n                                                {this.state.loginError === true && <p style={{ \"color\": \"red\" }}>{this.state.loginMessage}</p>}\n                                            </div>\n                                            <Typography variant=\"body1\">\n                                                Don't have an account?{' '}\n                                                <Link to=\"/register\">\n                                                    Sign up\n                                                </Link>\n                                            </Typography>\n                                        </Form>\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        <ToastContainer />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.login && state.login.error,\n        data: state.login && state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUsersSuccess: (data) => dispatch(loginUserSuccess(data)),\n        loginUsersError: (data) => dispatch(loginUserError(data))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","D:\\w3bizz\\React\\src\\component\\about\\Register.js",["186","187","188"],"import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { toast, ToastContainer } from 'react-toastify';\nimport { registerApi } from '../../Services/apiFunction';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Typography} from '@material-ui/core'\n\nclass Register extends React.Component {\n    state = {\n        data: '',\n        isSign: false\n    }\n    render() {\n        if (this.state.isSign === true) {\n            return <Redirect to=\"/login\" />\n        }\n        return (\n            <>\n                <ToastContainer />\n                <br />\n                <div className=\"row\">\n                <div className=\"col-sm-3\">\n                </div>\n                <div className=\"col-sm-8\" id=\"body\" style={{ marginLeft: \"15%\" }}>\n                    <Formik\n                        initialValues={{\n                            fname: '',\n                            lname: '',\n                            email: '',\n                            password: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            fname: Yup.string()\n                                .required('First Name is required'),\n                            lname: Yup.string()\n                                .required('Last Name is required'),\n                            email: Yup.string()\n                                .email('Email is invalid')\n                                .required('Email is required'),\n                            password: Yup.string()\n                                .required('Password is required')\n                                .matches(\n                                    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                                    \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n                                ),\n                        })}\n                        onSubmit={async (fields) => {\n                            const response = await registerApi(fields)\n                            if (response.data.success == \"1\") {\n                                toast.success('Registration Successfully')\n                                this.props.history.push('/login')\n                            } else {\n                                toast.error('Registration Unsuccessfully')\n                            }\n                        }}\n                        render={({ errors, touched, setFieldValue }) => (\n                            <div className=\"card card-Width\">\n                                <div className=\"card-body\">\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"First Name\">First Name</label>\n                                            <Field name=\"fname\" type=\"text\" className={'form-control' + (errors.fname && touched.fname ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"fname\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Last Name\">Last Name</label>\n                                            <Field name=\"lname\" type=\"text\" className={'form-control' + (errors.lname && touched.lname ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"lname\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\">Email</label>\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-info mr-2\">Register</button>\n                                            &nbsp;\n                                            <button type=\"reset\" className=\"btn btn-secondary\"\n                                                onClick={this.ResetFunction}>Reset</button>\n                                        </div>\n                                        <Typography variant=\"body1\">\n                                            Already Have an Account?{' '}\n                                            <Link to=\"/login\">\n                                                Login\n                                            </Link>\n                                        </Typography>\n                                    </Form>\n                                </div>\n                            </div>\n                        )}\n                    />\n                </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(Register);\n","D:\\w3bizz\\React\\src\\component\\blogHome\\BlogHome.js",["189","190","191","192","193"],"D:\\w3bizz\\React\\src\\component\\privateRoute\\ProtectedRoute.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\WebTemplate.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport * as actions from '../../redux/actions/GetBlogByIdActions'\r\nimport Modal from 'react-modal'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect } from 'react-router';\r\nimport AdminLayout from '../AdminLayout';\r\n\r\n\r\n\r\nclass ShowBlogById extends Component {\r\n\r\n    state = {\r\n        user: this.props.user,\r\n        showModal: false,\r\n        id: '',\r\n        img: '',\r\n        name: '',\r\n        template: false,\r\n        string: \"\",\r\n        blog:[]\r\n    }\r\n\r\n    handleView() {\r\n        window.open('http://localhost:8080', 'blank')\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.template) {\r\n            window.open('http://localhost:8080')\r\n        }\r\n        if ((this.props.blogStatus === undefined) && (this.props.pending === true)) {\r\n            <p>Loading...</p>\r\n        }\r\n        const { blogStatus, comment, isWebPage } = this.props\r\n        const { user } = this.state\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '30%',\r\n                right: '26%',\r\n                bottom: 'auto',\r\n                transform: 'translate(-50%, -50%)'\r\n            }\r\n        };\r\n\r\n        const classes = makeStyles({\r\n            root: {\r\n                minWidth: 275,\r\n            },\r\n            bullet: {\r\n                display: 'inline-block',\r\n                margin: '0 2px',\r\n                transform: 'scale(0.8)',\r\n            },\r\n            title: {\r\n                fontSize: 14,\r\n            },\r\n            pos: {\r\n                marginBottom: 12,\r\n            },\r\n        });\r\n        Modal.setAppElement('*')\r\n        return (\r\n            <>\r\n                <AdminLayout />\r\n                <div style={{ marginLeft: \"17%\", marginTop:\"4%\" }} className=\"justify-content-center\">\r\n                    {this.state.blog.length > 0 &&\r\n                        this.props.blog.map(value =>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-offset-2 col-sm-2 col-xs-offset-2 col-xs-2\">\r\n                                    <Card className={classes.root} variant=\"outlined\">\r\n                                        <CardContent>\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                Title:{value.blogTitle}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                Description:{value.desc}\r\n                                            </Typography>\r\n                                            <br />\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    {this.state.blog.length == 0 &&\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-offset-2 col-sm-3 col-xs-offset-3 col-xs-3\">\r\n                                <Card className={classes.root} variant=\"outlined\">\r\n                                    <CardContent>\r\n                                        <br />\r\n                                        <span style={{display: \"flex\", justifyContent: \"center\"}}><FaPlusCircle size={70}/></span>\r\n                                        <br />\r\n                                    </CardContent>\r\n                                    <br />\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {/* {this.state.id!==''&&\r\n            <Modal isOpen={this.state.showModal} style={customStyles}>\r\n                    <div className=\"panel panel-default \">\r\n                    <div className=\"panel-heading\">Change Profile\r\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\r\n                    \r\n                    </div>\r\n                    <div className=\"panel panel-body\">\r\n                    <div className=\"col-sm-4\">\r\n                    <img src={this.state.img} alt=\"profile\" className=\"img-responsive photo2\" />\r\n                    </div>\r\n                    <div className=\"col-sm-8 container\">\r\n                        <div className=\"panel panel-default \">\r\n                            <div className=\"panel-heading\">\r\n                                {this.state.name}\r\n                            </div>\r\n                            <div className=\"panel-body\">\r\n                                {comment.filter(val=>(val.blog_id===this.state.id)).map(values=>\r\n                                <div className=\"div1\">\r\n                                    <div style={{fontWeight:'bold'}}>{values.user_name}</div>\r\n                                    <div>{values.comment}</div>\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"panel panel-footer\">\r\n            <Formik\r\n                initialValues={{\r\n                    \r\n                    comment:''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                   comment:Yup.string().required('Please Enter Comment ')\r\n                })}\r\n                onSubmit={(fields,{resetForm,initialValues}) => {\r\n                    fields.blog_id = this.state.id\r\n                    fields.user_name = user.name\r\n                    this.props.createComment(fields)\r\n                    resetForm(initialValues)\r\n                    this.componentDidMount()\r\n                    this.setState({showModal:false})\r\n                }}\r\n                render={({ errors, touched}) => (\r\n                    \r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <Field as=\"textarea\" name=\"comment\"\r\n                            className={'form-control' + (errors.comment && touched.comment ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"comment\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" \r\n                            className=\"btn btn-primary\"\r\n                            >Comment</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </div>\r\n            </div>\r\n            </Modal>\r\n            } */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        user: state.login.data,\r\n        blog: state.getBlogById.allBlog,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchIdPage: () => dispatch(actions.fetchIdTemplate()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowBlogById);\r\n","D:\\w3bizz\\React\\src\\component\\blogHome\\AdminBlogHome.js",["216","217","218","219","220","221","222","223","224","225"],"import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { getAdminBlogIdSuccess, defaultPagesSuccess } from '../../redux/actions/GetBlogByIdActions'\nimport ShowBlogById from './ShowBlogById';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from '../AdminLayout';\nimport { addPage, addTemplate, getTemplate, uploadImage } from '../../Services/apiFunction';\nimport { CircularProgress } from '@material-ui/core'\nimport AdminShowBlogById from './AdminShowBlogById';\nimport moment from 'moment'\nimport Lottie from 'react-lottie';\nimport LottieIcon from './LottieIco';\nimport loadingAnimationData from './loadingV2.json'\n\n\nclass BlogHome extends Component {\n    state = {\n        showModal: false,\n        loader: true,\n        file: '',\n        isPaused:true,\n        isStopped:true,\n        string: window.location.pathname.split(\"/\")[1],\n    }\n\n\n    async componentDidMount() {\n        const response = await getTemplate(this.props.user.username)\n        if (response.STATUS == \"SUCCESS\") {\n            this.props.createBlog(response.DEFAULT_TEMPLATE)\n            this.setState({ loader: false })\n        }\n\n    }\n\n    render() {\n        const customStyles = {\n            content: {\n                top: '40%',\n                left: '50%',\n                right: '50%',\n                bottom: 'auto',\n                marginRight: '-50%',\n                transform: 'translate(-50%, -50%)'\n            }\n        };\n        Modal.setAppElement('*')\n        const loadingOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: loadingAnimationData,\n        };\n        const { user } = this.props;\n        const { loader, file } = this.state\n        const string = window.location.pathname.split(\"/\")[1]\n        const isWebPage = string.includes(\"Web\")\n        return loader ?\n            (\n                <>\n                <div style={{ display: 'flex', justifyContent: 'center', paddingTop: \"10%\" }}>\n                <LottieIcon Play={true} animationData={loadingAnimationData} height={50} width={50} pause={this.state.copyState} />                \n                </div>\n                </>\n            ) :\n            (\n                <>\n                    <AdminLayout title=\"Default Templates\">\n                        <div style={{ boxSizing: \"border-box\", width: \"100%\", height: \"4em\" }}>\n                            {user.type == \"ADMIN\" &&\n                                <button style={{ float: \"right\", borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} className=\"btn text-white\" onClick={() => this.setState({ showModal: true })}>Create Template</button>\n                            }\n                        </div>\n                        <br />\n                        <AdminShowBlogById />\n                    </AdminLayout>\n                    <ToastContainer />\n                    <Modal isOpen={this.state.showModal} style={customStyles}>\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-heading\"><h3>Create Template\n                                {this.state.loader ?\n                                     <LottieIcon Play={true} animationData={loadingAnimationData} height={50} width={50} />\n                                     :\n                                    <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n                                }\n                            </h3>\n                            </div>\n                            <div className=\"panel panel-body\">\n                                <Formik\n                                    initialValues={{\n                                        title: '',\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                        title: Yup.string()\n                                            .required('Template Title is required'),\n                                    })}\n                                    onSubmit={async (fields, { resetForm, initialValues }) => {\n                                        this.setState({ loader: true })\n                                        if (file) {\n                                            const response = await uploadImage(file)\n                                            fields.image = response.data.secure_url\n                                        }\n                                        fields.username = user.username\n                                        fields.category = \"new category\"\n                                        fields.type = \"DEFAULT\"\n                                        fields.tags = \"new tags\"\n                                        const resp = await addTemplate(fields)\n                                        if (resp.STATUS == \"SUCCESS\") {\n                                            resetForm(initialValues)\n                                            toast.success(\"Template Created Successfully\")\n                                            let obj = {}\n                                            obj.title = \"Home Page\"\n                                            obj.publish_name = \"New Template\"\n                                            obj.template_id = resp.TEMPLATE_ID\n                                            obj.code = \"new title\"\n                                            await addPage(obj)\n                                            const tempData1 = await getTemplate(user.username)\n                                            if (tempData1.STATUS = \"SUCCESS\") {\n                                                this.setState({ showModal: false })\n                                                this.setState({ loader: false })\n                                                this.props.createBlog(tempData1.DEFAULT_TEMPLATE)\n                                            }\n                                        }\n                                        else {\n                                            this.setState({ loader: false })\n                                            toast.success(resp.data.message)\n                                        }\n                                    }}\n                                    render={({ errors, touched, setFieldValue }) => (\n\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"title\">Title</label>\n                                                <Field name=\"title\" type=\"text\" className={'form-control' + (errors.title && touched.title ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"title\">Images</label>\n                                                <input name=\"image\" onChange={(e) => { this.setState({ file: e.target.files[0] }) }} type=\"file\" className=\"form-control\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <button type=\"submit\" className=\"btn btn-primary\">Create Page Template</button>\n                                                &nbsp;\n                                                <button type=\"reset\" onClick={() => this.fileInput.value = \"\"} className=\"btn btn-secondary\">Reset</button>\n                                            </div>\n                                        </Form>\n                                    )}\n                                />\n                            </div>\n                        </div>\n                    </Modal>\n\n                </>\n            );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.login && state.login.data,\n        defaultPages: state.getBlogById && state.getBlogById.defaultPages\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createBlog: (data) => dispatch(getAdminBlogIdSuccess(data)),\n        defaultPages: (data) => dispatch(defaultPagesSuccess(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogHome);\n","D:\\w3bizz\\React\\src\\component\\home\\Home.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\RecentPage.js",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"D:\\w3bizz\\React\\src\\component\\blogHome\\WebHome.js",["243","244"],"import React, { Component } from 'react';\nimport BlogNavBar from '../BlogNavBar';\nimport Modal from 'react-modal'\nimport { Formik, Field, Form, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport {createTemplate} from '../../redux/actions/GetBlogByIdActions'\nimport ShowBlogById from './ShowBlogById';\nimport moment from \"moment\"\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from '../AdminLayout'\n\nclass BlogHome extends Component {\n    state={\n        showModal:false,\n        string:window.location.pathname.split(\"/\")[1],\n        user:JSON.parse(localStorage.getItem('user'))\n    }\n   \n    render() {\n        const customStyles = {\n            content : {\n              top                   : '40%',\n              left                  : '50%',\n              right                 : '50%',\n              bottom                : 'auto',\n              marginRight           : '-50%',\n              transform             : 'translate(-50%, -50%)'\n            }\n          };\n           Modal.setAppElement('*')\n          const {user} = this.props;\n          const string = window.location.pathname.split(\"/\")[1]\n          const isWebPage = string.includes(\"Web\")\n        return (\n            <>\n                <AdminLayout isWebPage={isWebPage}/>\n                <div id=\"bloghome\">\n                <button className=\"btn btn-primary\" onClick={()=>this.setState({showModal:true})}>Create Web Template</button>\n                </div>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <div id=\"myblogbody\">\n                    <ShowBlogById isWebPage={isWebPage}/>\n                </div>\n\n                <ToastContainer />\n            <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\"><h3>Create Web Template\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\n                    </h3>\n                    </div>\n                    <div className=\"panel panel-body\">\n            <Formik\n                initialValues={{\n                    title: '',\n                    publish_name: '',\n                }}\n                validationSchema={Yup.object().shape({\n                    title: Yup.string()\n                        .required('Title is required'),\n                })}\n                onSubmit={(fields,{resetForm,initialValues}) => {\n                    fields.username = user.username\n                    fields.id = Math.floor(Math.random()*1000000)\n                    fields.category = \"new category\"\n                    fields.tags = \"new tags\" \n                    this.props.createBlog(fields)\n                    resetForm(initialValues)\n                    this.setState({showModal:false})\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 500);\n                }}\n                render={({ errors, touched ,setFieldValue }) => (\n                    \n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <Field name=\"title\" type=\"text\" className={'form-control' + (errors.title && touched.title ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"category\">Category</label>\n                            <Field name=\"category\" type=\"text\" className={'form-control' + (errors.category && touched.category ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"category\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"tags\">Category</label>\n                            <Field name=\"tags\" type=\"text\" className={'form-control' + (errors.tags && touched.tags ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"tags\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" \n                            className=\"btn btn-primary\"\n                            >Create Web Template</button>\n                            &nbsp;\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                    </Form>\n                )}\n            />\n            </div>\n            </div>\n            </Modal>\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    user:state.login && state.login.data\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    createBlog:(data)=>dispatch(createTemplate(data))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BlogHome);\n","D:\\w3bizz\\React\\src\\component\\profile\\ProfileUpdate.js",["245","246","247","248","249","250"],"D:\\w3bizz\\React\\src\\Services\\apiFunction.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\ShowBlogById.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"D:\\w3bizz\\React\\src\\component\\AdminLayout.js",["271","272","273","274","275","276","277","278"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse'\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\nimport WebIcon from '@material-ui/icons/Web';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { Home } from '@material-ui/icons';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { NavLink } from 'react-router-dom';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport { Link } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { loginUserSuccess } from '../redux/actions/LoginActions'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  menuItem: {\n    width: drawerWidth,\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    height:\"5.35em\",\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  typography: {\n    padding: theme.spacing(2),\n    cursor:\"default\",\n  },\n  activeListItem: {\n    borderLeft: `4px solid ${\"lightgrey\"}`,\n    borderRadius: '4px',\n    backgroundColor: \"lightgrey\",\n    '& $listItemText': {\n      color: theme.palette.text.primary\n    },\n    '& $listItemIcon': {\n      color: theme.palette.primary.main,\n      marginLeft: '-4px'\n    }\n  }\n}));\n\nexport default function AdminLayout(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const openAnchor = Boolean(anchorEl);\n  const id = openAnchor ? 'simple-popover' : undefined;\n  \n  function handleClick() {\n    setOpen1(!open1)\n  }\n\n  function handleClick2() {\n    setOpen2(!open2)\n  }\n\n  const handleClickAnchor = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseAnchor = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n        localStorage.clear()\n        let obj = {}\n        dispatch(loginUserSuccess(obj))\n        history.push('/login')\n  }\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"#1DABB8\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar style={{color:\"#1DABB8\"}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap style={{flex:1}}>\n            {props.title}\n          </Typography>\n          <div>\n            <img src=\"/humanavtar.jpg\" height=\"75em\" aria-describedby={id} variant=\"contained\" style={{color:\"grey\"}} onClick={handleClickAnchor}/>\n            <Button className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} onClick={()=>{logout()}}>Logout</Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <ListItem button component={NavLink} to=\"/recentWebTemplate\" className={classes.menuItem} activeClassName={classes.activeListItem}>\n        <ListItemIcon className={classes.menuItemIcon}>\n          <Home />\n        </ListItemIcon>\n        <ListItemText primary=\"Recent\" />\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem >\n          <ListItemIcon className={classes.menuItemIcon}>\n          <WebAssetIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/recentPageTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <PageviewIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse>\n\n      <ListItem  button component={NavLink} to=\"/savedWebTemplate\" className={classes.menuItem} activeClassName={classes.activeListItem}>\n        <ListItemIcon selected={true} className={classes.menuItemIcon}>\n          <WebIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Template\" />\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem button component={NavLink} to=\"/savedWebTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <WebAssetIcon />\n        </ListItemIcon>\n          <ListItemText primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/savedPageTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <PageviewIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div>\n        {props.children}\n        </div>\n      </main>\n      <Popover\n        id={id}\n        open={openAnchor}\n        anchorEl={anchorEl}\n        onClose={handleCloseAnchor}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography} onClick={()=>{history.push('/updateProfile')}}>User-Profile</Typography>\n      </Popover>\n    </div>\n  );\n}\n\nAdminLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n","D:\\w3bizz\\React\\src\\component\\privateRoute\\Auth.js",[],"D:\\w3bizz\\React\\src\\component\\Header.js",["279"],"import React, {Component} from 'react'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport './main.css'\n\nexport default class Navigation extends Component {\n    state = {\n        token:JSON.parse(localStorage.getItem('login'))\n    }\n    render(){\n        // if(this.state.token===true){\n          \n        //     return <Redirect to='/bloghome' />\n        // }\n        return(\n            <div>\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n                <div className=\"container-fluid\">\n                <ul className=\"nav navbar-nav navbar-right\">\n                    <li ><NavLink to=\"/home\" activeClassName='active'>\n                    <span className=\"text-primary\">Home</span></NavLink></li>\n                    <li ><NavLink to=\"/contact-us\" activeClassName='active'>\n                    <span className=\"text-primary\">Contact</span></NavLink></li>\n                    <li ><NavLink to=\"/login\" activeClassName='active'>\n                        <span className=\"text-primary\">Get-In_Touch</span></NavLink></li>\n                </ul>\n                </div>\n            </nav>\n            </div>\n        )\n    }\n}","D:\\w3bizz\\React\\src\\component\\BlogNavBar.js",["280"],"import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport './main.css'\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'\nimport Modal from 'react-modal'\nimport { loginUserSuccess } from '../redux/actions/LoginActions';\nimport { patchApi } from '../Services/apiFunction'\n\nclass BlogNavBar extends Component {\n    state = {\n        user: this.props.user,\n        showModal: false\n    }\n    logOut = () => {\n        localStorage.removeItem('user')\n        localStorage.removeItem('token')\n        localStorage.setItem('login', JSON.stringify(false))\n    }\n\n    onSubmit = async (fields) => {\n        //e.prevetDefault()\n        fields.id = this.props.user.id\n        //resetForm(initialValues)\n        await patchApi(fields.id, fields)\n            .then((res) => {\n                this.props.updateImage(res.data)\n            })\n        this.setState({ showModal: false })\n    }\n    render() {\n        const customStyles = {\n            content: {\n                top: '43%',\n                left: '75%',\n                right: '0%',\n                bottom: 'auto',\n                transform: 'translate(-0%, -50%)'\n            }\n        };\n\n        Modal.setAppElement('*')\n        const { user } = this.props\n        return (\n            <>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top justify-content-between\">\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <ul className=\"nav navbar-nav ml-auto\" >\n                            <li className=\"nav-item\">\n                            <img src={user.imgSrc} className=\"rounded-circle\" alt=\"profile\" width=\"45\" height=\"45\" onClick={() => this.setState({ showModal: true })} />&nbsp;\n                            </li>\n                            <li className=\"nav-item\">\n                            <Link to=\"/home\" onClick={() => this.logOut()} className=\"btn btn-danger\">Back To Login</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default \">\n                        <div className=\"panel-heading\">Change Profile\n                            <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n\n                        </div>\n                        <div className=\"panel panel-body\">\n                            <Formik\n                                initialValues={{\n                                    imgSrc: user.imgSrc\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    imgSrc: Yup.string().required('Please Select Image')\n                                })}\n                                onSubmit={this.onSubmit}\n                                render={({ errors, touched, fields, initialValues, setFieldValue }) => (\n\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <img src={initialValues.imgSrc} alt=\"profile\" width=\"350\" height=\"400\" />\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"image\">Blog Profile-Image</label>\n                                            <input name=\"imgSrc\" type=\"file\" accept=\"image/*\"\n                                                onChange={(event) => {\n                                                    if (event.target.files && event.target.files[0]) {\n                                                        let reader = new FileReader(event.target.files[0]);\n                                                        reader.onloadend = () => {\n                                                            setFieldValue('imgSrc', reader.result)\n                                                        }\n                                                        reader.readAsDataURL(event.target.files[0]);\n\n                                                    }\n                                                    else { setFieldValue('imgSrc', '') }\n                                                }\n                                                }\n                                                ref={ref => this.fileInput = ref}\n                                                className={'form-control' + (errors.imgSrc && touched.imgSrc ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"imgSrc\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\"\n                                                className=\"btn btn-primary\"\n                                            >Update Image</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        data: state.getData.data,\n        user: state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateImage: (data) => (dispatch(loginUserSuccess(data)))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogNavBar);","D:\\w3bizz\\React\\src\\redux\\actions\\LoginActions.js",["281"],"import axios from 'axios'\n\nexport const loginUserError = (error) => {\n    return{\n        type:'LOGINUSERERROR',\n        payload:error\n    }\n}\n\nexport const loginUserSuccess = (data) => {\n    return{\n        type:'LOGINUSERSUCCESS',\n        payload:data\n    }\n}\n","D:\\w3bizz\\React\\src\\redux\\actions\\GetBlogByIdActions.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\RecentPageById.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],"D:\\w3bizz\\React\\src\\component\\blogHome\\AdminRecentPageById.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"D:\\w3bizz\\React\\src\\redux\\reducer\\LoginReducers.js",[],"D:\\w3bizz\\React\\src\\redux\\reducer\\GetBlogByIdReducers.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\AdminShowBlogById.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"D:\\w3bizz\\React\\src\\component\\home\\HomeNavBar.js",["340","341"],"import React, { useState } from 'react';\r\n\r\nconst HomeNavBar = () => {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top \">\r\n               <div className=\"container \">\r\n                 <a\r\n                  aria-current=\"page\"\r\n                  className=\"navbar-brand\"\r\n                  href=\"https://www.chatwoot.com/\"\r\n                >\r\n                  <img\r\n                    src=\"/asset/brand-d6ec4f18194acc9e590c511b9ae51974.svg\"\r\n                    className=\"navbar-brand-img\"\r\n                    alt=\"...\"\r\n                    style={{maxHeight: \"2rem\" ,verticalAlign: \"top\",width: \"auto\"}}\r\n                  />\r\n                </a>\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarCollapse\"\r\n                  aria-controls=\"navbarCollapse\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n                  <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div\r\n                  className=\"collapse navbar-collapse justify-content-end mt-xs-10\"\r\n                  id=\"navbarCollapse\"\r\n                >\r\n                  <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item dropdown\">\r\n                      <a\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        id=\"navbarDocumentation\"\r\n                        data-toggle=\"dropdown\"\r\n                        href=\"https://www.chatwoot.com/#\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        Features\r\n                      </a>\r\n                      <div\r\n                        className=\"dropdown-menu dropdown-menu-md px-5 bg-white\"\r\n                        aria-labelledby=\"navbarDocumentation\"\r\n                      >\r\n                        <div className=\"row \">\r\n                          <div className=\"col-md-6 border-right-md\">\r\n                            <div className=\"list-group list-group-flush \">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/shared-inbox\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Shared Inbox\">\r\n                                        📥\r\n                                      </span>\r\n                                    </div>\r\n                                    Shared inbox\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Collaborate easily with other agents and manage\r\n                                    conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/live-chat\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        💬\r\n                                      </span>\r\n                                    </div>\r\n                                    Live Chat\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Simple and elegant live chat for your website\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/channels\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        🎡\r\n                                      </span>\r\n                                    </div>\r\n                                    Channels\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Connect with your customers on the channels of\r\n                                    their choice\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"list-group list-group-flush border-top border-top-md-0\">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/chatbots\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Chatbots\">\r\n                                        🤖\r\n                                      </span>\r\n                                    </div>\r\n                                    Chatbots\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Easily integrate with popular chatbot platforms to\r\n                                    automate conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/mobile-apps\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Mobile apps\">\r\n                                        📱\r\n                                      </span>\r\n                                    </div>\r\n                                    Mobile apps\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Don't miss out on new customers. Manage\r\n                                    conversations on the go\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/integrations\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Integrations\">\r\n                                        ⚡\r\n                                      </span>\r\n                                    </div>\r\n                                    Integrations\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Super charge your workflow with integrations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/blog\">\r\n                        Blog\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/pricing\">\r\n                        Pricing\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://www.chatwoot.com/help-center\"\r\n                      >\r\n                        Help Center\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item mr-4\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://app.chatwoot.com/app/login\"\r\n                      >\r\n                        Login\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <a\r\n                    className=\"navbar-btn btn btn-sm btn-primary lift\"\r\n                    href=\"https://app.chatwoot.com/app/auth/signup\"\r\n                  >\r\n                    Create an account\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n            </>\r\n    );\r\n}\r\n \r\nexport default HomeNavBar;","D:\\w3bizz\\React\\src\\Services\\headerServices.js",[],"D:\\w3bizz\\React\\src\\component\\blogHome\\LottieIcon.js",[],"D:\\w3bizz\\React\\src\\component\\about\\ForgotPassword.js",["342","343","344","345","346","347","348","349","350"],"import React, { Component } from 'react';\nimport Navigation from '../Header';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { loginUserError, loginUserSuccess } from '../../redux/actions/LoginActions'\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { postLogin, sendEmailOTP, sendVerifyOTP, patchApi } from '../../Services/apiFunction'\nimport { CircularProgress, Typography } from '@material-ui/core'\nimport '../App.css'\n\nclass ForgotPassword extends Component {\n    state = {\n        otpDisplay: false,\n        loader: false,\n        passwordDisplay:false,\n        otpError:false,\n        passwordError:false,\n        email:'',\n    }\n\n    onOTPSubmit = async (fields) => {\n      const obj = {}\n        obj.email = fields.email\n        obj.otp = fields.otp\n        const response = await sendVerifyOTP(obj)\n        if(response.STATUS == \"SUCCESS\"){\n          this.setState({email:fields.email})\n          this.setState({passwordDisplay:true})\n        }else{\n          this.setState({otpError:true})\n        }\n    }\n\n    onEmailSubmit = async (fields) => {\n      const obj = {}\n      obj.email = fields.email\n      const response = await sendEmailOTP(obj)\n      if(response.STATUS == \"SUCCESS\"){\n        this.setState({email:fields.email})\n        this.setState({otpDisplay:true})\n      }else{\n        this.setState({passwordError:true})\n      }\n  }\n\n  onPasswordSubmit = async (fields) => {\n    const obj = {}\n    obj.email = fields.email\n    obj.password = fields.password\n    const response = await patchApi(obj)\n    if(response.STATUS == \"SUCCESS\"){\n      this.props.history.push('/login')\n      this.setState({email:fields.email})\n    }\n}\n    render() {\n        return (\n            <>\n                <div className=\"row container\">\n                    <div className=\"col-sm-7\" style={{ marginTop: \"7%\" }}></div>\n                    <div className=\"col-sm-5 col-xs-12\" style={{ marginTop: \"7%\" }}>\n                    {!this.state.otpDisplay && !this.state.passwordDisplay &&\n                      <Formik\n                            initialValues={{\n                                email: ''\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required')\n                            })}\n                            onSubmit={this.onEmailSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />}\n                        {this.state.otpDisplay && !this.state.passwordDisplay &&\n                        <Formik\n                            initialValues={{\n                                email: this.state.email,\n                                otp:''\n                            }}\n                            validationSchema={Yup.object().shape({\n                                otp: Yup.string().required('Please Enter OTP')\n                            })}\n                            onSubmit={this.onOTPSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"otp\">Enter OTP</label>\n                                                <Field name=\"otp\" type=\"text\" className={'form-control' + (errors.otp && touched.otp ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"otp\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        {this.state.otpError &&<div style={{color:\"darkred\"}}>Please Enter Correct OTP</div>}\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        }\n                        {this.state.passwordDisplay && this.state.otpDisplay &&\n                          <Formik\n                            initialValues={{\n                                email: this.state.email,\n                                password: '',\n                            }}\n                            validationSchema={Yup.object().shape({\n                                password: Yup.string()\n                                    .min(6, 'Password must be at least 6 characters')\n                                    .required('Password is required')\n                            })}\n                            onSubmit={this.onPasswordSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"password\">Password</label>\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        <br />\n                                        {this.state.passwordError &&<div style={{color:\"darkred\"}}>Please Enter Correct Password</div>}\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        }\n                        <ToastContainer />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.login && state.login.error,\n        data: state.login && state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUsersSuccess: (data) => dispatch(loginUserSuccess(data)),\n        loginUsersError: (data) => dispatch(loginUserError(data))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPassword));","D:\\w3bizz\\React\\src\\component\\about\\Usernameschema.js",["351"],"D:\\w3bizz\\React\\src\\component\\about\\OtpSchema.js",["352"],"D:\\w3bizz\\React\\src\\component\\about\\Styles.js",["353"],"D:\\w3bizz\\React\\src\\component\\about\\Passwordschema.js",["354"],"export default {\r\n    password: {\r\n      presence: { allowEmpty: false, message: 'is required' },\r\n      length: {\r\n        maximum: 64\r\n      }\r\n    }\r\n};\r\n",["355","356"],"D:\\w3bizz\\React\\src\\component\\about\\UserNameSchema.js",["357"],"D:\\w3bizz\\React\\src\\component\\about\\PasswordSchema.js",["358"],"D:\\w3bizz\\React\\src\\component\\blogHome\\LottieIco.js",[],"D:\\w3bizz\\React\\src\\component\\payment\\StripeApp.js",["359"],"import React, { useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe\r\n} from \"@stripe/react-stripe-js\";\r\nimport \"./styles.css\";\r\n\r\nconst CARD_OPTIONS = {\r\n  iconStyle: \"solid\",\r\n  style: {\r\n    base: {\r\n      iconColor: \"#c4f0ff\",\r\n      color: \"blue\",\r\n      fontWeight: 500,\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSize: \"16px\",\r\n      fontSmoothing: \"antialiased\",\r\n      \":-webkit-autofill\": {\r\n        color: \"#fce883\"\r\n      },\r\n      \"::placeholder\": {\r\n        color: \"#87bbfd\"\r\n      }\r\n    },\r\n    invalid: {\r\n      iconColor: \"#ffc7ee\",\r\n      color: \"#ffc7ee\"\r\n    }\r\n  }\r\n};\r\n\r\nconst CardField = ({ onChange }) => (\r\n  <div className=\"FormRow\">\r\n    <CardElement options={CARD_OPTIONS} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nconst Field = ({\r\n  label,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  required,\r\n  autoComplete,\r\n  value,\r\n  onChange\r\n}) => (\r\n  <div className=\"FormRow\">\r\n    <label htmlFor={id} className=\"FormRowLabel\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      className=\"FormRowInput\"\r\n      id={id}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoComplete={autoComplete}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst SubmitButton = ({ processing, error, children, disabled }) => (\r\n  <button\r\n    className={`SubmitButton ${error ? \"SubmitButton--error\" : \"\"}`}\r\n    type=\"submit\"\r\n    disabled={processing || disabled}\r\n  >\r\n    {processing ? \"Processing...\" : children}\r\n  </button>\r\n);\r\n\r\nconst ErrorMessage = ({ children }) => (\r\n  <div role=\"alert\">\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 17 17\">\r\n      <path\r\n        fill=\"#F19\"\r\n        d=\"M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z\"\r\n      />\r\n      <path\r\n        fill=\"#6772e5\"\r\n        d=\"M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z\"\r\n      />\r\n    </svg>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst ResetButton = ({ onClick }) => (\r\n  <button type=\"button\" className=\"ResetButton\" onClick={onClick}>\r\n    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        fill=\"#blue \"\r\n        d=\"M15,7.05492878 C10.5000495,7.55237307 7,11.3674463 7,16 C7,20.9705627 11.0294373,25 16,25 C20.9705627,25 25,20.9705627 25,16 C25,15.3627484 24.4834055,14.8461538 23.8461538,14.8461538 C23.2089022,14.8461538 22.6923077,15.3627484 22.6923077,16 C22.6923077,19.6960595 19.6960595,22.6923077 16,22.6923077 C12.3039405,22.6923077 9.30769231,19.6960595 9.30769231,16 C9.30769231,12.3039405 12.3039405,9.30769231 16,9.30769231 L16,12.0841673 C16,12.1800431 16.0275652,12.2738974 16.0794108,12.354546 C16.2287368,12.5868311 16.5380938,12.6540826 16.7703788,12.5047565 L22.3457501,8.92058924 L22.3457501,8.92058924 C22.4060014,8.88185624 22.4572275,8.83063012 22.4959605,8.7703788 C22.6452866,8.53809377 22.5780351,8.22873685 22.3457501,8.07941076 L22.3457501,8.07941076 L16.7703788,4.49524351 C16.6897301,4.44339794 16.5958758,4.41583275 16.5,4.41583275 C16.2238576,4.41583275 16,4.63969037 16,4.91583275 L16,7 L15,7 L15,7.05492878 Z M16,32 C7.163444,32 0,24.836556 0,16 C0,7.163444 7.163444,0 16,0 C24.836556,0 32,7.163444 32,16 C32,24.836556 24.836556,32 16,32 Z\"\r\n      />\r\n    </svg>\r\n  </button>\r\n);\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [cardComplete, setCardComplete] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n  const [billingDetails, setBillingDetails] = useState({\r\n    email: \"vaibhavsilkmills@gmail.com\",\r\n    phone: \"9998565689\",\r\n    name: \"Vaibhav\"\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      elements.getElement(\"card\").focus();\r\n      return;\r\n    }\r\n\r\n    if (cardComplete) {\r\n      setProcessing(true);\r\n    }\r\n\r\n    const payload = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n      billing_details: billingDetails\r\n    });\r\n\r\n    setProcessing(false);\r\n\r\n    if (payload.error) {\r\n      setError(payload.error);\r\n    } else {\r\n      setPaymentMethod(payload.paymentMethod);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setError(null);\r\n    setProcessing(false);\r\n    setPaymentMethod(null);\r\n    setBillingDetails({\r\n      email: \"\",\r\n      phone: \"\",\r\n      name: \"Vaibhav\"\r\n    });\r\n  };\r\n\r\n  return paymentMethod ? (\r\n    <div className=\"Result\">\r\n      <div className=\"ResultTitle\" role=\"alert\">\r\n        Payment successful\r\n      </div>\r\n      <div className=\"ResultMessage\">\r\n        Thanks for trying Stripe Elements. No money was charged, but we\r\n        generated a PaymentMethod: {paymentMethod.id}\r\n      </div>\r\n      <ResetButton onClick={reset} />\r\n    </div>\r\n  ) : (\r\n    <form className=\"Form\" onSubmit={handleSubmit}>\r\n      <fieldset className=\"FormGroup\">\r\n        <CardField\r\n          onChange={(e) => {\r\n            setError(e.error);\r\n            setCardComplete(e.complete);\r\n          }}\r\n        />\r\n      </fieldset>\r\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\r\n      <SubmitButton processing={processing} error={error} disabled={!stripe}>\r\n        Pay $25\r\n      </SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ELEMENTS_OPTIONS = {\r\n  fonts: [\r\n    {\r\n      cssSrc: \"https://fonts.googleapis.com/css?family=Roboto\"\r\n    }\r\n  ]\r\n};\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\r\n\r\nconst StripeApp = () => {\r\n  return (\r\n    <div className=\"AppWrapper\">\r\n      <Elements stripe={stripePromise} options={ELEMENTS_OPTIONS}>\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeApp;\r\n",{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":6,"column":5,"nodeType":"366","messageId":"367","endLine":6,"endColumn":13},{"ruleId":"364","severity":1,"message":"368","line":12,"column":8,"nodeType":"366","messageId":"367","endLine":12,"endColumn":19},{"ruleId":"364","severity":1,"message":"369","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":15},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":18},{"ruleId":"364","severity":1,"message":"365","line":6,"column":16,"nodeType":"366","messageId":"367","endLine":6,"endColumn":24},{"ruleId":"371","severity":1,"message":"372","line":29,"column":38,"nodeType":"373","messageId":"374","endLine":29,"endColumn":40},{"ruleId":"364","severity":1,"message":"375","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":25},{"ruleId":"364","severity":1,"message":"376","line":4,"column":27,"nodeType":"366","messageId":"367","endLine":4,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":52,"column":55,"nodeType":"373","messageId":"374","endLine":52,"endColumn":57},{"ruleId":"364","severity":1,"message":"377","line":12,"column":10,"nodeType":"366","messageId":"367","endLine":12,"endColumn":26},{"ruleId":"364","severity":1,"message":"378","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":27,"column":29,"nodeType":"373","messageId":"374","endLine":27,"endColumn":31},{"ruleId":"364","severity":1,"message":"379","line":51,"column":15,"nodeType":"366","messageId":"367","endLine":51,"endColumn":24},{"ruleId":"371","severity":1,"message":"372","line":120,"column":66,"nodeType":"373","messageId":"374","endLine":120,"endColumn":68},{"ruleId":"364","severity":1,"message":"380","line":6,"column":10,"nodeType":"366","messageId":"367","endLine":6,"endColumn":16},{"ruleId":"364","severity":1,"message":"381","line":6,"column":18,"nodeType":"366","messageId":"367","endLine":6,"endColumn":25},{"ruleId":"364","severity":1,"message":"382","line":6,"column":27,"nodeType":"366","messageId":"367","endLine":6,"endColumn":38},{"ruleId":"364","severity":1,"message":"383","line":6,"column":40,"nodeType":"366","messageId":"367","endLine":6,"endColumn":52},{"ruleId":"364","severity":1,"message":"384","line":6,"column":54,"nodeType":"366","messageId":"367","endLine":6,"endColumn":66},{"ruleId":"364","severity":1,"message":"385","line":6,"column":68,"nodeType":"366","messageId":"367","endLine":6,"endColumn":79},{"ruleId":"364","severity":1,"message":"386","line":6,"column":81,"nodeType":"366","messageId":"367","endLine":6,"endColumn":87},{"ruleId":"364","severity":1,"message":"387","line":9,"column":8,"nodeType":"366","messageId":"367","endLine":9,"endColumn":19},{"ruleId":"364","severity":1,"message":"388","line":11,"column":8,"nodeType":"366","messageId":"367","endLine":11,"endColumn":14},{"ruleId":"364","severity":1,"message":"389","line":13,"column":10,"nodeType":"366","messageId":"367","endLine":13,"endColumn":16},{"ruleId":"364","severity":1,"message":"390","line":13,"column":18,"nodeType":"366","messageId":"367","endLine":13,"endColumn":23},{"ruleId":"364","severity":1,"message":"391","line":13,"column":25,"nodeType":"366","messageId":"367","endLine":13,"endColumn":29},{"ruleId":"364","severity":1,"message":"392","line":13,"column":31,"nodeType":"366","messageId":"367","endLine":13,"endColumn":43},{"ruleId":"364","severity":1,"message":"393","line":14,"column":13,"nodeType":"366","messageId":"367","endLine":14,"endColumn":16},{"ruleId":"364","severity":1,"message":"394","line":15,"column":10,"nodeType":"366","messageId":"367","endLine":15,"endColumn":14},{"ruleId":"364","severity":1,"message":"365","line":16,"column":10,"nodeType":"366","messageId":"367","endLine":16,"endColumn":18},{"ruleId":"364","severity":1,"message":"395","line":46,"column":17,"nodeType":"366","messageId":"367","endLine":46,"endColumn":27},{"ruleId":"364","severity":1,"message":"396","line":46,"column":29,"nodeType":"366","messageId":"367","endLine":46,"endColumn":36},{"ruleId":"364","severity":1,"message":"379","line":46,"column":38,"nodeType":"366","messageId":"367","endLine":46,"endColumn":47},{"ruleId":"364","severity":1,"message":"397","line":47,"column":17,"nodeType":"366","messageId":"367","endLine":47,"endColumn":21},{"ruleId":"364","severity":1,"message":"398","line":48,"column":15,"nodeType":"366","messageId":"367","endLine":48,"endColumn":27},{"ruleId":"371","severity":1,"message":"372","line":99,"column":45,"nodeType":"373","messageId":"374","endLine":99,"endColumn":47},{"ruleId":"364","severity":1,"message":"399","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":20},{"ruleId":"364","severity":1,"message":"377","line":12,"column":10,"nodeType":"366","messageId":"367","endLine":12,"endColumn":26},{"ruleId":"364","severity":1,"message":"378","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":14},{"ruleId":"364","severity":1,"message":"400","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":33,"column":29,"nodeType":"373","messageId":"374","endLine":33,"endColumn":31},{"ruleId":"364","severity":1,"message":"401","line":52,"column":15,"nodeType":"366","messageId":"367","endLine":52,"endColumn":29},{"ruleId":"364","severity":1,"message":"379","line":60,"column":15,"nodeType":"366","messageId":"367","endLine":60,"endColumn":24},{"ruleId":"371","severity":1,"message":"372","line":73,"column":40,"nodeType":"373","messageId":"374","endLine":73,"endColumn":42},{"ruleId":"371","severity":1,"message":"372","line":111,"column":57,"nodeType":"373","messageId":"374","endLine":111,"endColumn":59},{"ruleId":"402","severity":1,"message":"403","line":121,"column":49,"nodeType":"404","messageId":"405","endLine":121,"endColumn":77},{"ruleId":"364","severity":1,"message":"406","line":11,"column":43,"nodeType":"366","messageId":"367","endLine":11,"endColumn":53},{"ruleId":"364","severity":1,"message":"407","line":11,"column":55,"nodeType":"366","messageId":"367","endLine":11,"endColumn":69},{"ruleId":"364","severity":1,"message":"377","line":12,"column":10,"nodeType":"366","messageId":"367","endLine":12,"endColumn":26},{"ruleId":"364","severity":1,"message":"408","line":13,"column":10,"nodeType":"366","messageId":"367","endLine":13,"endColumn":20},{"ruleId":"364","severity":1,"message":"387","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":19},{"ruleId":"371","severity":1,"message":"409","line":44,"column":19,"nodeType":"373","messageId":"374","endLine":44,"endColumn":21},{"ruleId":"371","severity":1,"message":"372","line":52,"column":33,"nodeType":"373","messageId":"374","endLine":52,"endColumn":35},{"ruleId":"371","severity":1,"message":"372","line":53,"column":26,"nodeType":"373","messageId":"374","endLine":53,"endColumn":28},{"ruleId":"371","severity":1,"message":"372","line":102,"column":18,"nodeType":"373","messageId":"374","endLine":102,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":103,"column":46,"nodeType":"373","messageId":"374","endLine":103,"endColumn":48},{"ruleId":"371","severity":1,"message":"372","line":105,"column":51,"nodeType":"373","messageId":"374","endLine":105,"endColumn":53},{"ruleId":"364","severity":1,"message":"379","line":108,"column":15,"nodeType":"366","messageId":"367","endLine":108,"endColumn":24},{"ruleId":"371","severity":1,"message":"372","line":123,"column":43,"nodeType":"373","messageId":"374","endLine":123,"endColumn":45},{"ruleId":"371","severity":1,"message":"372","line":156,"column":61,"nodeType":"373","messageId":"374","endLine":156,"endColumn":63},{"ruleId":"371","severity":1,"message":"372","line":170,"column":57,"nodeType":"373","messageId":"374","endLine":170,"endColumn":59},{"ruleId":"371","severity":1,"message":"372","line":172,"column":65,"nodeType":"373","messageId":"374","endLine":172,"endColumn":67},{"ruleId":"410","severity":1,"message":"411","line":261,"column":65,"nodeType":"412","endLine":261,"endColumn":240},{"ruleId":"364","severity":1,"message":"413","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":18},{"ruleId":"364","severity":1,"message":"378","line":9,"column":8,"nodeType":"366","messageId":"367","endLine":9,"endColumn":14},{"ruleId":"364","severity":1,"message":"413","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":18},{"ruleId":"364","severity":1,"message":"375","line":5,"column":10,"nodeType":"366","messageId":"367","endLine":5,"endColumn":25},{"ruleId":"364","severity":1,"message":"376","line":5,"column":27,"nodeType":"366","messageId":"367","endLine":5,"endColumn":41},{"ruleId":"364","severity":1,"message":"414","line":13,"column":9,"nodeType":"366","messageId":"367","endLine":13,"endColumn":18},{"ruleId":"364","severity":1,"message":"415","line":58,"column":17,"nodeType":"366","messageId":"367","endLine":58,"endColumn":24},{"ruleId":"364","severity":1,"message":"416","line":58,"column":26,"nodeType":"366","messageId":"367","endLine":58,"endColumn":32},{"ruleId":"364","severity":1,"message":"394","line":10,"column":10,"nodeType":"366","messageId":"367","endLine":10,"endColumn":14},{"ruleId":"364","severity":1,"message":"407","line":12,"column":74,"nodeType":"366","messageId":"367","endLine":12,"endColumn":88},{"ruleId":"364","severity":1,"message":"417","line":20,"column":8,"nodeType":"366","messageId":"367","endLine":20,"endColumn":17},{"ruleId":"364","severity":1,"message":"418","line":22,"column":8,"nodeType":"366","messageId":"367","endLine":22,"endColumn":28},{"ruleId":"371","severity":1,"message":"372","line":69,"column":33,"nodeType":"373","messageId":"374","endLine":69,"endColumn":35},{"ruleId":"419","severity":1,"message":"420","line":104,"column":37,"nodeType":"421","messageId":"422","endLine":104,"endColumn":39},{"ruleId":"419","severity":1,"message":"420","line":105,"column":50,"nodeType":"421","messageId":"422","endLine":105,"endColumn":52},{"ruleId":"371","severity":1,"message":"372","line":106,"column":37,"nodeType":"373","messageId":"374","endLine":106,"endColumn":39},{"ruleId":"371","severity":1,"message":"409","line":122,"column":17,"nodeType":"373","messageId":"374","endLine":122,"endColumn":19},{"ruleId":"371","severity":1,"message":"409","line":135,"column":37,"nodeType":"373","messageId":"374","endLine":135,"endColumn":39},{"ruleId":"371","severity":1,"message":"372","line":145,"column":37,"nodeType":"373","messageId":"374","endLine":145,"endColumn":39},{"ruleId":"371","severity":1,"message":"372","line":167,"column":29,"nodeType":"373","messageId":"374","endLine":167,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":171,"column":27,"nodeType":"373","messageId":"374","endLine":171,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":189,"column":29,"nodeType":"373","messageId":"374","endLine":189,"endColumn":31},{"ruleId":"364","severity":1,"message":"395","line":212,"column":17,"nodeType":"366","messageId":"367","endLine":212,"endColumn":27},{"ruleId":"364","severity":1,"message":"396","line":212,"column":29,"nodeType":"366","messageId":"367","endLine":212,"endColumn":36},{"ruleId":"364","severity":1,"message":"379","line":212,"column":38,"nodeType":"366","messageId":"367","endLine":212,"endColumn":47},{"ruleId":"410","severity":1,"message":"411","line":272,"column":37,"nodeType":"412","endLine":272,"endColumn":212},{"ruleId":"371","severity":1,"message":"372","line":351,"column":55,"nodeType":"373","messageId":"374","endLine":351,"endColumn":57},{"ruleId":"410","severity":1,"message":"411","line":378,"column":45,"nodeType":"412","endLine":378,"endColumn":128},{"ruleId":"364","severity":1,"message":"423","line":23,"column":8,"nodeType":"366","messageId":"367","endLine":23,"endColumn":22},{"ruleId":"364","severity":1,"message":"424","line":24,"column":8,"nodeType":"366","messageId":"367","endLine":24,"endColumn":22},{"ruleId":"364","severity":1,"message":"425","line":26,"column":8,"nodeType":"366","messageId":"367","endLine":26,"endColumn":17},{"ruleId":"364","severity":1,"message":"426","line":28,"column":8,"nodeType":"366","messageId":"367","endLine":28,"endColumn":29},{"ruleId":"364","severity":1,"message":"394","line":32,"column":10,"nodeType":"366","messageId":"367","endLine":32,"endColumn":14},{"ruleId":"364","severity":1,"message":"427","line":137,"column":12,"nodeType":"366","messageId":"367","endLine":137,"endColumn":23},{"ruleId":"364","severity":1,"message":"428","line":141,"column":12,"nodeType":"366","messageId":"367","endLine":141,"endColumn":24},{"ruleId":"410","severity":1,"message":"411","line":189,"column":13,"nodeType":"412","endLine":189,"endColumn":148},{"ruleId":"364","severity":1,"message":"365","line":2,"column":18,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"364","severity":1,"message":"429","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"430","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":13},{"ruleId":"364","severity":1,"message":"394","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":45,"column":29,"nodeType":"373","messageId":"374","endLine":45,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":49,"column":27,"nodeType":"373","messageId":"374","endLine":49,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":62,"column":31,"nodeType":"373","messageId":"374","endLine":62,"endColumn":33},{"ruleId":"371","severity":1,"message":"409","line":73,"column":18,"nodeType":"373","messageId":"374","endLine":73,"endColumn":20},{"ruleId":"364","severity":1,"message":"395","line":85,"column":17,"nodeType":"366","messageId":"367","endLine":85,"endColumn":27},{"ruleId":"364","severity":1,"message":"396","line":85,"column":29,"nodeType":"366","messageId":"367","endLine":85,"endColumn":36},{"ruleId":"364","severity":1,"message":"379","line":85,"column":38,"nodeType":"366","messageId":"367","endLine":85,"endColumn":47},{"ruleId":"410","severity":1,"message":"411","line":122,"column":37,"nodeType":"412","endLine":122,"endColumn":212},{"ruleId":"371","severity":1,"message":"372","line":136,"column":70,"nodeType":"373","messageId":"374","endLine":136,"endColumn":72},{"ruleId":"371","severity":1,"message":"372","line":168,"column":85,"nodeType":"373","messageId":"374","endLine":168,"endColumn":87},{"ruleId":"371","severity":1,"message":"372","line":183,"column":57,"nodeType":"373","messageId":"374","endLine":183,"endColumn":59},{"ruleId":"371","severity":1,"message":"372","line":197,"column":53,"nodeType":"373","messageId":"374","endLine":197,"endColumn":55},{"ruleId":"371","severity":1,"message":"372","line":199,"column":61,"nodeType":"373","messageId":"374","endLine":199,"endColumn":63},{"ruleId":"410","severity":1,"message":"411","line":233,"column":53,"nodeType":"412","endLine":233,"endColumn":136},{"ruleId":"410","severity":1,"message":"411","line":240,"column":53,"nodeType":"412","endLine":240,"endColumn":138},{"ruleId":"364","severity":1,"message":"394","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":14},{"ruleId":"364","severity":1,"message":"431","line":22,"column":8,"nodeType":"366","messageId":"367","endLine":22,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":52,"column":29,"nodeType":"373","messageId":"374","endLine":52,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":56,"column":27,"nodeType":"373","messageId":"374","endLine":56,"endColumn":29},{"ruleId":"371","severity":1,"message":"409","line":69,"column":18,"nodeType":"373","messageId":"374","endLine":69,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":83,"column":31,"nodeType":"373","messageId":"374","endLine":83,"endColumn":33},{"ruleId":"364","severity":1,"message":"395","line":101,"column":17,"nodeType":"366","messageId":"367","endLine":101,"endColumn":27},{"ruleId":"364","severity":1,"message":"396","line":101,"column":29,"nodeType":"366","messageId":"367","endLine":101,"endColumn":36},{"ruleId":"364","severity":1,"message":"379","line":101,"column":38,"nodeType":"366","messageId":"367","endLine":101,"endColumn":47},{"ruleId":"410","severity":1,"message":"411","line":138,"column":37,"nodeType":"412","endLine":138,"endColumn":208},{"ruleId":"371","severity":1,"message":"372","line":147,"column":60,"nodeType":"373","messageId":"374","endLine":147,"endColumn":62},{"ruleId":"371","severity":1,"message":"372","line":159,"column":70,"nodeType":"373","messageId":"374","endLine":159,"endColumn":72},{"ruleId":"371","severity":1,"message":"372","line":183,"column":84,"nodeType":"373","messageId":"374","endLine":183,"endColumn":86},{"ruleId":"371","severity":1,"message":"372","line":196,"column":57,"nodeType":"373","messageId":"374","endLine":196,"endColumn":59},{"ruleId":"371","severity":1,"message":"372","line":211,"column":53,"nodeType":"373","messageId":"374","endLine":211,"endColumn":55},{"ruleId":"371","severity":1,"message":"372","line":213,"column":61,"nodeType":"373","messageId":"374","endLine":213,"endColumn":63},{"ruleId":"410","severity":1,"message":"411","line":248,"column":53,"nodeType":"412","endLine":248,"endColumn":136},{"ruleId":"410","severity":1,"message":"411","line":255,"column":53,"nodeType":"412","endLine":255,"endColumn":138},{"ruleId":"371","severity":1,"message":"372","line":309,"column":53,"nodeType":"373","messageId":"374","endLine":309,"endColumn":55},{"ruleId":"371","severity":1,"message":"372","line":311,"column":61,"nodeType":"373","messageId":"374","endLine":311,"endColumn":63},{"ruleId":"364","severity":1,"message":"432","line":8,"column":8,"nodeType":"366","messageId":"367","endLine":8,"endColumn":17},{"ruleId":"364","severity":1,"message":"388","line":9,"column":10,"nodeType":"366","messageId":"367","endLine":9,"endColumn":16},{"ruleId":"364","severity":1,"message":"433","line":9,"column":18,"nodeType":"366","messageId":"367","endLine":9,"endColumn":28},{"ruleId":"364","severity":1,"message":"394","line":10,"column":10,"nodeType":"366","messageId":"367","endLine":10,"endColumn":14},{"ruleId":"364","severity":1,"message":"434","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":21},{"ruleId":"364","severity":1,"message":"400","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":14},{"ruleId":"364","severity":1,"message":"417","line":23,"column":8,"nodeType":"366","messageId":"367","endLine":23,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":71,"column":29,"nodeType":"373","messageId":"374","endLine":71,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":84,"column":29,"nodeType":"373","messageId":"374","endLine":84,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":97,"column":29,"nodeType":"373","messageId":"374","endLine":97,"endColumn":31},{"ruleId":"371","severity":1,"message":"372","line":101,"column":27,"nodeType":"373","messageId":"374","endLine":101,"endColumn":29},{"ruleId":"364","severity":1,"message":"395","line":124,"column":17,"nodeType":"366","messageId":"367","endLine":124,"endColumn":27},{"ruleId":"364","severity":1,"message":"396","line":124,"column":29,"nodeType":"366","messageId":"367","endLine":124,"endColumn":36},{"ruleId":"364","severity":1,"message":"379","line":124,"column":38,"nodeType":"366","messageId":"367","endLine":124,"endColumn":47},{"ruleId":"364","severity":1,"message":"435","line":125,"column":29,"nodeType":"366","messageId":"367","endLine":125,"endColumn":38},{"ruleId":"364","severity":1,"message":"436","line":125,"column":40,"nodeType":"366","messageId":"367","endLine":125,"endColumn":50},{"ruleId":"364","severity":1,"message":"437","line":125,"column":52,"nodeType":"366","messageId":"367","endLine":125,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":163,"column":41,"nodeType":"412","endLine":163,"endColumn":301},{"ruleId":"371","severity":1,"message":"372","line":188,"column":64,"nodeType":"373","messageId":"374","endLine":188,"endColumn":66},{"ruleId":"371","severity":1,"message":"372","line":195,"column":82,"nodeType":"373","messageId":"374","endLine":195,"endColumn":84},{"ruleId":"371","severity":1,"message":"372","line":250,"column":71,"nodeType":"373","messageId":"374","endLine":250,"endColumn":73},{"ruleId":"410","severity":1,"message":"411","line":279,"column":61,"nodeType":"412","endLine":279,"endColumn":144},{"ruleId":"364","severity":1,"message":"438","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"440","line":37,"column":23,"nodeType":"412","endLine":44,"endColumn":24},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":18},{"ruleId":"364","severity":1,"message":"441","line":5,"column":8,"nodeType":"366","messageId":"367","endLine":5,"endColumn":17},{"ruleId":"364","severity":1,"message":"394","line":6,"column":10,"nodeType":"366","messageId":"367","endLine":6,"endColumn":14},{"ruleId":"364","severity":1,"message":"365","line":6,"column":16,"nodeType":"366","messageId":"367","endLine":6,"endColumn":24},{"ruleId":"364","severity":1,"message":"442","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":19},{"ruleId":"364","severity":1,"message":"433","line":12,"column":28,"nodeType":"366","messageId":"367","endLine":12,"endColumn":38},{"ruleId":"371","severity":1,"message":"372","line":30,"column":28,"nodeType":"373","messageId":"374","endLine":30,"endColumn":30},{"ruleId":"371","severity":1,"message":"372","line":42,"column":26,"nodeType":"373","messageId":"374","endLine":42,"endColumn":28},{"ruleId":"371","severity":1,"message":"372","line":55,"column":24,"nodeType":"373","messageId":"374","endLine":55,"endColumn":26},{"ruleId":"443","severity":1,"message":"444","line":1,"column":1,"nodeType":"445","endLine":8,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":1,"column":1,"nodeType":"445","endLine":14,"endColumn":3},{"ruleId":"443","severity":1,"message":"446","line":1,"column":1,"nodeType":"445","endLine":172,"endColumn":6},{"ruleId":"443","severity":1,"message":"444","line":1,"column":1,"nodeType":"445","endLine":8,"endColumn":3},{"ruleId":"360","replacedBy":"447"},{"ruleId":"362","replacedBy":"448"},{"ruleId":"443","severity":1,"message":"444","line":1,"column":1,"nodeType":"445","endLine":8,"endColumn":3},{"ruleId":"443","severity":1,"message":"444","line":1,"column":1,"nodeType":"445","endLine":8,"endColumn":3},{"ruleId":"364","severity":1,"message":"449","line":41,"column":7,"nodeType":"366","messageId":"367","endLine":41,"endColumn":12},"no-native-reassign",["450"],"no-negated-in-lhs",["451"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'WebTemplate' is defined but never used.","'WebHome' is defined but never used.","'Navigation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CountryDropdown' is defined but never used.","'RegionDropdown' is defined but never used.","'CircularProgress' is defined but never used.","'moment' is defined but never used.","'isWebPage' is assigned a value but never used.","'MDBBtn' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.","'MDBCol' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'ErrorMessage' is defined but never used.","'Yup' is defined but never used.","'Link' is defined but never used.","'blogStatus' is assigned a value but never used.","'comment' is assigned a value but never used.","'user' is assigned a value but never used.","'customStyles' is assigned a value but never used.","'ShowBlogById' is defined but never used.","'Lottie' is defined but never used.","'loadingOptions' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'updateHide' is defined but never used.","'updateHidePage' is defined but never used.","'makeStyles' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BlogNavBar' is defined but never used.","'Accordion' is defined but never used.","'country' is assigned a value but never used.","'region' is assigned a value but never used.","'Visiblity' is defined but never used.","'loadingAnimationData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'IconExpandLess' is defined but never used.","'IconExpandMore' is defined but never used.","'InboxIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'handleClick' is defined but never used.","'handleClick2' is defined but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","'FileCopyIcon' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'getTemplate' is defined but never used.","'lottieRef' is assigned a value but never used.","'lottieRef1' is assigned a value but never used.","'isMouseEnter' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'ReCAPTCHA' is defined but never used.","'postLogin' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default",["450"],["451"],"'Field' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]