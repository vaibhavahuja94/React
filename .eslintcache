[{"D:\\vaibhav\\first-project\\React\\src\\component\\about\\Login.js":"1","D:\\vaibhav\\first-project\\newproject\\React\\src\\index.js":"2","D:\\vaibhav\\first-project\\newproject\\React\\src\\App.js":"3","D:\\vaibhav\\first-project\\newproject\\React\\src\\store.js":"4","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\privateRoute\\ProtectedRoute.js":"5","D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\localStorage.js":"6","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\BlogHome.js":"7","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\rootReducer.js":"8","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\about\\Login.js":"9","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\about\\Register.js":"10","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\home\\Home.js":"11","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\privateRoute\\Auth.js":"12","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\AdminLayout.js":"13","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\ShowBlogById.js":"14","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\BlogNavBar.js":"15","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\actions\\GetBlogByIdActions.js":"16","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\reducer\\LoginReducers.js":"17","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\Header.js":"18","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\actions\\LoginActions.js":"19","D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\apiFunction.js":"20","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\reducer\\GetBlogByIdReducers.js":"21","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\home\\HomeNavBar.js":"22","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\Header\\Header.js":"23","D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\headerServices.js":"24","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\components\\NavigationBar.js":"25","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\WebTemplate.js":"26","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\WebHome.js":"27","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\RecentPage.js":"28","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\RecentPageById.js":"29","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\profile\\ProfileUpdate.js":"30"},{"size":6626,"mtime":1627617035044,"results":"31","hashOfConfig":"32"},{"size":343,"mtime":1622381557433,"results":"33","hashOfConfig":"34"},{"size":1779,"mtime":1630522569175,"results":"35","hashOfConfig":"34"},{"size":743,"mtime":1622381900791,"results":"36","hashOfConfig":"34"},{"size":570,"mtime":1622380533561,"results":"37","hashOfConfig":"34"},{"size":658,"mtime":1622380864606,"results":"38","hashOfConfig":"34"},{"size":5138,"mtime":1630236805785,"results":"39","hashOfConfig":"34"},{"size":246,"mtime":1630558079509,"results":"40","hashOfConfig":"34"},{"size":6978,"mtime":1630558209352,"results":"41","hashOfConfig":"34"},{"size":5026,"mtime":1630558141618,"results":"42","hashOfConfig":"34"},{"size":2803,"mtime":1627618219537,"results":"43","hashOfConfig":"34"},{"size":170,"mtime":1622380533560,"results":"44","hashOfConfig":"34"},{"size":8997,"mtime":1630523973478,"results":"45","hashOfConfig":"34"},{"size":6949,"mtime":1630523962834,"results":"46","hashOfConfig":"34"},{"size":6145,"mtime":1627707400335,"results":"47","hashOfConfig":"34"},{"size":4013,"mtime":1630523948134,"results":"48","hashOfConfig":"34"},{"size":657,"mtime":1622393163975,"results":"49","hashOfConfig":"34"},{"size":1150,"mtime":1622386259438,"results":"50","hashOfConfig":"34"},{"size":262,"mtime":1630079981616,"results":"51","hashOfConfig":"34"},{"size":1656,"mtime":1630557974531,"results":"52","hashOfConfig":"34"},{"size":698,"mtime":1622380533571,"results":"53","hashOfConfig":"34"},{"size":10737,"mtime":1627616481272,"results":"54","hashOfConfig":"34"},{"size":2808,"mtime":1628323061357,"results":"55","hashOfConfig":"34"},{"size":465,"mtime":1622380533531,"results":"56","hashOfConfig":"34"},{"size":1071,"mtime":1627445996128,"results":"57","hashOfConfig":"34"},{"size":8091,"mtime":1630132109884,"results":"58","hashOfConfig":"34"},{"size":5268,"mtime":1630131439374,"results":"59","hashOfConfig":"34"},{"size":6079,"mtime":1630523950841,"results":"60","hashOfConfig":"34"},{"size":6822,"mtime":1630523960730,"results":"61","hashOfConfig":"34"},{"size":13317,"mtime":1630557362896,"results":"62","hashOfConfig":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a45zxk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"u717sw",{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"67"},"D:\\vaibhav\\first-project\\React\\src\\component\\about\\Login.js",["139","140"],"D:\\vaibhav\\first-project\\newproject\\React\\src\\index.js",[],["141","142"],"D:\\vaibhav\\first-project\\newproject\\React\\src\\App.js",["143","144"],"import React,{Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport Login from './component/about/Login';\nimport Register from './component/about/Register';\nimport BlogHome from './component/blogHome/BlogHome';\nimport Home from './component/home/Home';\nimport WebTemplate from './component/blogHome/WebTemplate';\nimport ProtectedRoute from './component/privateRoute/ProtectedRoute';\nimport WebHome from './component/blogHome/WebHome';\nimport RecentPage from './component/blogHome/RecentPage';\nimport ProfileUpdate from './component/profile/ProfileUpdate';\n\n  export default class App extends Component{\n    componentDidMount(){\n      return <Redirect to=\"/home\"/>\n    }  \n    render(){\n    return (\n      <Router>\n        <div>\n            {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n           \n            <ProtectedRoute exact path=\"/savedPageTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/savedWebTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/recentWebTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/recentPageTemplate\" component={BlogHome}/>\n            <ProtectedRoute exact path=\"/webTemplate\" component={RecentPage}/>\n            <ProtectedRoute exact path=\"/updateProfile\" component={ProfileUpdate}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n}\n  }\n  ","D:\\vaibhav\\first-project\\newproject\\React\\src\\store.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\privateRoute\\ProtectedRoute.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\localStorage.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\BlogHome.js",["145","146","147","148"],"import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { getBlogIdSuccess } from '../../redux/actions/GetBlogByIdActions'\nimport ShowBlogById from './ShowBlogById';\nimport moment from \"moment\"\nimport BlogNavBar from '../BlogNavBar'\nimport Header from '../Header/Header'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from '../AdminLayout';\nimport { addTemplate, getTemplate } from '../../Services/apiFunction';\n\nclass BlogHome extends Component {\n    state = {\n        showModal: false,\n        string: window.location.pathname.split(\"/\")[1],\n        user: JSON.parse(localStorage.getItem('user'))\n    }\n\n    render() {\n        const customStyles = {\n            content: {\n                top: '40%',\n                left: '50%',\n                right: '50%',\n                bottom: 'auto',\n                marginRight: '-50%',\n                transform: 'translate(-50%, -50%)'\n            }\n        };\n        Modal.setAppElement('*')\n        const { user } = this.props;\n        const string = window.location.pathname.split(\"/\")[1]\n        const isWebPage = string.includes(\"Web\")\n        return (\n            <>\n                <AdminLayout title=\"All Templates\">\n                    <div style={{ boxSizing: \"border-box\", width: \"100%\", height: \"4em\" }}>\n                        <button style={{ float: \"right\", borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} className=\"btn text-white\" onClick={() => this.setState({ showModal: true })}>Create Template</button>\n                    </div>\n                    <br />\n                    <ShowBlogById />\n                </AdminLayout>\n                <ToastContainer />\n                <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\"><h3>Create Template\n                            <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n                        </h3>\n                        </div>\n                        <div className=\"panel panel-body\">\n                            <Formik\n                                initialValues={{\n                                    title: '',\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    title: Yup.string()\n                                        .required('Template Title is required'),\n                                })}\n                                onSubmit={async(fields, { resetForm, initialValues }) => {\n                                    fields.username = user.username\n                                    fields.id = Math.floor(Math.random() * 1000000)\n                                    fields.category = \"new category\"\n                                    fields.tags = \"new tags\"\n                                    await addTemplate(fields)\n                                    const tempData = await getTemplate(user.username)\n                                    if(tempData){\n                                    this.props.createBlog(tempData)\n                                    }\n                                    resetForm(initialValues)\n                                    this.setState({ showModal: false })\n                                }}\n                                render={({ errors, touched, setFieldValue }) => (\n\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"title\">Title</label>\n                                            <Field name=\"title\" type=\"text\" className={'form-control' + (errors.title && touched.title ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">Create Page Template</button>\n                                            &nbsp;\n                                            <button type=\"reset\" onClick={() => this.fileInput.value = \"\"} className=\"btn btn-secondary\">Reset</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.login && state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createBlog: (data) => dispatch(getBlogIdSuccess(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogHome);\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\rootReducer.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\about\\Login.js",["149","150","151"],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\about\\Register.js",["152","153","154"],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\home\\Home.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\privateRoute\\Auth.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\AdminLayout.js",["155","156","157","158"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse'\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\nimport WebIcon from '@material-ui/icons/Web';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { Home } from '@material-ui/icons';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { NavLink } from 'react-router-dom';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport { Link } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { loginUserSuccess } from '../redux/actions/LoginActions'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  menuItem: {\n    width: drawerWidth,\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  typography: {\n    padding: theme.spacing(2),\n    cursor:\"default\",\n  },\n  activeListItem: {\n    borderLeft: `4px solid ${theme.palette.primary.main}`,\n    borderRadius: '4px',\n    backgroundColor: theme.palette.primary.light,\n    '& $listItemText': {\n      color: theme.palette.text.primary\n    },\n    '& $listItemIcon': {\n      color: theme.palette.primary.main,\n      marginLeft: '-4px'\n    }\n  }\n}));\n\nexport default function AdminLayout(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const openAnchor = Boolean(anchorEl);\n  const id = openAnchor ? 'simple-popover' : undefined;\n  \n  function handleClick() {\n    setOpen1(!open1)\n  }\n\n  function handleClick2() {\n    setOpen2(!open2)\n  }\n\n  const handleClickAnchor = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseAnchor = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n        localStorage.removeItem('user')\n        localStorage.removeItem('token')\n        localStorage.setItem('login', JSON.stringify(false))\n        let obj = {}\n        dispatch(loginUserSuccess(obj))\n        history.push('/login')\n  }\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  console.log(open)\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"#1DABB8\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar style={{color:\"#1DABB8\"}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap style={{flex:1}}>\n            {props.title}\n          </Typography>\n          <div>\n            <img src=\"/humanavtar.jpg\" height=\"75em\" aria-describedby={id} variant=\"contained\" color=\"info\" onClick={handleClickAnchor}/>\n            <Button className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} onClick={()=>{logout()}}>Logout</Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <ListItem onClick={()=>handleClick()} className={classes.menuItem} activeClassName={classes.activeListItem}>\n        <ListItemIcon className={classes.menuItemIcon}>\n          <Home />\n        </ListItemIcon>\n        <ListItemText primary=\"Recent\" />\n        {open1 ? <IconExpandLess /> : <IconExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem button component={NavLink} to=\"/recentWebTemplate\" className={classes.menuItem}>\n            <ListItemText inset primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/recentPageTemplate\" className={classes.menuItem}>\n            <ListItemText inset primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse>\n\n      <ListItem onClick={()=>handleClick2()} className={classes.menuItem} activeClassName={classes.activeListItem}>\n        <ListItemIcon selected={true} className={classes.menuItemIcon}>\n          <WebIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Template\" />\n        {open2 ? <IconExpandLess /> : <IconExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem button component={NavLink} to=\"/savedWebTemplate\" className={classes.menuItem}>\n            <ListItemText inset primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/savedPageTemplate\" className={classes.menuItem}>\n            <ListItemText inset primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div>\n        {props.children}\n        </div>\n      </main>\n      <Popover\n        id={id}\n        open={openAnchor}\n        anchorEl={anchorEl}\n        onClose={handleCloseAnchor}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography} onClick={()=>{history.push('/updateProfile')}}>User-Profile</Typography>\n      </Popover>\n    </div>\n  );\n}\n\nAdminLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\ShowBlogById.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/GetBlogByIdActions'\nimport Modal from 'react-modal'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'\nimport {Link, withRouter} from 'react-router-dom'\nimport { Redirect } from 'react-router';\n\n\nclass ShowBlogById extends Component {\n\n    state = {\n        user: this.props.user,\n        showModal: false,\n        id: '',\n        img: '',\n        name: '',\n        template: false,\n        string:\"\"\n    }\n    componentDidMount() {\n        this.props.fetchIdBlog(this.props.user.username)\n    }\n    \n    handleView(event, value){\n        this.props.history.push({pathname:'webTemplate', state:{template:value}})\n    }\n\n    render() {\n        if ((this.props.blogStatus === undefined) && (this.props.pending === true)) {\n            <p>Loading...</p>\n        }\n        const { blogStatus, comment, isWebPage } = this.props\n        const { user } = this.state\n        console.log(isWebPage)\n        const customStyles = {\n            content: {\n                top: '50%',\n                left: '30%',\n                right: '26%',\n                bottom: 'auto',\n                transform: 'translate(-50%, -50%)'\n            }\n        };\n\n        const classes = makeStyles({\n            root: {\n                minWidth: 275,\n            },\n            bullet: {\n                display: 'inline-block',\n                margin: '0 2px',\n                transform: 'scale(0.8)',\n            },\n            title: {\n                fontSize: 14,\n            },\n            pos: {\n                marginBottom: 12,\n            },\n        });\n        console.log(this.props.blog)\n        Modal.setAppElement('*')\n        return (\n            <>\n                <div className=\"justify-content-center\">\n                    {this.props.blog.length>0 && this.props.blog.map(value =>\n                        <div className=\"row\">\n                            <div className=\"col-sm-offset-2 col-sm-9 col-xs-offset-2 col-xs-9\">\n                                <Card className={classes.root} variant=\"outlined\" style={{boxShadow:\"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n                                        <CardContent>\n                                        <span >\n                                            <h4 style={{ display: \"inline\" }}>{value.title}</h4>\n                                            <span style={{ display: \"inline\" , float: \"right\" }}>\n                                                <button className=\"btn text-white\" style={{ backgroundColor: \"#1DABB8\", borderRadius: \"6px\" }} onClick={(event) => this.handleView(event, value)}>{(isWebPage)?\"Web Page\":\"View Template\"}</button>\n                                            </span>\n                                        </span>\n                                    </CardContent>\n                                </Card>\n                                <br />\n                            </div>\n                        </div>\n                    )}\n                </div>\n                {/* {this.state.id!==''&&\n            <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default \">\n                    <div className=\"panel-heading\">Change Profile\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\n                    \n                    </div>\n                    <div className=\"panel panel-body\">\n                    <div className=\"col-sm-4\">\n                    <img src={this.state.img} alt=\"profile\" className=\"img-responsive photo2\" />\n                    </div>\n                    <div className=\"col-sm-8 container\">\n                        <div className=\"panel panel-default \">\n                            <div className=\"panel-heading\">\n                                {this.state.name}\n                            </div>\n                            <div className=\"panel-body\">\n                                {comment.filter(val=>(val.blog_id===this.state.id)).map(values=>\n                                <div className=\"div1\">\n                                    <div style={{fontWeight:'bold'}}>{values.user_name}</div>\n                                    <div>{values.comment}</div>\n                                </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"panel panel-footer\">\n            <Formik\n                initialValues={{\n                    \n                    comment:''\n                }}\n                validationSchema={Yup.object().shape({\n                   comment:Yup.string().required('Please Enter Comment ')\n                })}\n                onSubmit={(fields,{resetForm,initialValues}) => {\n                    fields.blog_id = this.state.id\n                    fields.user_name = user.name\n                    this.props.createComment(fields)\n                    resetForm(initialValues)\n                    this.componentDidMount()\n                    this.setState({showModal:false})\n                }}\n                render={({ errors, touched}) => (\n                    \n                    <Form>\n                        <div className=\"form-group\">\n                            <Field as=\"textarea\" name=\"comment\"\n                            className={'form-control' + (errors.comment && touched.comment ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"comment\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" \n                            className=\"btn btn-primary\"\n                            >Comment</button>\n                        </div>\n                    </Form>\n                )}\n            />\n            </div>\n            </div>\n            </Modal>\n            } */}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        user: state.login.data,\n        blog: state.getBlogById.allBlog,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchIdBlog: (data) => dispatch(actions.fetchIdTemplate(data)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShowBlogById));\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\BlogNavBar.js",["180"],"import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport './main.css'\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'\nimport Modal from 'react-modal'\nimport { loginUserSuccess } from '../redux/actions/LoginActions';\nimport { patchApi } from '../Services/apiFunction'\n\nclass BlogNavBar extends Component {\n    state = {\n        user: this.props.user,\n        showModal: false\n    }\n    logOut = () => {\n        localStorage.removeItem('user')\n        localStorage.removeItem('token')\n        localStorage.setItem('login', JSON.stringify(false))\n    }\n\n    onSubmit = async (fields) => {\n        //e.prevetDefault()\n        fields.id = this.props.user.id\n        //resetForm(initialValues)\n        await patchApi(fields.id, fields)\n            .then((res) => {\n                this.props.updateImage(res.data)\n            })\n        this.setState({ showModal: false })\n    }\n    render() {\n        console.log(this.state.user, this.props.user)\n        const customStyles = {\n            content: {\n                top: '43%',\n                left: '75%',\n                right: '0%',\n                bottom: 'auto',\n                transform: 'translate(-0%, -50%)'\n            }\n        };\n\n        Modal.setAppElement('*')\n        const { user } = this.props\n        return (\n            <>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top justify-content-between\">\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <ul className=\"nav navbar-nav ml-auto\" >\n                            <li className=\"nav-item\">\n                            <img src={user.imgSrc} className=\"rounded-circle\" alt=\"profile\" width=\"45\" height=\"45\" onClick={() => this.setState({ showModal: true })} />&nbsp;\n                            </li>\n                            <li className=\"nav-item\">\n                            <Link to=\"/home\" onClick={() => this.logOut()} className=\"btn btn-danger\">Back To Login</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default \">\n                        <div className=\"panel-heading\">Change Profile\n                            <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n\n                        </div>\n                        <div className=\"panel panel-body\">\n                            <Formik\n                                initialValues={{\n                                    imgSrc: user.imgSrc\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    imgSrc: Yup.string().required('Please Select Image')\n                                })}\n                                onSubmit={this.onSubmit}\n                                render={({ errors, touched, fields, initialValues, setFieldValue }) => (\n\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <img src={initialValues.imgSrc} alt=\"profile\" width=\"350\" height=\"400\" />\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"image\">Blog Profile-Image</label>\n                                            <input name=\"imgSrc\" type=\"file\" accept=\"image/*\"\n                                                onChange={(event) => {\n                                                    if (event.target.files && event.target.files[0]) {\n                                                        let reader = new FileReader(event.target.files[0]);\n                                                        reader.onloadend = () => {\n                                                            setFieldValue('imgSrc', reader.result)\n                                                        }\n                                                        reader.readAsDataURL(event.target.files[0]);\n\n                                                    }\n                                                    else { setFieldValue('imgSrc', '') }\n                                                }\n                                                }\n                                                ref={ref => this.fileInput = ref}\n                                                className={'form-control' + (errors.imgSrc && touched.imgSrc ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"imgSrc\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\"\n                                                className=\"btn btn-primary\"\n                                            >Update Image</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        data: state.getData.data,\n        user: state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateImage: (data) => (dispatch(loginUserSuccess(data)))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogNavBar);","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\actions\\GetBlogByIdActions.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\reducer\\LoginReducers.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\Header.js",["181"],"import React, {Component} from 'react'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport './main.css'\n\nexport default class Navigation extends Component {\n    state = {\n        token:JSON.parse(localStorage.getItem('login'))\n    }\n    render(){\n        // if(this.state.token===true){\n          \n        //     return <Redirect to='/bloghome' />\n        // }\n        return(\n            <div>\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n                <div className=\"container-fluid\">\n                <ul className=\"nav navbar-nav navbar-right\">\n                    <li ><NavLink to=\"/home\" activeClassName='active'>\n                    <span className=\"text-primary\">Home</span></NavLink></li>\n                    <li ><NavLink to=\"/contact-us\" activeClassName='active'>\n                    <span className=\"text-primary\">Contact</span></NavLink></li>\n                    <li ><NavLink to=\"/login\" activeClassName='active'>\n                        <span className=\"text-primary\">Get-In_Touch</span></NavLink></li>\n                </ul>\n                </div>\n            </nav>\n            </div>\n        )\n    }\n}","D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\actions\\LoginActions.js",["182"],"import axios from 'axios'\n\nexport const loginUserError = (error) => {\n    return{\n        type:'LOGINUSERERROR',\n        payload:error\n    }\n}\n\nexport const loginUserSuccess = (data) => {\n    return{\n        type:'LOGINUSERSUCCESS',\n        payload:data\n    }\n}\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\apiFunction.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\redux\\reducer\\GetBlogByIdReducers.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\home\\HomeNavBar.js",["183","184"],"import React, { useState } from 'react';\r\n\r\nconst HomeNavBar = () => {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top \">\r\n               <div className=\"container \">\r\n                 <a\r\n                  aria-current=\"page\"\r\n                  className=\"navbar-brand\"\r\n                  href=\"https://www.chatwoot.com/\"\r\n                >\r\n                  <img\r\n                    src=\"/asset/brand-d6ec4f18194acc9e590c511b9ae51974.svg\"\r\n                    className=\"navbar-brand-img\"\r\n                    alt=\"...\"\r\n                    style={{maxHeight: \"2rem\" ,verticalAlign: \"top\",width: \"auto\"}}\r\n                  />\r\n                </a>\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarCollapse\"\r\n                  aria-controls=\"navbarCollapse\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n                  <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div\r\n                  className=\"collapse navbar-collapse justify-content-end mt-xs-10\"\r\n                  id=\"navbarCollapse\"\r\n                >\r\n                  <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item dropdown\">\r\n                      <a\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        id=\"navbarDocumentation\"\r\n                        data-toggle=\"dropdown\"\r\n                        href=\"https://www.chatwoot.com/#\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        Features\r\n                      </a>\r\n                      <div\r\n                        className=\"dropdown-menu dropdown-menu-md px-5 bg-white\"\r\n                        aria-labelledby=\"navbarDocumentation\"\r\n                      >\r\n                        <div className=\"row \">\r\n                          <div className=\"col-md-6 border-right-md\">\r\n                            <div className=\"list-group list-group-flush \">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/shared-inbox\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Shared Inbox\">\r\n                                        📥\r\n                                      </span>\r\n                                    </div>\r\n                                    Shared inbox\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Collaborate easily with other agents and manage\r\n                                    conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/live-chat\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        💬\r\n                                      </span>\r\n                                    </div>\r\n                                    Live Chat\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Simple and elegant live chat for your website\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/channels\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        🎡\r\n                                      </span>\r\n                                    </div>\r\n                                    Channels\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Connect with your customers on the channels of\r\n                                    their choice\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"list-group list-group-flush border-top border-top-md-0\">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/chatbots\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Chatbots\">\r\n                                        🤖\r\n                                      </span>\r\n                                    </div>\r\n                                    Chatbots\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Easily integrate with popular chatbot platforms to\r\n                                    automate conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/mobile-apps\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Mobile apps\">\r\n                                        📱\r\n                                      </span>\r\n                                    </div>\r\n                                    Mobile apps\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Don't miss out on new customers. Manage\r\n                                    conversations on the go\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/integrations\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Integrations\">\r\n                                        ⚡\r\n                                      </span>\r\n                                    </div>\r\n                                    Integrations\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Super charge your workflow with integrations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/blog\">\r\n                        Blog\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/pricing\">\r\n                        Pricing\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://www.chatwoot.com/help-center\"\r\n                      >\r\n                        Help Center\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item mr-4\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://app.chatwoot.com/app/login\"\r\n                      >\r\n                        Login\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <a\r\n                    className=\"navbar-btn btn btn-sm btn-primary lift\"\r\n                    href=\"https://app.chatwoot.com/app/auth/signup\"\r\n                  >\r\n                    Create an account\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n            </>\r\n    );\r\n}\r\n \r\nexport default HomeNavBar;","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\Header\\Header.js",["185","186","187","188","189"],"\n//import useState hook to create menu collapse state\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n//import react pro sidebar components\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SubMenu,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n} from \"react-pro-sidebar\";\n\n//import icons from react icons\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\nimport { RiPencilLine } from \"react-icons/ri\";\nimport { BiCog } from \"react-icons/bi\";\n//import sidebar css from react-pro-sidebar module and our custom css \nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport \"./Header.css\";\n\n\nconst Header = () => {\n  \n    //create initial menuCollapse state using useState hook\n    const [menuCollapse, setMenuCollapse] = useState(false)\n\n    //create a custom function that will change menucollapse state from false to true and true to false\n  const menuIconClick = () => {\n    //condition checking to change state from true to false and vice versa\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\n  };\n\n  return (\n    <>\n      <div id=\"header\">\n          {/* collapsed props to change menu size using menucollapse state */}\n        <ProSidebar collapsed={menuCollapse} style={{color:\"black\"}}>\n          <SidebarHeader>\n          <div className=\"logotext\">\n              {/* small and big change using menucollapse state */}\n              <p>{menuCollapse ? \"Logo\" : \"Big Logo\"}</p>\n            </div>\n            <div className=\"closemenu\" onClick={menuIconClick}>\n                {/* changing menu collapse icon on click */}\n              {menuCollapse ? (\n                <FiArrowRightCircle/>\n              ) : (\n                <FiArrowLeftCircle/>\n              )}\n            </div>\n          </SidebarHeader>\n          <SidebarContent>\n            <Menu iconShape=\"square\">\n              <MenuItem icon={<FiHome />}>\n                <SubMenu title=\"Recent\">\n                <MenuItem>\n                <Link to=\"/recentWebTemplate\">Web Template</Link>\n                </MenuItem>\n                <MenuItem>\n                <Link to=\"/recentPageTemplate\">Page Template</Link>\n                </MenuItem>\n                </SubMenu>\n              </MenuItem>\n              <MenuItem icon={<FaList />}>\n              <SubMenu title=\"Template\">\n                <MenuItem>\n                <Link to=\"/savedWebTemplate\">Web Template</Link>\n                </MenuItem>\n                <MenuItem>\n                <Link to=\"/savedPageTemplate\">Page Template</Link>\n                </MenuItem>\n                </SubMenu>\n              </MenuItem>\n            </Menu>\n          </SidebarContent>\n        </ProSidebar>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\Services\\headerServices.js",[],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\components\\NavigationBar.js",[],["190","191"],"D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\WebTemplate.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport * as actions from '../../redux/actions/GetBlogByIdActions'\r\nimport Modal from 'react-modal'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect } from 'react-router';\r\nimport AdminLayout from '../AdminLayout';\r\n\r\n\r\n\r\nclass ShowBlogById extends Component {\r\n\r\n    state = {\r\n        user: this.props.user,\r\n        showModal: false,\r\n        id: '',\r\n        img: '',\r\n        name: '',\r\n        template: false,\r\n        string: \"\",\r\n        blog:[]\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.location){\r\n            console.log(this.props.location.state)\r\n        }\r\n        //this.props.fetchIdBlog()\r\n    }\r\n\r\n    handleView() {\r\n        window.open('http://localhost:8080', 'blank')\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.template) {\r\n            window.open('http://localhost:8080')\r\n        }\r\n        if ((this.props.blogStatus === undefined) && (this.props.pending === true)) {\r\n            <p>Loading...</p>\r\n        }\r\n        const { blogStatus, comment, isWebPage } = this.props\r\n        const { user } = this.state\r\n        console.log(isWebPage)\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '30%',\r\n                right: '26%',\r\n                bottom: 'auto',\r\n                transform: 'translate(-50%, -50%)'\r\n            }\r\n        };\r\n\r\n        const classes = makeStyles({\r\n            root: {\r\n                minWidth: 275,\r\n            },\r\n            bullet: {\r\n                display: 'inline-block',\r\n                margin: '0 2px',\r\n                transform: 'scale(0.8)',\r\n            },\r\n            title: {\r\n                fontSize: 14,\r\n            },\r\n            pos: {\r\n                marginBottom: 12,\r\n            },\r\n        });\r\n        Modal.setAppElement('*')\r\n        return (\r\n            <>\r\n                <AdminLayout />\r\n                <div style={{ marginLeft: \"17%\", marginTop:\"4%\" }} className=\"justify-content-center\">\r\n                    {this.state.blog.length > 0 &&\r\n                        this.props.blog.map(value =>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-offset-2 col-sm-2 col-xs-offset-2 col-xs-2\">\r\n                                    <Card className={classes.root} variant=\"outlined\">\r\n                                        <CardContent>\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                Title:{value.blogTitle}\r\n                                            </Typography>\r\n                                            <br />\r\n                                            <Typography variant=\"h5\" component=\"h2\">\r\n                                                Description:{value.desc}\r\n                                            </Typography>\r\n                                            <br />\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    {this.state.blog.length == 0 &&\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-offset-2 col-sm-3 col-xs-offset-3 col-xs-3\">\r\n                                <Card className={classes.root} variant=\"outlined\">\r\n                                    <CardContent>\r\n                                        <br />\r\n                                        <span style={{display: \"flex\", justifyContent: \"center\"}}><FaPlusCircle size={70}/></span>\r\n                                        <br />\r\n                                    </CardContent>\r\n                                    <br />\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {/* {this.state.id!==''&&\r\n            <Modal isOpen={this.state.showModal} style={customStyles}>\r\n                    <div className=\"panel panel-default \">\r\n                    <div className=\"panel-heading\">Change Profile\r\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\r\n                    \r\n                    </div>\r\n                    <div className=\"panel panel-body\">\r\n                    <div className=\"col-sm-4\">\r\n                    <img src={this.state.img} alt=\"profile\" className=\"img-responsive photo2\" />\r\n                    </div>\r\n                    <div className=\"col-sm-8 container\">\r\n                        <div className=\"panel panel-default \">\r\n                            <div className=\"panel-heading\">\r\n                                {this.state.name}\r\n                            </div>\r\n                            <div className=\"panel-body\">\r\n                                {comment.filter(val=>(val.blog_id===this.state.id)).map(values=>\r\n                                <div className=\"div1\">\r\n                                    <div style={{fontWeight:'bold'}}>{values.user_name}</div>\r\n                                    <div>{values.comment}</div>\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"panel panel-footer\">\r\n            <Formik\r\n                initialValues={{\r\n                    \r\n                    comment:''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                   comment:Yup.string().required('Please Enter Comment ')\r\n                })}\r\n                onSubmit={(fields,{resetForm,initialValues}) => {\r\n                    fields.blog_id = this.state.id\r\n                    fields.user_name = user.name\r\n                    this.props.createComment(fields)\r\n                    resetForm(initialValues)\r\n                    this.componentDidMount()\r\n                    this.setState({showModal:false})\r\n                }}\r\n                render={({ errors, touched}) => (\r\n                    \r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <Field as=\"textarea\" name=\"comment\"\r\n                            className={'form-control' + (errors.comment && touched.comment ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"comment\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" \r\n                            className=\"btn btn-primary\"\r\n                            >Comment</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n            </div>\r\n            </div>\r\n            </Modal>\r\n            } */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        user: state.login.data,\r\n        blog: state.getBlogById.allBlog,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchIdPage: () => dispatch(actions.fetchIdTemplate()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowBlogById);\r\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\WebHome.js",["213","214"],"import React, { Component } from 'react';\nimport BlogNavBar from '../BlogNavBar';\nimport Modal from 'react-modal'\nimport { Formik, Field, Form, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport {createTemplate} from '../../redux/actions/GetBlogByIdActions'\nimport ShowBlogById from './ShowBlogById';\nimport moment from \"moment\"\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from '../AdminLayout'\n\nclass BlogHome extends Component {\n    state={\n        showModal:false,\n        string:window.location.pathname.split(\"/\")[1],\n        user:JSON.parse(localStorage.getItem('user'))\n    }\n   \n    render() {\n        const customStyles = {\n            content : {\n              top                   : '40%',\n              left                  : '50%',\n              right                 : '50%',\n              bottom                : 'auto',\n              marginRight           : '-50%',\n              transform             : 'translate(-50%, -50%)'\n            }\n          };\n           Modal.setAppElement('*')\n          const {user} = this.props;\n          const string = window.location.pathname.split(\"/\")[1]\n          const isWebPage = string.includes(\"Web\")\n        return (\n            <>\n                <AdminLayout isWebPage={isWebPage}/>\n                <div id=\"bloghome\">\n                <button className=\"btn btn-primary\" onClick={()=>this.setState({showModal:true})}>Create Web Template</button>\n                </div>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <div id=\"myblogbody\">\n                    <ShowBlogById isWebPage={isWebPage}/>\n                </div>\n\n                <ToastContainer />\n            <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\"><h3>Create Web Template\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\n                    </h3>\n                    </div>\n                    <div className=\"panel panel-body\">\n            <Formik\n                initialValues={{\n                    title: '',\n                    publish_name: '',\n                }}\n                validationSchema={Yup.object().shape({\n                    title: Yup.string()\n                        .required('Title is required'),\n                })}\n                onSubmit={(fields,{resetForm,initialValues}) => {\n                    fields.username = user.username\n                    fields.id = Math.floor(Math.random()*1000000)\n                    fields.category = \"new category\"\n                    fields.tags = \"new tags\" \n                    this.props.createBlog(fields)\n                    resetForm(initialValues)\n                    this.setState({showModal:false})\n                    setTimeout(() => {\n                        window.location.reload()\n                    }, 500);\n                }}\n                render={({ errors, touched ,setFieldValue }) => (\n                    \n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <Field name=\"title\" type=\"text\" className={'form-control' + (errors.title && touched.title ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"category\">Category</label>\n                            <Field name=\"category\" type=\"text\" className={'form-control' + (errors.category && touched.category ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"category\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"tags\">Category</label>\n                            <Field name=\"tags\" type=\"text\" className={'form-control' + (errors.tags && touched.tags ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"tags\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" \n                            className=\"btn btn-primary\"\n                            >Create Web Template</button>\n                            &nbsp;\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                    </Form>\n                )}\n            />\n            </div>\n            </div>\n            </Modal>\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    user:state.login && state.login.data\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    createBlog:(data)=>dispatch(createTemplate(data))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BlogHome);\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\RecentPage.js",["215","216","217","218","219","220","221"],"import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { getBlogIdSuccess } from '../../redux/actions/GetBlogByIdActions'\nimport ShowBlogById from './ShowBlogById';\nimport moment from \"moment\"\nimport BlogNavBar from '../BlogNavBar'\nimport Header from '../Header/Header'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from '../AdminLayout';\nimport RecentPageById from './RecentPageById';\nimport { BiPolygon } from 'react-icons/bi';\nimport { addPage, getTemplate } from '../../Services/apiFunction';\n\nclass BlogHome extends Component {\n    state = {\n        showModal: false,\n        string: window.location.pathname.split(\"/\")[1],\n        user: JSON.parse(localStorage.getItem('user'))\n    }\n\n    render() {\n        const customStyles = {\n            content: {\n                top: '40%',\n                left: '50%',\n                right: '50%',\n                bottom: 'auto',\n                marginRight: '-50%',\n                transform: 'translate(-50%, -50%)'\n            }\n        };\n        Modal.setAppElement('*')\n        const {user, blog} = this.props\n        const { template } = this.props.location.state;\n        const blogData = blog.find(x=>x.s_no == template.s_no)\n        const string = window.location.pathname.split(\"/\")[1]\n        const isWebPage = string.includes(\"Web\")\n        return (\n            <>\n                <AdminLayout title={blogData.title}>\n                    <div style={{ boxSizing: \"border-box\", width: \"100%\", height: \"4em\" }}>\n                        <button style={{ float: \"right\", borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} className=\"btn text-white\" onClick={() => this.setState({ showModal: true })}>Create Page</button>\n                    </div>\n                    <br />\n                    <RecentPageById blogData={blogData.pageData}/>\n                </AdminLayout>\n                <ToastContainer />\n                <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\"><h3>Create Page\n                            <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n                        </h3>\n                        </div>\n                        <div className=\"panel panel-body\">\n                            <Formik\n                                initialValues={{\n                                    title: '',\n                                    publish_name:''\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    title: Yup.string()\n                                        .required('Template Title is required'),\n                                    publish_name: Yup.string()\n                                        .required('Publish Name is required'),\n                                })}\n                                onSubmit={async (fields, { resetForm, initialValues }) => {\n                                    fields.template_id = blogData.id\n                                    fields.id = Math.floor(Math.random() * 1000000)\n                                    fields.code = \"new title\"\n                                    await addPage(fields)\n                                    const template = await getTemplate(user.username)\n                                    if(template){\n                                        this.props.createPage(template)\n                                    }\n                                    resetForm(initialValues)\n                                    this.setState({ showModal: false })\n                                }}\n                                render={({ errors, touched, setFieldValue }) => (\n\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"title\">Title</label>\n                                            <Field name=\"title\" type=\"text\" className={'form-control' + (errors.title && touched.title ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"title\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"publish_name\">Publish Name</label>\n                                            <Field name=\"publish_name\" type=\"text\" className={'form-control' + (errors.publish_name && touched.publish_name ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"publish_name\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">Create Page Template</button>\n                                            &nbsp;\n                                            <button type=\"reset\" onClick={() => this.fileInput.value = \"\"} className=\"btn btn-secondary\">Reset</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.login && state.login.data,\n        blog: state.getBlogById && state.getBlogById.allBlog\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createPage: (data) => dispatch(getBlogIdSuccess(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogHome);\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\blogHome\\RecentPageById.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/GetBlogByIdActions'\nimport Modal from 'react-modal'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Redirect } from 'react-router';\n\n\nclass ShowBlogById extends Component {\n\n    state = {\n        user: this.props.user,\n        showModal: false,\n        id: '',\n        img: '',\n        name: '',\n        template: false,\n        string: \"\"\n    }\n\n    handleView(event, value) {\n        window.open(`http://localhost:8080?${value.page_id}`)\n    }\n\n    render() {\n        if ((this.props.blogStatus === undefined) && (this.props.pending === true)) {\n            <p>Loading...</p>\n        }\n        const { blogStatus, comment, isWebPage } = this.props\n        const { user } = this.state\n        console.log(isWebPage)\n        const customStyles = {\n            content: {\n                top: '50%',\n                left: '30%',\n                right: '26%',\n                bottom: 'auto',\n                transform: 'translate(-50%, -50%)'\n            }\n        };\n\n        const classes = makeStyles({\n            root: {\n                minWidth: 275,\n            },\n            bullet: {\n                display: 'inline-block',\n                margin: '0 2px',\n                transform: 'scale(0.8)',\n            },\n            title: {\n                fontSize: 14,\n            },\n            pos: {\n                marginBottom: 12,\n            },\n        });\n        console.log(this.props.blogData)\n        Modal.setAppElement('*')\n        return (\n            <>\n                <div className=\"justify-content-center\">\n                    {this.props.blogData.length > 0 && this.props.blogData.map(value =>\n                        <div className=\"row\">\n                            <div className=\"col-sm-offset-2 col-sm-9 col-xs-offset-2 col-xs-9\">\n                                <Card className={classes.root} variant=\"outlined\" style={{ boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }}>\n                                    <CardContent>\n                                        <span >\n                                            <h4 style={{ display: \"inline\" }}>{value.page_title}</h4>\n                                            <span style={{ display: \"inline\" , float: \"right\" }}>\n                                                <button className=\"btn text-white\" style={{ backgroundColor: \"#1DABB8\", borderRadius: \"6px\" }} onClick={(event) => this.handleView(event, value)}>View</button>\n                                            </span>\n                                        </span>\n                                    </CardContent>\n                                </Card>\n                                <br />\n                            </div>\n                        </div>\n                    )}\n                </div>\n                {/* {this.state.id!==''&&\n            <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default \">\n                    <div className=\"panel-heading\">Change Profile\n                    <button className=\"close\" onClick={()=>this.setState({showModal:false})}>&times;</button>\n                    \n                    </div>\n                    <div className=\"panel panel-body\">\n                    <div className=\"col-sm-4\">\n                    <img src={this.state.img} alt=\"profile\" className=\"img-responsive photo2\" />\n                    </div>\n                    <div className=\"col-sm-8 container\">\n                        <div className=\"panel panel-default \">\n                            <div className=\"panel-heading\">\n                                {this.state.name}\n                            </div>\n                            <div className=\"panel-body\">\n                                {comment.filter(val=>(val.blog_id===this.state.id)).map(values=>\n                                <div className=\"div1\">\n                                    <div style={{fontWeight:'bold'}}>{values.user_name}</div>\n                                    <div>{values.comment}</div>\n                                </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"panel panel-footer\">\n            <Formik\n                initialValues={{\n                    \n                    comment:''\n                }}\n                validationSchema={Yup.object().shape({\n                   comment:Yup.string().required('Please Enter Comment ')\n                })}\n                onSubmit={(fields,{resetForm,initialValues}) => {\n                    fields.blog_id = this.state.id\n                    fields.user_name = user.name\n                    this.props.createComment(fields)\n                    resetForm(initialValues)\n                    this.componentDidMount()\n                    this.setState({showModal:false})\n                }}\n                render={({ errors, touched}) => (\n                    \n                    <Form>\n                        <div className=\"form-group\">\n                            <Field as=\"textarea\" name=\"comment\"\n                            className={'form-control' + (errors.comment && touched.comment ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"comment\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" \n                            className=\"btn btn-primary\"\n                            >Comment</button>\n                        </div>\n                    </Form>\n                )}\n            />\n            </div>\n            </div>\n            </Modal>\n            } */}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        user: state.login.data,\n        blog: state.getBlogById.allBlog,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchIdBlog: (data) => dispatch(actions.fetchIdTemplate(data)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShowBlogById));\n","D:\\vaibhav\\first-project\\newproject\\React\\src\\component\\profile\\ProfileUpdate.js",["243","244","245","246","247"],"import React, { Component } from 'react';\nimport BlogNavBar from '../BlogNavBar';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport Modal from 'react-modal'\nimport { connect } from 'react-redux'\nimport { updateUserPassword, updateUser } from '../../redux/actions/RegisterActions'\nimport { ToastContainer } from 'react-toastify';\nimport { patchApi } from '../../Services/apiFunction'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { loginUserSuccess } from '../../redux/actions/LoginActions'\nimport AdminLayout from '../AdminLayout';\n\n\nclass ProfileUpdate extends Component {\n    state = {\n        country: '',\n        region: '',\n        data: this.props.user,\n        showModal: false,\n        submitCount: 0\n    }\n    componentDidMount() {\n        this.setState({ country: this.state.data.Country })\n        this.setState({ region: this.state.data.state })\n    }\n\n    onSubmit = async (fields) => {\n        fields.id = this.state.data.username\n        //console.log(fields, fields.id)\n        await patchApi(fields.id, fields)\n            .then((res) => {\n                let obj = {}\n                obj = this.props.user\n                obj.fname = fields.fname\n                obj.lname = fields.lname\n                obj.country = fields.country\n                obj.state =  fields.state\n                obj.city = fields.city\n                obj.company = fields.company\n                obj.mobile = fields.mobile\n                obj.email = fields.email\n                obj.address = fields.address\n                this.props.loginUsersSuccess(obj)\n            })\n    }\n\n    render() {\n        const customStyles = {\n            content: {\n                top: '31%',\n                left: '75%',\n                right: '0%',\n                bottom: 'auto',\n                transform: 'translate(-1%, -50%)'\n            }\n        };\n\n        Modal.setAppElement('*')\n        const { country, region, data } = this.state;\n        return (\n            <>\n                <AdminLayout title=\"Update Profile\">\n                <ToastContainer />\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\"></div>\n                    <div className=\"col-sm-8 card\">\n                        <div className=\"card-body\">\n                        <Formik\n                            initialValues={{\n                                fname: data.fname,\n                                lname: data.lname,\n                                country: data.country,\n                                state: data.state,\n                                city: data.city,\n                                company: data.company,\n                                mobile: data.mobile,\n                                email: data.email,\n                                address:data.address\n                            }}\n                            validationSchema={Yup.object().shape({\n                                fname: Yup.string()\n                                    .required('First Name is required'),\n                                lname: Yup.string()\n                                    .required('Last Name is required'),\n                                mobile: Yup.string().required('Mobile Number is Required')\n                                .matches(/^[0-9]+$/, \"Must be only digits\")\n                                .min(10, \"Must be exactly 10 digits\")\n                                .max(10, \"Must be exactly 10 digits\"),\n                                country: Yup.string().required('Please Select Country'),\n                                state: Yup.string().required('Please Select State'),\n                                city: Yup.string().required('Please enter City'),\n                                address: Yup.string(),\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required'),\n                            })}\n                            onSubmit={this.onSubmit}\n                            render={({ errors, touched, setFieldValue }) => (\n                                <div className=\"panel panel-default\">\n                                    <div className=\"panel-body\">\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"FName\">First Name</label>\n                                                <Field name=\"fname\" type=\"text\" className={'form-control' + (errors.fname && touched.fname ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"fname\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"LName\">Last Name</label>\n                                                <Field name=\"lname\" type=\"text\" className={'form-control' + (errors.lname && touched.lname ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"lname\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"mobile\">Mobile</label>\n                                                <Field name=\"mobile\" type=\"text\" className={'form-control' + (errors.mobile && touched.mobile ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"mobile\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"company\">Company</label>\n                                                <Field name=\"company\" type=\"text\" className={'form-control' + (errors.company && touched.company ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"company\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"address\">Address</label>\n                                                <Field name=\"address\" type=\"textarea\" className={'form-control' + (errors.address && touched.address ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"address\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"City\">City</label>\n                                                <Field name=\"city\" type=\"text\" className={'form-control' + (errors.city && touched.city ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"state\">State</label>\n                                                <Field name=\"state\" type=\"text\" className={'form-control' + (errors.state && touched.state ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"state\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"country\">Country</label>\n                                                <Field name=\"country\" type=\"text\" className={'form-control' + (errors.country && touched.country ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            \n                                            <div className=\"form-group\">\n                                                <button type=\"submit\" className=\"btn btn-primary mr-2\">Update</button>\n                                            </div>\n                                        </Form>\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        </div>\n                    </div>\n                </div>\n                </div>\n                </AdminLayout>\n\n                <Modal isOpen={this.state.showModal} style={customStyles}>\n                    <div className=\"panel panel-default \">\n                        <div className=\"panel-heading\"><h3>Change Password\n                    <button className=\"close\" onClick={() => this.setState({ showModal: false })}>&times;</button>\n                        </h3>\n                        </div>\n                        <div className=\"panel panel-body\">\n                            <Formik\n                                initialValues={{\n                                    oldPassword: '',\n                                    newPassword: '',\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    oldPassword: Yup.string()\n                                        .required('Password is required'),\n                                    newPassword: Yup.string()\n                                        .required('New PassWord is required')\n                                        .matches(\n                                            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                                            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n                                        ),\n                                })}\n                                onSubmit={(fields, { resetForm, initialValues }) => {\n                                    fields.id = this.state\n                                    this.props.updatePassword(fields)\n                                    resetForm(initialValues)\n                                    this.setState({ showModal: false })\n\n                                }}\n                                render={({ errors, touched }) => (\n\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"oldPassword\">oldPassword</label>\n                                            <Field name=\"oldPassword\" type=\"password\" className={'form-control' + (errors.oldPassword && touched.oldPassword ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"oldPassword\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"newPassword\">NewPassword</label>\n                                            <Field name=\"newPassword\" type=\"password\" className={'form-control' + (errors.newPassword && touched.newPassword ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"newPassword\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\"\n                                                className=\"btn btn-primary\"\n                                            >Update Password</button>\n                                        </div>\n                                    </Form>\n                                )}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.register.data,\n        window: state.register.window,\n        user: state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUsersSuccess: (data) => dispatch(loginUserSuccess(data)),\n        updatePassword: (data) => dispatch(updateUserPassword(data)),\n        updateUser: (data) => dispatch(updateUser(data))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileUpdate);",{"ruleId":"248","severity":1,"message":"249","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"252","line":6,"column":16,"nodeType":"250","messageId":"251","endLine":6,"endColumn":24},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"248","severity":1,"message":"257","line":12,"column":8,"nodeType":"250","messageId":"251","endLine":12,"endColumn":19},{"ruleId":"248","severity":1,"message":"258","line":14,"column":8,"nodeType":"250","messageId":"251","endLine":14,"endColumn":15},{"ruleId":"248","severity":1,"message":"259","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":14},{"ruleId":"248","severity":1,"message":"260","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":18},{"ruleId":"248","severity":1,"message":"261","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":14},{"ruleId":"248","severity":1,"message":"262","line":37,"column":15,"nodeType":"250","messageId":"251","endLine":37,"endColumn":24},{"ruleId":"248","severity":1,"message":"249","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"252","line":6,"column":16,"nodeType":"250","messageId":"251","endLine":6,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":25,"column":38,"nodeType":"265","messageId":"266","endLine":25,"endColumn":40},{"ruleId":"248","severity":1,"message":"267","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":25},{"ruleId":"248","severity":1,"message":"268","line":4,"column":27,"nodeType":"250","messageId":"251","endLine":4,"endColumn":41},{"ruleId":"263","severity":1,"message":"264","line":55,"column":46,"nodeType":"265","messageId":"266","endLine":55,"endColumn":48},{"ruleId":"248","severity":1,"message":"269","line":24,"column":8,"nodeType":"250","messageId":"251","endLine":24,"endColumn":17},{"ruleId":"248","severity":1,"message":"270","line":26,"column":8,"nodeType":"250","messageId":"251","endLine":26,"endColumn":29},{"ruleId":"248","severity":1,"message":"271","line":30,"column":10,"nodeType":"250","messageId":"251","endLine":30,"endColumn":14},{"ruleId":"272","severity":1,"message":"273","line":189,"column":13,"nodeType":"274","endLine":189,"endColumn":138},{"ruleId":"248","severity":1,"message":"275","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"276","line":5,"column":18,"nodeType":"250","messageId":"251","endLine":5,"endColumn":25},{"ruleId":"248","severity":1,"message":"277","line":5,"column":27,"nodeType":"250","messageId":"251","endLine":5,"endColumn":38},{"ruleId":"248","severity":1,"message":"278","line":5,"column":40,"nodeType":"250","messageId":"251","endLine":5,"endColumn":52},{"ruleId":"248","severity":1,"message":"279","line":5,"column":54,"nodeType":"250","messageId":"251","endLine":5,"endColumn":66},{"ruleId":"248","severity":1,"message":"280","line":5,"column":68,"nodeType":"250","messageId":"251","endLine":5,"endColumn":79},{"ruleId":"248","severity":1,"message":"281","line":5,"column":81,"nodeType":"250","messageId":"251","endLine":5,"endColumn":87},{"ruleId":"248","severity":1,"message":"282","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":19},{"ruleId":"248","severity":1,"message":"283","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":14},{"ruleId":"248","severity":1,"message":"284","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":18},{"ruleId":"248","severity":1,"message":"285","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":16},{"ruleId":"248","severity":1,"message":"286","line":12,"column":18,"nodeType":"250","messageId":"251","endLine":12,"endColumn":23},{"ruleId":"248","severity":1,"message":"287","line":12,"column":25,"nodeType":"250","messageId":"251","endLine":12,"endColumn":29},{"ruleId":"248","severity":1,"message":"288","line":12,"column":31,"nodeType":"250","messageId":"251","endLine":12,"endColumn":43},{"ruleId":"248","severity":1,"message":"289","line":13,"column":13,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"248","severity":1,"message":"271","line":14,"column":9,"nodeType":"250","messageId":"251","endLine":14,"endColumn":13},{"ruleId":"248","severity":1,"message":"252","line":15,"column":10,"nodeType":"250","messageId":"251","endLine":15,"endColumn":18},{"ruleId":"248","severity":1,"message":"290","line":41,"column":17,"nodeType":"250","messageId":"251","endLine":41,"endColumn":27},{"ruleId":"248","severity":1,"message":"291","line":41,"column":29,"nodeType":"250","messageId":"251","endLine":41,"endColumn":36},{"ruleId":"248","severity":1,"message":"292","line":42,"column":17,"nodeType":"250","messageId":"251","endLine":42,"endColumn":21},{"ruleId":"248","severity":1,"message":"293","line":44,"column":15,"nodeType":"250","messageId":"251","endLine":44,"endColumn":27},{"ruleId":"248","severity":1,"message":"294","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":17},{"ruleId":"248","severity":1,"message":"252","line":2,"column":18,"nodeType":"250","messageId":"251","endLine":2,"endColumn":26},{"ruleId":"248","severity":1,"message":"295","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":13},{"ruleId":"248","severity":1,"message":"296","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":37,"column":23,"nodeType":"274","endLine":44,"endColumn":24},{"ruleId":"248","severity":1,"message":"299","line":12,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":16},{"ruleId":"248","severity":1,"message":"300","line":17,"column":18,"nodeType":"250","messageId":"251","endLine":17,"endColumn":28},{"ruleId":"248","severity":1,"message":"301","line":18,"column":18,"nodeType":"250","messageId":"251","endLine":18,"endColumn":26},{"ruleId":"248","severity":1,"message":"302","line":19,"column":10,"nodeType":"250","messageId":"251","endLine":19,"endColumn":22},{"ruleId":"248","severity":1,"message":"303","line":20,"column":10,"nodeType":"250","messageId":"251","endLine":20,"endColumn":15},{"ruleId":"253","replacedBy":"304"},{"ruleId":"255","replacedBy":"305"},{"ruleId":"248","severity":1,"message":"275","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":16},{"ruleId":"248","severity":1,"message":"276","line":6,"column":18,"nodeType":"250","messageId":"251","endLine":6,"endColumn":25},{"ruleId":"248","severity":1,"message":"277","line":6,"column":27,"nodeType":"250","messageId":"251","endLine":6,"endColumn":38},{"ruleId":"248","severity":1,"message":"278","line":6,"column":40,"nodeType":"250","messageId":"251","endLine":6,"endColumn":52},{"ruleId":"248","severity":1,"message":"279","line":6,"column":54,"nodeType":"250","messageId":"251","endLine":6,"endColumn":66},{"ruleId":"248","severity":1,"message":"280","line":6,"column":68,"nodeType":"250","messageId":"251","endLine":6,"endColumn":79},{"ruleId":"248","severity":1,"message":"281","line":6,"column":81,"nodeType":"250","messageId":"251","endLine":6,"endColumn":87},{"ruleId":"248","severity":1,"message":"282","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":19},{"ruleId":"248","severity":1,"message":"283","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":14},{"ruleId":"248","severity":1,"message":"285","line":13,"column":10,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"248","severity":1,"message":"286","line":13,"column":18,"nodeType":"250","messageId":"251","endLine":13,"endColumn":23},{"ruleId":"248","severity":1,"message":"287","line":13,"column":25,"nodeType":"250","messageId":"251","endLine":13,"endColumn":29},{"ruleId":"248","severity":1,"message":"288","line":13,"column":31,"nodeType":"250","messageId":"251","endLine":13,"endColumn":43},{"ruleId":"248","severity":1,"message":"289","line":14,"column":13,"nodeType":"250","messageId":"251","endLine":14,"endColumn":16},{"ruleId":"248","severity":1,"message":"271","line":15,"column":10,"nodeType":"250","messageId":"251","endLine":15,"endColumn":14},{"ruleId":"248","severity":1,"message":"252","line":16,"column":10,"nodeType":"250","messageId":"251","endLine":16,"endColumn":18},{"ruleId":"248","severity":1,"message":"290","line":52,"column":17,"nodeType":"250","messageId":"251","endLine":52,"endColumn":27},{"ruleId":"248","severity":1,"message":"291","line":52,"column":29,"nodeType":"250","messageId":"251","endLine":52,"endColumn":36},{"ruleId":"248","severity":1,"message":"292","line":53,"column":17,"nodeType":"250","messageId":"251","endLine":53,"endColumn":21},{"ruleId":"248","severity":1,"message":"293","line":55,"column":15,"nodeType":"250","messageId":"251","endLine":55,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":106,"column":45,"nodeType":"265","messageId":"266","endLine":106,"endColumn":47},{"ruleId":"248","severity":1,"message":"260","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"259","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":14},{"ruleId":"248","severity":1,"message":"306","line":7,"column":8,"nodeType":"250","messageId":"251","endLine":7,"endColumn":20},{"ruleId":"248","severity":1,"message":"259","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":14},{"ruleId":"248","severity":1,"message":"260","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":18},{"ruleId":"248","severity":1,"message":"261","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":14},{"ruleId":"248","severity":1,"message":"307","line":15,"column":10,"nodeType":"250","messageId":"251","endLine":15,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":39,"column":46,"nodeType":"265","messageId":"266","endLine":39,"endColumn":48},{"ruleId":"248","severity":1,"message":"262","line":41,"column":15,"nodeType":"250","messageId":"251","endLine":41,"endColumn":24},{"ruleId":"248","severity":1,"message":"275","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"276","line":5,"column":18,"nodeType":"250","messageId":"251","endLine":5,"endColumn":25},{"ruleId":"248","severity":1,"message":"277","line":5,"column":27,"nodeType":"250","messageId":"251","endLine":5,"endColumn":38},{"ruleId":"248","severity":1,"message":"278","line":5,"column":40,"nodeType":"250","messageId":"251","endLine":5,"endColumn":52},{"ruleId":"248","severity":1,"message":"279","line":5,"column":54,"nodeType":"250","messageId":"251","endLine":5,"endColumn":66},{"ruleId":"248","severity":1,"message":"280","line":5,"column":68,"nodeType":"250","messageId":"251","endLine":5,"endColumn":79},{"ruleId":"248","severity":1,"message":"281","line":5,"column":81,"nodeType":"250","messageId":"251","endLine":5,"endColumn":87},{"ruleId":"248","severity":1,"message":"282","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":19},{"ruleId":"248","severity":1,"message":"283","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":14},{"ruleId":"248","severity":1,"message":"284","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":18},{"ruleId":"248","severity":1,"message":"285","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":16},{"ruleId":"248","severity":1,"message":"286","line":12,"column":18,"nodeType":"250","messageId":"251","endLine":12,"endColumn":23},{"ruleId":"248","severity":1,"message":"287","line":12,"column":25,"nodeType":"250","messageId":"251","endLine":12,"endColumn":29},{"ruleId":"248","severity":1,"message":"288","line":12,"column":31,"nodeType":"250","messageId":"251","endLine":12,"endColumn":43},{"ruleId":"248","severity":1,"message":"289","line":13,"column":13,"nodeType":"250","messageId":"251","endLine":13,"endColumn":16},{"ruleId":"248","severity":1,"message":"271","line":14,"column":10,"nodeType":"250","messageId":"251","endLine":14,"endColumn":14},{"ruleId":"248","severity":1,"message":"252","line":15,"column":10,"nodeType":"250","messageId":"251","endLine":15,"endColumn":18},{"ruleId":"248","severity":1,"message":"290","line":38,"column":17,"nodeType":"250","messageId":"251","endLine":38,"endColumn":27},{"ruleId":"248","severity":1,"message":"291","line":38,"column":29,"nodeType":"250","messageId":"251","endLine":38,"endColumn":36},{"ruleId":"248","severity":1,"message":"292","line":39,"column":17,"nodeType":"250","messageId":"251","endLine":39,"endColumn":21},{"ruleId":"248","severity":1,"message":"293","line":41,"column":15,"nodeType":"250","messageId":"251","endLine":41,"endColumn":27},{"ruleId":"248","severity":1,"message":"260","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"267","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":25},{"ruleId":"248","severity":1,"message":"268","line":5,"column":27,"nodeType":"250","messageId":"251","endLine":5,"endColumn":41},{"ruleId":"248","severity":1,"message":"308","line":61,"column":17,"nodeType":"250","messageId":"251","endLine":61,"endColumn":24},{"ruleId":"248","severity":1,"message":"309","line":61,"column":26,"nodeType":"250","messageId":"251","endLine":61,"endColumn":32},"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["310"],"no-negated-in-lhs",["311"],"'WebTemplate' is defined but never used.","'WebHome' is defined but never used.","'moment' is defined but never used.","'BlogNavBar' is defined but never used.","'Header' is defined but never used.","'isWebPage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CountryDropdown' is defined but never used.","'RegionDropdown' is defined but never used.","'InboxIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MDBBtn' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.","'MDBCol' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'ErrorMessage' is defined but never used.","'Yup' is defined but never used.","'blogStatus' is assigned a value but never used.","'comment' is assigned a value but never used.","'user' is assigned a value but never used.","'customStyles' is assigned a value but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'SidebarFooter' is defined but never used.","'FaRegHeart' is defined but never used.","'FiLogOut' is defined but never used.","'RiPencilLine' is defined but never used.","'BiCog' is defined but never used.",["310"],["311"],"'ShowBlogById' is defined but never used.","'BiPolygon' is defined but never used.","'country' is assigned a value but never used.","'region' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]