[{"F:\\w3bizz\\React\\src\\index.js":"1","F:\\w3bizz\\React\\src\\store.js":"2","F:\\w3bizz\\React\\src\\App.js":"3","F:\\w3bizz\\React\\src\\services\\localStorage.js":"4","F:\\w3bizz\\React\\src\\services\\ProtectedRoute.js":"5","F:\\w3bizz\\React\\src\\redux\\rootReducer.js":"6","F:\\w3bizz\\React\\src\\component\\about\\Register.js":"7","F:\\w3bizz\\React\\src\\component\\about\\Login.js":"8","F:\\w3bizz\\React\\src\\component\\about\\ForgotPassword.js":"9","F:\\w3bizz\\React\\src\\component\\template\\UserTemplate.js":"10","F:\\w3bizz\\React\\src\\component\\profile\\ProfileUpdate.js":"11","F:\\w3bizz\\React\\src\\component\\template\\AdminTemplate.js":"12","F:\\w3bizz\\React\\src\\component\\pages\\DefaultPages.js":"13","F:\\w3bizz\\React\\src\\component\\pages\\PageDisplay.js":"14","F:\\w3bizz\\React\\src\\component\\home\\Home.js":"15","F:\\w3bizz\\React\\src\\services\\Auth.js":"16","F:\\w3bizz\\React\\src\\component\\AdminLayout.js":"17","F:\\w3bizz\\React\\src\\services\\apiFunction.js":"18","F:\\w3bizz\\React\\src\\component\\template\\UserTemplateById.js":"19","F:\\w3bizz\\React\\src\\redux\\reducer\\SetTemplateReducers.js":"20","F:\\w3bizz\\React\\src\\redux\\reducer\\LoginReducers.js":"21","F:\\w3bizz\\React\\src\\component\\lottieIcons\\LottieIco.js":"22","F:\\w3bizz\\React\\src\\component\\modal\\Template.js":"23","F:\\w3bizz\\React\\src\\redux\\actions\\LoginActions.js":"24","F:\\w3bizz\\React\\src\\component\\modal\\Page.js":"25","F:\\w3bizz\\React\\src\\component\\modal\\DefaultPagesModal.js":"26","F:\\w3bizz\\React\\src\\component\\template\\AdminTemplateById.js":"27","F:\\w3bizz\\React\\src\\redux\\actions\\SetTemplateActions.js":"28","F:\\w3bizz\\React\\src\\component\\home\\HomeNavBar.js":"29","F:\\w3bizz\\React\\src\\component\\cardComponent\\PageCard.js":"30","F:\\w3bizz\\React\\src\\component\\payment\\StripeApp.js":"31","F:\\w3bizz\\React\\src\\component\\modal\\SlotModal.js":"32","F:\\w3bizz\\React\\src\\component\\cardComponent\\TemplateCard.js":"33","F:\\w3bizz\\React\\src\\component\\modal\\AvailableSlot.js":"34"},{"size":343,"mtime":1622381557433,"results":"35","hashOfConfig":"36"},{"size":744,"mtime":1632585756105,"results":"37","hashOfConfig":"36"},{"size":1881,"mtime":1632643488125,"results":"38","hashOfConfig":"36"},{"size":658,"mtime":1622380864606,"results":"39","hashOfConfig":"36"},{"size":567,"mtime":1633103426395,"results":"40","hashOfConfig":"36"},{"size":245,"mtime":1632727443635,"results":"41","hashOfConfig":"36"},{"size":6165,"mtime":1632708311953,"results":"42","hashOfConfig":"36"},{"size":8247,"mtime":1632714553541,"results":"43","hashOfConfig":"36"},{"size":9743,"mtime":1632581402782,"results":"44","hashOfConfig":"36"},{"size":2772,"mtime":1633102817062,"results":"45","hashOfConfig":"36"},{"size":26188,"mtime":1633108575354,"results":"46","hashOfConfig":"36"},{"size":3874,"mtime":1633076143453,"results":"47","hashOfConfig":"36"},{"size":3079,"mtime":1633104368753,"results":"48","hashOfConfig":"36"},{"size":5021,"mtime":1633106028571,"results":"49","hashOfConfig":"36"},{"size":2803,"mtime":1627618219537,"results":"50","hashOfConfig":"36"},{"size":170,"mtime":1632577890410,"results":"51","hashOfConfig":"36"},{"size":8930,"mtime":1632650529183,"results":"52","hashOfConfig":"36"},{"size":6813,"mtime":1632419754405,"results":"53","hashOfConfig":"36"},{"size":2862,"mtime":1633073275025,"results":"54","hashOfConfig":"36"},{"size":839,"mtime":1632712252525,"results":"55","hashOfConfig":"36"},{"size":657,"mtime":1622393163975,"results":"56","hashOfConfig":"36"},{"size":941,"mtime":1633074207588,"results":"57","hashOfConfig":"36"},{"size":7502,"mtime":1633104192492,"results":"58","hashOfConfig":"36"},{"size":262,"mtime":1630079981616,"results":"59","hashOfConfig":"36"},{"size":11842,"mtime":1633105431613,"results":"60","hashOfConfig":"36"},{"size":4561,"mtime":1633105690774,"results":"61","hashOfConfig":"36"},{"size":1437,"mtime":1633102779303,"results":"62","hashOfConfig":"36"},{"size":527,"mtime":1632711849276,"results":"63","hashOfConfig":"36"},{"size":10737,"mtime":1627616481272,"results":"64","hashOfConfig":"36"},{"size":5933,"mtime":1633077040004,"results":"65","hashOfConfig":"36"},{"size":9180,"mtime":1633108770380,"results":"66","hashOfConfig":"36"},{"size":8493,"mtime":1633108506099,"results":"67","hashOfConfig":"36"},{"size":10960,"mtime":1633076980781,"results":"68","hashOfConfig":"36"},{"size":9331,"mtime":1633107976012,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"r5sb9h",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\w3bizz\\React\\src\\index.js",[],["151","152"],"F:\\w3bizz\\React\\src\\store.js",[],"F:\\w3bizz\\React\\src\\App.js",[],"F:\\w3bizz\\React\\src\\services\\localStorage.js",[],"F:\\w3bizz\\React\\src\\services\\ProtectedRoute.js",[],"F:\\w3bizz\\React\\src\\redux\\rootReducer.js",[],"F:\\w3bizz\\React\\src\\component\\about\\Register.js",["153","154","155"],"import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport { registerApi } from '../../services/apiFunction';\nimport {Typography} from '@material-ui/core'\nimport { CircularProgress } from '@material-ui/core'\n\n\nclass Register extends React.Component {\n    state = {\n        data: '',\n        loader:false,\n        isSign: false\n    }\n    render() {\n        if (this.state.isSign === true) {\n            return <Redirect to=\"/\" />\n        }\n        return this.state.loader==false?(\n            <>\n                <br />\n                <div className=\"row col-lg-10 mx-auto mt-5\">\n                <div className=\"col-sm-6 col-lg-6\">\n                    <Formik\n                        initialValues={{\n                            fname: '',\n                            lname: '',\n                            email: '',\n                            password: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            fname: Yup.string()\n                                .required('First Name is required'),\n                            lname: Yup.string()\n                                .required('Last Name is required'),\n                            email: Yup.string()\n                                .email('Email is invalid')\n                                .required('Email is required'),\n                            password: Yup.string()\n                                .required('Password is required')\n                                .matches(\n                                    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n                                    \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n                                ),\n                        })}\n                        onSubmit={async (fields) => {\n                            this.setState({loader:true})\n                            const response = await registerApi(fields)\n                            if (response.data.success == \"1\") {\n                                toast.success('Registration Successfully')\n                                this.props.history.push('/login')\n                                this.setState({loader:false})\n                            } else {\n                                this.setState({loader:false})\n                                toast.error('Registration Unsuccessfully')\n                            }\n                        }}\n                        render={({ errors, touched, setFieldValue }) => (\n                            <div className=\"card card-Width\">\n                                <div className=\"card-body\">\n                                    <Form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"First Name\">First Name</label>\n                                            <Field name=\"fname\" type=\"text\" className={'form-control' + (errors.fname && touched.fname ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"fname\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"Last Name\">Last Name</label>\n                                            <Field name=\"lname\" type=\"text\" className={'form-control' + (errors.lname && touched.lname ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"lname\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\">Email</label>\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-info mr-2\">Register</button>\n                                            &nbsp;\n                                            <button type=\"reset\" className=\"btn btn-secondary\"\n                                                onClick={this.ResetFunction}>Reset</button>\n                                        </div>\n                                        <Typography variant=\"body1\">\n                                            Already Have an Account?{' '}\n                                            <Link to=\"/\">\n                                                Login\n                                            </Link>\n                                        </Typography>\n                                    </Form>\n                                </div>\n                            </div>\n                        )}\n                    />\n                </div>\n                \n                <div className=\"col-sm-6 col-lg-6\">\n                <img src=\"/register.jpeg\" className=\"img-fluid\"/>\n                </div>\n                </div>\n            </>\n        ):(\n            <CircularProgress />\n        )\n    }\n}\n\nexport default withRouter(Register);\n","F:\\w3bizz\\React\\src\\component\\about\\Login.js",["156","157","158","159"],"import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { loginUserError, loginUserSuccess } from '../../redux/actions/LoginActions'\nimport { connect } from 'react-redux';\nimport { postLogin } from '../../services/apiFunction'\nimport { CircularProgress, Typography } from '@material-ui/core'\nimport '../App.css'\n\nclass Login extends Component {\n    state = {\n        loginError: false,\n        loader: false,\n        loginMessage: \"Username or Paasword is Incorrect\",\n        token: JSON.parse(localStorage.getItem('login'))\n    }\n\n    onSubmit = async (fields) => {\n        delete fields.recap;\n        this.captcha.reset();\n        this.setState({ loader: true })\n        await postLogin(fields)\n            .then((res) => {\n                if (res.data.success == 1) {\n                    this.setState({ loginError: false })\n                    let user1 = res.data.data\n                    this.props.loginUsersSuccess(user1)\n                    localStorage.setItem('login', JSON.stringify(true))\n                    localStorage.setItem('token', (res.data.token))\n                    if (user1.type == \"DEFAULT\") {\n                        this.props.history.push('/recentWebTemplate')\n                    }\n                    else{\n                        this.props.history.push('/savedWebTemplate')\n                    }\n                }\n                else {\n                    this.setState({ loginError: true })\n                    this.setState({ loader: false })\n                }\n            })\n            .catch(err => { console.log(err) })\n    }\n\n    // loginUnsuccessFul() {\n    //     console.log(this.props.data)\n    //     if (this.props.data.length===0) {\n    //         console.log(\"true\")\n    //         this.setState({ loginError: true })\n    //         return \"Error\"\n    //     }\n    //     else {\n    //         this.setState({ loginError: false })\n    //         return \"Success\"\n    //     }\n    // }\n    render() {\n        return (\n            <>\n                <div className=\"row col-lg-10 mx-auto mt-5\">\n                    <div className=\"col-sm-6 col-lg-6\" >\n                        <img src=\"/login.jpeg\" className=\"img-fluid\" />\n                    </div>\n                    <div className=\"col-sm-6 col-lg-6\" >\n                        <Formik\n                            initialValues={{\n                                email: '',\n                                password: '',\n                                recap: \"\",\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required'),\n                                password: Yup.string()\n                                    .min(6, 'Password must be at least 6 characters')\n                                    .required('Password is required'),\n                                recap: Yup.string().required('I am Not Robot').nullable()\n                            })}\n                            onSubmit={this.onSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body card-Width\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"password\">Password</label>\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\"\n                                                style={{ transform: \"scale(0.77)\", webkiTransform: \"scale(0.77)\", transformOrigin: \"0 0\", webkitTransformOrigin: \"0 0\" }}\n                                            >\n                                                <ReCAPTCHA name=\"recap\"\n                                                    siz=\"compact\"\n                                                    sitekey=\"6Le_5kgcAAAAANIwiif5bGdTIxqLTEF1Z3mL12ue\"\n                                                    onChange={(value) => setFieldValue('recap', value)}\n                                                    ref={e => (this.captcha = e)}\n                                                    className={(errors.recap && touched.recap ? ' is-invalid' : '')}\n                                                />\n                                                <ErrorMessage name=\"recap\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Login</button>\n                                                }\n                                                &nbsp;\n                                                <button type=\"reset\" className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }}\n                                                    onClick={() => this.captcha.reset()}\n                                                >Reset</button>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <Link to=\"/forgotpass\" className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }}>Forgot Password?</Link>\n                                            </div>\n                                            <div>\n                                                {this.state.loginError === true && <p style={{ \"color\": \"red\" }}>{this.state.loginMessage}</p>}\n                                            </div>\n                                            <Typography variant=\"body1\">\n                                                Don't have an account?{' '}\n                                                <Link to=\"/register\">\n                                                    Sign up\n                                                </Link>\n                                            </Typography>\n                                        </Form>\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.login && state.login.error,\n        data: state.login && state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUsersSuccess: (data) => dispatch(loginUserSuccess(data)),\n        loginUsersError: (data) => dispatch(loginUserError(data))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","F:\\w3bizz\\React\\src\\component\\about\\ForgotPassword.js",["160","161","162","163"],"import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { withRouter } from 'react-router-dom'\nimport { loginUserError, loginUserSuccess } from '../../redux/actions/LoginActions'\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { sendEmailOTP, sendVerifyOTP, patchApi } from '../../services/apiFunction'\nimport { CircularProgress } from '@material-ui/core'\nimport '../App.css'\n\nclass ForgotPassword extends Component {\n    state = {\n        otpDisplay: false,\n        loader: false,\n        passwordDisplay:false,\n        otpError:false,\n        passwordError:false,\n        email:'',\n    }\n\n    onOTPSubmit = async (fields) => {\n      const obj = {}\n        obj.email = fields.email\n        obj.otp = fields.otp\n        const response = await sendVerifyOTP(obj)\n        if(response.STATUS == \"SUCCESS\"){\n          this.setState({email:fields.email})\n          this.setState({passwordDisplay:true})\n        }else{\n          this.setState({otpError:true})\n        }\n    }\n\n    onEmailSubmit = async (fields) => {\n      const obj = {}\n      obj.email = fields.email\n      const response = await sendEmailOTP(obj)\n      if(response.STATUS == \"SUCCESS\"){\n        this.setState({email:fields.email})\n        this.setState({otpDisplay:true})\n      }else{\n        this.setState({passwordError:true})\n      }\n  }\n\n  onPasswordSubmit = async (fields) => {\n    \n    const obj = {}\n    obj.email = fields.email\n    obj.password = fields.password\n    const response = await patchApi(obj)\n    if(response.STATUS == \"SUCCESS\"){\n      this.props.history.push('/login')\n      this.setState({email:fields.email})\n    }else{\n    toast.error(\"Something Went Wrong\")\n    }\n}\n    render() {\n        return (\n            <>\n                <div className=\"row col-lg-10 mx-auto mt-5\">\n                    <div className=\"col-lg-6\">\n                    <img src=\"/login.jpeg\" className=\"img-fluid\"/>\n                    </div>\n                    <div className=\"col-lg-6 col-xs-12\">\n                    {!this.state.otpDisplay && !this.state.passwordDisplay &&\n                      <Formik\n                            initialValues={{\n                                email: ''\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required')\n                            })}\n                            onSubmit={this.onEmailSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />}\n                        {this.state.otpDisplay && !this.state.passwordDisplay &&\n                        <Formik\n                            initialValues={{\n                                email: this.state.email,\n                                otp:''\n                            }}\n                            validationSchema={Yup.object().shape({\n                                otp: Yup.string().required('Please Enter OTP')\n                            })}\n                            onSubmit={this.onOTPSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"email\">Email</label>\n                                                <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"otp\">Enter OTP</label>\n                                                <Field name=\"otp\" type=\"text\" className={'form-control' + (errors.otp && touched.otp ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"otp\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        {this.state.otpError &&<div style={{color:\"darkred\"}}>Please Enter Correct OTP</div>}\n                                        <br />\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        }\n                        {this.state.passwordDisplay && this.state.otpDisplay &&\n                          <Formik\n                            initialValues={{\n                                email: this.state.email,\n                                password: '',\n                            }}\n                            validationSchema={Yup.object().shape({\n                                password: Yup.string()\n                                    .min(6, 'Password must be at least 6 characters')\n                                    .required('Password is required')\n                            })}\n                            onSubmit={this.onPasswordSubmit}\n                            render={({ errors, status, touched, setFieldValue }) => (\n                                <div className=\"card\" style={{ width: \"90%\" }}>\n                                    <div className=\"card-body container\" >\n                                        <Form>\n                                            <div className=\"form-group\">\n                                                <label htmlFor=\"password\">Password</label>\n                                                <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                {this.state.loader ?\n                                                    <CircularProgress /> :\n                                                    <button style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} type=\"submit\" className=\"btn mr-2 text-white\">Submit</button>\n                                                }\n                                            </div>\n                                        </Form>\n                                        <br />\n                                        {this.state.passwordError &&<div style={{color:\"darkred\"}}>Please Enter Correct Password</div>}\n                                    </div>\n                                </div>\n                            )}\n                        />\n                        }\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: state.login && state.login.error,\n        data: state.login && state.login.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUsersSuccess: (data) => dispatch(loginUserSuccess(data)),\n        loginUsersError: (data) => dispatch(loginUserError(data))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPassword));","F:\\w3bizz\\React\\src\\component\\template\\UserTemplate.js",["164","165"],"F:\\w3bizz\\React\\src\\component\\profile\\ProfileUpdate.js",["166","167","168","169","170","171","172","173","174","175","176","177"],"F:\\w3bizz\\React\\src\\component\\template\\AdminTemplate.js",["178","179","180","181","182"],"import React, { Component } from 'react';\nimport Modal from 'react-modal'\nimport { connect } from 'react-redux';\nimport { setAdminTemplate, setDefaultPages } from '../../redux/actions/SetTemplateActions'\nimport AdminLayout from '../AdminLayout';\nimport { getTemplate } from '../../services/apiFunction';\nimport AdminTemplateById from './AdminTemplateById';\nimport LottieIcon from '../lottieIcons/LottieIco';\nimport loadingAnimationData from '../lottieIcons/loadingV2.json'\nimport TemplateModal from '../modal/Template'\nimport PageModal from '../modal/Page'\n\nclass AdminTemplate extends Component {\n    state = {\n        showModal: false,\n        loader: true,\n        isPaused: true,\n        isStopped: true,\n        showPageModal: false,\n    }\n\n\n    async componentDidMount() {\n        const response = await getTemplate(this.props.user.username)\n        if (response.STATUS == \"SUCCESS\") {\n            let list = []\n            if (response.DEFAULT_TEMPLATE && response.DEFAULT_TEMPLATE.length > 0) {\n                response.DEFAULT_TEMPLATE.map((val) => {\n                    if (val.is_hidden == \"FALSE\") {\n                        list.push(val)\n                    }\n                })\n            }\n            if (this.props.user.type == \"ADMIN\") {\n                this.props.AdminTemplate(response.DEFAULT_TEMPLATE)\n            }else{\n                this.props.AdminTemplate(list)\n            }\n            this.setState({ loader: false })\n        }\n\n    }\n\n    toggleLoader = () => {\n        this.setState({ loader: !this.state.loader })\n    }\n\n    toggle = () => {\n        this.setState({\n            showModal: !this.state.showModal,\n        });\n    }\n\n    togglePage = () => {\n        this.setState({\n            showPageModal: !this.state.showPageModal,\n        });\n    }\n\n    render() {\n        Modal.setAppElement('*')\n        const { user } = this.props;\n        const { loader } = this.state\n        return loader ?\n            (\n                <>\n                    <div style={{ display: 'flex', justifyContent: 'center', paddingTop: \"20%\" }}>\n                        <LottieIcon Play={true} animationData={loadingAnimationData} type=\"Running\" height={50} width={50} />\n                    </div>\n                </>\n            ) :\n            (\n                <>\n                    <AdminLayout title=\"Default Templates\">\n                        <div style={{ boxSizing: \"border-box\", width: \"100%\", height: \"4em\" }}>\n                            {user.type == \"ADMIN\" &&\n                                <>\n                                    <button style={{ float: \"right\", borderRadius: \"6px\", backgroundColor: \"#1DABB8\", marginLeft: \"10px\" }} className=\"btn text-white\" onClick={() => this.setState({ showModal: true })}>Create Template</button>\n                                </>\n                            }\n                        </div>\n                        <br />\n                        <AdminTemplateById loader={this.toggleLoader}/>\n                        <TemplateModal modal={this.state.showModal} loader={this.toggleLoader} toggle={this.toggle} title={\"Create Template\"} Add={true} data={\"\"} type={\"DEFAULT\"} />\n                        <PageModal modal={this.state.showPageModal} loader={this.toggleLoader} toggle={this.togglePage} title={\"Add Default Page\"} add={true} editData={\"\"} type={\"DEFAULT\"} />\n                    </AdminLayout>\n                </>\n            );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.login && state.login.data,\n        defaultPages: state.template && state.template.defaultPages\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        AdminTemplate: (data) => dispatch(setAdminTemplate(data)),\n        defaultPages: (data) => dispatch(setDefaultPages(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminTemplate);\n","F:\\w3bizz\\React\\src\\component\\pages\\DefaultPages.js",["183","184","185"],"F:\\w3bizz\\React\\src\\component\\pages\\PageDisplay.js",["186","187","188","189","190","191","192","193"],"F:\\w3bizz\\React\\src\\component\\home\\Home.js",[],"F:\\w3bizz\\React\\src\\services\\Auth.js",[],"F:\\w3bizz\\React\\src\\component\\AdminLayout.js",["194","195","196","197","198","199","200","201","202","203","204"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n  Drawer, AppBar, Toolbar, List, CssBaseline, Typography, Divider,\n  IconButton, ListItem, ListItemIcon, ListItemText, Collapse, Popover, Button, Link\n} from '@material-ui/core';\nimport {\n  Home, Menu as MenuIcon, ChevronLeft as ChevronLeftIcon, ChevronRight as ChevronRightIcon,\n  ExpandLess as IconExpandLess, ExpandMore as IconExpandMore, Web as WebIcon, MoveToInbox as InboxIcon,\n  KeyboardArrowDown as KeyboardArrowDownIcon, WebAsset\n} from '@material-ui/icons';\nimport { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { loginUserSuccess } from '../redux/actions/LoginActions'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  menuItem: {\n    width: drawerWidth,\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    height: \"5.35em\",\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  typography: {\n    padding: theme.spacing(2),\n    cursor: \"default\",\n  },\n  activeListItem: {\n    borderLeft: `4px solid ${\"lightgrey\"}`,\n    borderRadius: '4px',\n    backgroundColor: \"lightgrey\",\n    '& $listItemText': {\n      color: theme.palette.text.primary\n    },\n    '& $listItemIcon': {\n      color: theme.palette.primary.main,\n      marginLeft: '-4px'\n    }\n  }\n}));\n\nexport default function AdminLayout(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.login.data)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const openAnchor = Boolean(anchorEl);\n  const id = openAnchor ? 'simple-popover' : undefined;\n\n  function handleClick() {\n    setOpen1(!open1)\n  }\n\n  function handleClick2() {\n    setOpen2(!open2)\n  }\n\n  const handleClickAnchor = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseAnchor = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n    localStorage.clear()\n    let obj = {}\n    dispatch(loginUserSuccess(obj))\n    history.push('/')\n  }\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"#1DABB8\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar style={{ color: \"#1DABB8\" }}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap style={{ flex: 1 }}>\n            {props.title}\n          </Typography>\n          <div>\n            <img src=\"/humanavtar.jpg\" height=\"75em\" aria-describedby={id} variant=\"contained\" style={{ color: \"grey\" }} onClick={handleClickAnchor} />\n            <Button className=\"btn text-white\" style={{ borderRadius: \"6px\", backgroundColor: \"#1DABB8\" }} onClick={() => { logout() }}>Logout</Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n\n          {user.type != \"ADMIN\" &&\n            <ListItem button component={NavLink} to=\"/recentWebTemplate\" className={classes.menuItem} activeClassName={classes.activeListItem}>\n              <ListItemIcon className={classes.menuItemIcon}>\n                <Home />\n              </ListItemIcon>\n              <ListItemText primary=\"Recent\" />\n            </ListItem>\n          }\n          {/* <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem >\n          <ListItemIcon className={classes.menuItemIcon}>\n          <WebAssetIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/recentPageTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <PageviewIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse> */}\n\n          <ListItem button component={NavLink} to=\"/savedWebTemplate\" className={classes.menuItem} activeClassName={classes.activeListItem}>\n            <ListItemIcon selected={true} className={classes.menuItemIcon}>\n              <WebIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Template\" />\n          </ListItem>\n\n\n          {user.type == \"ADMIN\" &&\n            <ListItem button component={NavLink} to=\"/savedPages\" className={classes.menuItem} activeClassName={classes.activeListItem}>\n              <ListItemIcon selected={true} className={classes.menuItemIcon}>\n                <WebAsset />\n              </ListItemIcon>\n              <ListItemText primary=\"Default Page\" />\n            </ListItem>\n          }\n          {/* <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <List component=\"div\" disablePadding>\n          <ListItem button component={NavLink} to=\"/savedWebTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <WebAssetIcon />\n        </ListItemIcon>\n          <ListItemText primary=\"Template\" />\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/savedPageTemplate\" className={classes.menuItem}>\n          <ListItemIcon className={classes.menuItemIcon}>\n          <PageviewIcon />\n        </ListItemIcon>\n            <ListItemText primary=\"Web Page\" />\n          </ListItem>\n        </List>\n      </Collapse> */}\n\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div>\n          {props.children}\n        </div>\n      </main>\n      <Popover\n        id={id}\n        open={openAnchor}\n        anchorEl={anchorEl}\n        onClose={handleCloseAnchor}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography} onClick={() => { history.push('/updateProfile') }}>User-Profile</Typography>\n      </Popover>\n    </div>\n  );\n}\n\nAdminLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n","F:\\w3bizz\\React\\src\\services\\apiFunction.js",["205"],"import axios from 'axios';\r\n\r\nexport function postLogin(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/login.php\", fields)\r\n            .then((res) => resolve(res))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function addPage(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/addPage.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function uploadImage(data) {\r\n    let formData = new FormData()\r\n    formData.append(\"upload_preset\", \"w3bizz_serdxz\")\r\n    formData.append(\"file\", data)\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://api.cloudinary.com/v1_1/w3bizz-com/image/upload\", formData)\r\n            .then((res) => resolve(res))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function mergeTemplate(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/mergeTemplate.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function mergePage(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/mergePage.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function publishTemplate(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/publish.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function addTemplate(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/addTemplate.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function sendEmailOTP(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/sendemailotp.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function sendVerifyOTP(fields, username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/verifyotp.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function updateTemplate(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/updateTemplate.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function addSlots(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/addSlot.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function payMoney(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/getIntent.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function addTransaction(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/addTransaction.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function updateTransaction(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/updateTransaction.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function updateSlots(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/updateSlot.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function deleteSlots(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/deleteSlot.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function deleteTransaction(fields) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/deleteTransaction.php\", fields)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function getTemplate(username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`https://w3bizz.com/template/classes/getTemplate.php?username=${username}`)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function getTransaction(username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`https://w3bizz.com/template/classes/getTransaction.php?username=${username}`)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function getSlots(username) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`https://w3bizz.com/template/classes/getSlot.php?username=${username}`)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function registerApi(data) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('https://w3bizz.com/template/register.php', data)\r\n            .then((res) => resolve(res))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function patchApi(data, id) {\r\n    return new Promise((resolve, reject) => {\r\n        if (id != undefined) {\r\n            data.username = id\r\n        }\r\n        axios.post(\"https://w3bizz.com/template/classes/updateUser.php\", data)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function updateHide(value) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/updateTemplate.php\", value)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n\r\nexport function updateHidePage(value) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(\"https://w3bizz.com/template/classes/updatePage.php\", value)\r\n            .then((res) => resolve(res.data))\r\n            .catch((err) => reject(err))\r\n    })\r\n}\r\n","F:\\w3bizz\\React\\src\\component\\template\\UserTemplateById.js",["206","207","208","209","210","211","212"],"import React, { Component } from 'react';\nimport ModalPage from '../modal/Template'\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/SetTemplateActions'\nimport {Tooltip, Card, CardContent} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom'\nimport '../../asset/Template.css'\nimport {Web as WebIcon, WebAsset, Edit as EditIcon, Check as CheckIcon, Clear as ClearIcon} from '@material-ui/icons';\nimport TemplateCard from '../cardComponent/TemplateCard';\n\nclass UserTemplateById extends Component {\n\n    state = {\n        editDetails:'',\n        showModal: false,\n    }\n\n    render() {\n        const {template} = this.props\n        return (\n            <>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {template.length > 0 ? \n                        (\n                        <>\n                        <TemplateCard Publish={true} ViewPages={true} EditTemplate={true} CopyTemplate={true} userTemplate={template} />\n                        </>\n                        ):(\n                            <div>\n                                <h3 className=\"demo-heading\">\n                                It is Very Easy To Create Template.\n                                <span className=\"demo-sub\">You Can Either choose Built-In Template or Create New Blank Template to Start.</span>\n                                </h3>\n                                <div className=\"demo-div\">\n                                <Card className=\"demo-card\" onClick={(e)=>{this.props.history.push('/savedWebTemplate')}}>\n                                <WebIcon style={{fontSize:120}} className=\"demo-icon\"/>\n                                <h6 className=\"demo-title\">Template</h6>                                    \n                                <span className=\"demo-sub\">Choose from our pre-defined templates curated for your website.</span> \n                                </Card>\n                                <Card className=\"demo-card\" onClick={(e) => this.props.toggle()}>\n                                <WebAsset style={{fontSize:120}} className=\"demo-icon\"/>\n                                <h6 className=\"demo-title\">Create New Template</h6>\n                                <span className=\"demo-sub\">You can create a new blank template in few clicks and build your website from scratch.</span>                                  \n                                </Card>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        template: state.template.userTemplate\n    }\n}\n\nexport default connect(mapStateToProps, null)(withRouter(UserTemplateById));\n","F:\\w3bizz\\React\\src\\redux\\reducer\\SetTemplateReducers.js",[],"F:\\w3bizz\\React\\src\\redux\\reducer\\LoginReducers.js",[],"F:\\w3bizz\\React\\src\\component\\lottieIcons\\LottieIco.js",["213"],"import Lottie from 'react-lottie'\r\n\r\n const LottieIcon = (props) => {\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: false, \r\n        animationData: props.animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    const defaultRunningOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: props.animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Lottie\r\n            options={props.type==\"Running\" ? defaultRunningOptions : defaultOptions}\r\n            height={props.height?props.height:30}\r\n            width={props.width?props.width:30}\r\n            style={props.style?props.style:{ margin: \"0 0 0 0\" }}\r\n            isStopped={props.stop}\r\n            isPaused={props.pause} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LottieIcon","F:\\w3bizz\\React\\src\\component\\modal\\Template.js",["214","215","216","217","218","219","220","221","222","223","224","225"],"F:\\w3bizz\\React\\src\\redux\\actions\\LoginActions.js",["226"],"import axios from 'axios'\n\nexport const loginUserError = (error) => {\n    return{\n        type:'LOGINUSERERROR',\n        payload:error\n    }\n}\n\nexport const loginUserSuccess = (data) => {\n    return{\n        type:'LOGINUSERSUCCESS',\n        payload:data\n    }\n}\n","F:\\w3bizz\\React\\src\\component\\modal\\Page.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"F:\\w3bizz\\React\\src\\component\\modal\\DefaultPagesModal.js",["248","249","250","251","252"],"F:\\w3bizz\\React\\src\\component\\template\\AdminTemplateById.js",["253","254","255"],"F:\\w3bizz\\React\\src\\redux\\actions\\SetTemplateActions.js",[],"F:\\w3bizz\\React\\src\\component\\home\\HomeNavBar.js",["256","257"],"import React, { useState } from 'react';\r\n\r\nconst HomeNavBar = () => {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top \">\r\n               <div className=\"container \">\r\n                 <a\r\n                  aria-current=\"page\"\r\n                  className=\"navbar-brand\"\r\n                  href=\"https://www.chatwoot.com/\"\r\n                >\r\n                  <img\r\n                    src=\"/asset/brand-d6ec4f18194acc9e590c511b9ae51974.svg\"\r\n                    className=\"navbar-brand-img\"\r\n                    alt=\"...\"\r\n                    style={{maxHeight: \"2rem\" ,verticalAlign: \"top\",width: \"auto\"}}\r\n                  />\r\n                </a>\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarCollapse\"\r\n                  aria-controls=\"navbarCollapse\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n                  <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div\r\n                  className=\"collapse navbar-collapse justify-content-end mt-xs-10\"\r\n                  id=\"navbarCollapse\"\r\n                >\r\n                  <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item dropdown\">\r\n                      <a\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        id=\"navbarDocumentation\"\r\n                        data-toggle=\"dropdown\"\r\n                        href=\"https://www.chatwoot.com/#\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        Features\r\n                      </a>\r\n                      <div\r\n                        className=\"dropdown-menu dropdown-menu-md px-5 bg-white\"\r\n                        aria-labelledby=\"navbarDocumentation\"\r\n                      >\r\n                        <div className=\"row \">\r\n                          <div className=\"col-md-6 border-right-md\">\r\n                            <div className=\"list-group list-group-flush \">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/shared-inbox\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Shared Inbox\">\r\n                                        📥\r\n                                      </span>\r\n                                    </div>\r\n                                    Shared inbox\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Collaborate easily with other agents and manage\r\n                                    conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/live-chat\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        💬\r\n                                      </span>\r\n                                    </div>\r\n                                    Live Chat\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Simple and elegant live chat for your website\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/channels\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Live chat\">\r\n                                        🎡\r\n                                      </span>\r\n                                    </div>\r\n                                    Channels\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Connect with your customers on the channels of\r\n                                    their choice\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"list-group list-group-flush border-top border-top-md-0\">\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/chatbots\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Chatbots\">\r\n                                        🤖\r\n                                      </span>\r\n                                    </div>\r\n                                    Chatbots\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Easily integrate with popular chatbot platforms to\r\n                                    automate conversations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/mobile-apps\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Mobile apps\">\r\n                                        📱\r\n                                      </span>\r\n                                    </div>\r\n                                    Mobile apps\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Don't miss out on new customers. Manage\r\n                                    conversations on the go\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                              <a\r\n                                className=\"features-menu-item list-group-item bg-white\"\r\n                                href=\"https://www.chatwoot.com/features/integrations\"\r\n                              >\r\n                                <div className=\"mx-2\">\r\n                                  <h4 className=\"mb-1 d-flex align-items-center title\">\r\n                                    <div className=\"icon icon-xs mr-3 d-inline-block text-primary\">\r\n                                      <span role=\"img\" aria-label=\"Integrations\">\r\n                                        ⚡\r\n                                      </span>\r\n                                    </div>\r\n                                    Integrations\r\n                                  </h4>\r\n                                  <p className=\"font-size-sm text-gray-700 mb-0\">\r\n                                    Super charge your workflow with integrations\r\n                                  </p>\r\n                                </div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/blog\">\r\n                        Blog\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"https://www.chatwoot.com/pricing\">\r\n                        Pricing\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://www.chatwoot.com/help-center\"\r\n                      >\r\n                        Help Center\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item mr-4\">\r\n                      <a\r\n                        className=\"nav-link\"\r\n                        href=\"https://app.chatwoot.com/app/login\"\r\n                      >\r\n                        Login\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <a\r\n                    className=\"navbar-btn btn btn-sm btn-primary lift\"\r\n                    href=\"https://app.chatwoot.com/app/auth/signup\"\r\n                  >\r\n                    Create an account\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n            </>\r\n    );\r\n}\r\n \r\nexport default HomeNavBar;","F:\\w3bizz\\React\\src\\component\\cardComponent\\PageCard.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useState, useEffect } from 'react'\r\nimport { Tooltip, Card, CardContent, makeStyles } from '@material-ui/core';\r\nimport { getTemplate, updateHidePage } from '../../services/apiFunction';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/SetTemplateActions'\r\nimport '../../asset/Template.css'\r\nimport { useHistory } from 'react-router';\r\nimport PageModal from '../modal/Page'\r\nimport {\r\n    Edit as EditIcon,\r\n    Slideshow as SlideshowIcon,\r\n    Visibility as VisibilityIcon,\r\n    VisibilityOff as VisibilityOffIcon,\r\n    SettingsApplications as SettingsApplicationsIcon,\r\n} from '@material-ui/icons';\r\nimport '../../asset/PageCard.css'\r\n\r\nconst PageCard = (props) => {\r\n    const history = useHistory()\r\n    const [loader, setLoader] = useState(false)\r\n    const [editDetails, setEditDetails] = useState([])\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [isPaused, setIsPaused] = useState(false)\r\n    \r\n    const handleView = (event, value) => {\r\n        window.open(`https://w3bizz.com/editor?${value.page_id}`)\r\n    }\r\n\r\n    const handleHide = async (value) => {\r\n        let obj = {}\r\n        obj.id = value.page_id\r\n        obj.is_hidden = (value.is_hidden === \"FALSE\" ? \"TRUE\" : \"FALSE\")\r\n        const response = await updateHidePage(obj)\r\n        if (response.STATUS == \"SUCCESS\") {\r\n            let list = []\r\n            let response = await getTemplate(props.user.username)\r\n            if (props.user.type == \"ADMIN\") {\r\n                props.adminTemplate(response.DEFAULT_TEMPLATE)\r\n            }\r\n            else {\r\n                props.template(response.USER_TEMPLATE)\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggle = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    const handleEdit = (e, value) => {\r\n        toggle()\r\n        setEditDetails(value)\r\n        e.preventDefault()\r\n    }\r\n\r\n    const preView = async (e, link) => {\r\n        if (link != '') {\r\n            window.open(link, \"_blank\")\r\n        }\r\n        else {\r\n            toast.error(\"No Preview is Present\")\r\n        }\r\n    }\r\n\r\n    const toggleLoader = () => {\r\n        setLoader(!loader)\r\n    }\r\n\r\n    const classes = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n\r\n    console.log(loader)\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {props.page.map(value =>\r\n                        <div className=\"col-sm-4 col-xs-4\">\r\n                            <Card className={classes.root} variant=\"outlined\" style={{ boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }}>\r\n                                <img src={value.image ? value.image : \"https://res.cloudinary.com/w3bizz-com/image/upload/c_scale,w_425/v1632246930/2_hjs08o.png\"} style={{ height: \"15em\", width: \"100%\" }} />\r\n                                <br />\r\n                                <CardContent>\r\n                                    <span >\r\n                                        <h4 style={{ display: \"inline\" }}>{value.page_title}</h4>\r\n                                        <br />\r\n                                        <br />\r\n                                        <span style={{ display: \"flex\" }} className=\"mouseCursor\">\r\n                                            {props.Preview == true &&\r\n                                                <Tooltip title=\"Preview of Page\"><SlideshowIcon onClick={(e) => { preView(e, value.preview_link) }} /></Tooltip>\r\n                                            }\r\n                                            {props.EditCode == true &&\r\n                                                <Tooltip title=\"Edit Page\"><EditIcon onClick={(event) => handleView(event, value)} /></Tooltip>\r\n                                            }\r\n                                            {props.ShowHide == true &&\r\n                                                <span onClick={() => { handleHide(value) }}>\r\n                                                    {value.is_hidden == \"TRUE\" ? <Tooltip title=\"SHOW\"><VisibilityOffIcon /></Tooltip> : <Tooltip title=\"HIDE\"><VisibilityIcon /></Tooltip>}\r\n                                                </span>\r\n                                            }\r\n                                            {props.EditPage == true &&\r\n                                                <Tooltip title=\"Edit Page Details\"><SettingsApplicationsIcon onClick={(event) => handleEdit(event, value)} /></Tooltip>\r\n                                            }\r\n                                        </span>\r\n                                    </span>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <PageModal modal={showModal} loader={props.loader} toggle={toggle} title={\"Edit Page\"} Add={false} editData={editDetails} type={props.type}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.login.data,\r\n        template: state.template.userTemplate,\r\n        published: state.template.published,\r\n        adminTemplate: state.template.adminTemplate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        template: (data) => dispatch(actions.setUserTemplate(data)),\r\n        adminTemplate: (data) => dispatch(actions.setAdminTemplate(data)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageCard)","F:\\w3bizz\\React\\src\\component\\payment\\StripeApp.js",["273","274","275","276","277"],"F:\\w3bizz\\React\\src\\component\\modal\\SlotModal.js",["278","279","280","281","282","283","284","285","286"],"F:\\w3bizz\\React\\src\\component\\cardComponent\\TemplateCard.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { useState, useEffect } from 'react'\r\nimport { Tooltip, Card, CardContent, makeStyles } from '@material-ui/core';\r\nimport { addSlots, getSlots, mergeTemplate, publishTemplate, updateHide, updateSlots } from '../../services/apiFunction';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions/SetTemplateActions'\r\nimport LottieIcon from '../lottieIcons/LottieIco';\r\nimport animationDataCopy from '../lottieIcons/copy.json'\r\nimport editAnimationData from '../lottieIcons/edit.json'\r\nimport MenuIcon from '../lottieIcons/menuV2.json'\r\nimport loadingAnimationData from '../lottieIcons/LottieIco'\r\nimport '../../asset/Template.css'\r\nimport { VisibilityOff as VisibilityOffIcon, Visibility as VisibilityIcon } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router';\r\nimport AvailableSlot from '../modal/AvailableSlot';\r\nimport TemplateModal from '../modal/Template'\r\nimport moment from 'moment';\r\n\r\nconst TemplateCard = (props) => {\r\n    const history = useHistory()\r\n    const [slot, setSlot] = useState('')\r\n    const [loader, setLoader] = useState(false)\r\n    const [slotDetails, setSlotDetails] = useState([])\r\n    const [expiredSlots, setExpiredSlots] = useState([])\r\n    const [templateID, setTemplateID] = useState('')\r\n    const [editDetails, setEditDetails] = useState([])\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [editShowModal, setEditShowModal] = useState(false)\r\n    const [fileSrc, setFileSrc] = useState('')\r\n    const [isPaused, setIsPaused] = useState(true)\r\n    const [isStopped, setIsStopped] = useState(true)\r\n\r\n    const handleView = (event, value) => {\r\n        let type = value.type == \"DEFAULT\" ? \"DEFAULT\" : \"USER\"\r\n        history.push({ pathname: 'webTemplate', state: { template: value, type: type } })\r\n    }\r\n\r\n    const toggle = () => {\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const editToggle = () => {\r\n        setEditShowModal(!editShowModal)\r\n    }\r\n\r\n    const toggleLoader = () => {\r\n        setLoader(!loader)\r\n    }\r\n\r\n    const publishTemplateFunc = async (e, value) => {\r\n        setTemplateID(value.id)\r\n        const response = await getSlots(props.user.username)\r\n        let date = moment().format('YYYY-MM-DD')\r\n        if (response.STATUS) {\r\n            let list = []\r\n            let expiredList = []\r\n            response.DATA.map((val) => {\r\n                if ((date <= val.expiry_date) || val.published == \"FALSE\") {\r\n                    val.isInput = false\r\n                    val.isExpired = false\r\n                    list.push(val)\r\n                } else {\r\n                    expiredList.push(val)\r\n                }\r\n            })\r\n            list = list.length > 0 ? list : response.DATA\r\n            setSlotDetails(list)\r\n            setExpiredSlots(expiredList)\r\n        }\r\n        setShowModal(true)\r\n    }\r\n\r\n\r\n    const classes = makeStyles({\r\n        root: {\r\n            minWidth: 275,\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n    });\r\n\r\n    const handleHide = async (value) => {\r\n        let obj = {}\r\n        obj.username = value.username\r\n        obj.id = value.id\r\n        obj.is_hidden = (value.is_hidden === \"FALSE\" ? \"TRUE\" : \"FALSE\")\r\n        const response = await updateHide(obj)\r\n        if (response.STATUS == \"SUCCESS\") {\r\n            var list = []\r\n            props.userTemplate.forEach((el) => {\r\n                if (el.id == value.id) {\r\n                    el.is_hidden = obj.is_hidden\r\n                    list.push(el)\r\n                }\r\n                else {\r\n                    list.push(el)\r\n                }\r\n            })\r\n            if (props.user.type == \"ADMIN\") {\r\n                props.adminTemplate(list)\r\n            } else {\r\n                props.template(list)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e, value) => {\r\n        setEditDetails(value)\r\n        setFileSrc(value.image)\r\n        setEditShowModal(true)\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleMergeTemplate = async (event, value, usenow) => {\r\n        let obj = {}\r\n        obj.username = props.user.username\r\n        obj.id = value.id\r\n        const response = await mergeTemplate(obj)\r\n        if (response.STATUS == \"SUCCESS\") {\r\n            toast.success(response.MESSAGE)\r\n            if(usenow == true){\r\n                history.push('/recentWebTemplate')\r\n            }\r\n        } else {\r\n            toast.error(response.MESSAGE)\r\n        }\r\n        event.preventDefault()\r\n    }\r\n\r\n    return loader ?\r\n        (<>\r\n            <LottieIcon animationData={loadingAnimationData} type=\"Running\" pause={isPaused} height={50} width={50} />\r\n        </>)\r\n        :\r\n        (\r\n            <>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        {props.userTemplate.length > 0 &&\r\n                            props.userTemplate.map(value =>\r\n                                <div className=\"col-sm-4 col-xs-4\">\r\n                                    <Card className={classes.root} variant=\"outlined\" style={{ boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }}>\r\n                                        <img src={value.image ? value.image : \"https://res.cloudinary.com/w3bizz-com/image/upload/c_scale,w_425/v1632246929/1_qccloi.png\"} style={{ height: \"15em\", width: \"100%\" }} />\r\n                                        <br />\r\n                                        <CardContent>\r\n                                            <span>\r\n                                                <h4 style={{ display: \"inline\" }}>{value.title}</h4>\r\n                                                <br />\r\n                                                <br />\r\n                                                <div style={{ display: \"flex\" }}>\r\n                                                    {props.Publish == true &&\r\n                                                        <Tooltip title=\"Publish Web Template\">\r\n                                                            <span style={{ float: \"right\" }}>\r\n                                                                <button className=\"btn btn-info\" onClick={(e) => { publishTemplateFunc(e, value) }}>Publish Now</button>\r\n                                                            </span>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {props.UseNow == true &&\r\n                                                        <Tooltip title=\"Use Now\">\r\n                                                            <span onClick={(e) => { handleMergeTemplate(e, value, true) }}>\r\n                                                                <button className=\"btn btn-info\">Use Now</button>\r\n                                                            </span>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {props.ShowHide == true &&\r\n                                                        <span onClick={() => { handleHide(value) }}>\r\n                                                            {value.is_hidden == \"TRUE\" ? <Tooltip title=\"Show\"><VisibilityOffIcon /></Tooltip> : <Tooltip title=\"Hide\"><VisibilityIcon /></Tooltip>}\r\n                                                        </span>\r\n                                                    }\r\n                                                    {props.ViewPages == true &&\r\n                                                        <Tooltip title=\"View Pages\">\r\n                                                            <span onClick={(event) => handleView(event, value)}>\r\n                                                                <LottieIcon animationData={MenuIcon} pause={isPaused} stop={isStopped} />\r\n                                                            </span>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {props.EditTemplate == true &&\r\n                                                        <Tooltip title=\"Edit Template Details\">\r\n                                                            <span onClick={(event) => handleEdit(event, value)}>\r\n                                                                <LottieIcon animationData={editAnimationData} pause={isPaused} stop={isStopped} />\r\n                                                            </span>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {props.CopyTemplate == true &&\r\n                                                        <Tooltip title=\"Copy Template\">\r\n                                                            <span style={{ color: \"#1DABB8\" }} onClick={(e) => { handleMergeTemplate(e, value, false) }}>\r\n                                                                <LottieIcon animationData={animationDataCopy} pause={isPaused} stop={isStopped} />\r\n                                                            </span>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                </div>\r\n                                            </span>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                    <br />\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n                \r\n                    <AvailableSlot modal={showModal} title={\"Available Slots\"} toggle={toggle} slotDetails={slotDetails} templateID={templateID} expiredSlots={expiredSlots} />\r\n                \r\n                        <TemplateModal modal={editShowModal} loader={toggleLoader} toggle={editToggle} title={\"Edit Template\"} Add={false} data={editDetails} />\r\n                \r\n            </>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.login.data,\r\n        published: state.template.published\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        adminTemplate: (data) => dispatch(actions.setAdminTemplate(data)),\r\n        template: (data) => dispatch(actions.setUserTemplate(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateCard)","F:\\w3bizz\\React\\src\\component\\modal\\AvailableSlot.js",["312","313","314","315","316","317","318","319","320","321"],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","severity":1,"message":"327","line":21,"column":33,"nodeType":"328","messageId":"329","endLine":21,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":51,"column":55,"nodeType":"328","messageId":"329","endLine":51,"endColumn":57},{"ruleId":"330","severity":1,"message":"331","line":104,"column":17,"nodeType":"332","endLine":104,"endColumn":66},{"ruleId":"333","severity":1,"message":"334","line":5,"column":16,"nodeType":"335","messageId":"336","endLine":5,"endColumn":24},{"ruleId":"326","severity":1,"message":"327","line":26,"column":38,"nodeType":"328","messageId":"329","endLine":26,"endColumn":40},{"ruleId":"326","severity":1,"message":"327","line":32,"column":36,"nodeType":"328","messageId":"329","endLine":32,"endColumn":38},{"ruleId":"330","severity":1,"message":"331","line":64,"column":25,"nodeType":"332","endLine":64,"endColumn":72},{"ruleId":"326","severity":1,"message":"327","line":27,"column":28,"nodeType":"328","messageId":"329","endLine":27,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":39,"column":26,"nodeType":"328","messageId":"329","endLine":39,"endColumn":28},{"ruleId":"326","severity":1,"message":"327","line":53,"column":24,"nodeType":"328","messageId":"329","endLine":53,"endColumn":26},{"ruleId":"330","severity":1,"message":"331","line":65,"column":21,"nodeType":"332","endLine":65,"endColumn":67},{"ruleId":"326","severity":1,"message":"327","line":22,"column":29,"nodeType":"328","messageId":"329","endLine":22,"endColumn":31},{"ruleId":"333","severity":1,"message":"337","line":41,"column":25,"nodeType":"335","messageId":"336","endLine":41,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":66,"column":78,"nodeType":"328","messageId":"329","endLine":66,"endColumn":80},{"ruleId":"326","severity":1,"message":"327","line":68,"column":76,"nodeType":"328","messageId":"329","endLine":68,"endColumn":78},{"ruleId":"338","severity":1,"message":"339","line":105,"column":37,"nodeType":"340","messageId":"341","endLine":105,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":106,"column":64,"nodeType":"328","messageId":"329","endLine":106,"endColumn":66},{"ruleId":"326","severity":1,"message":"342","line":131,"column":37,"nodeType":"328","messageId":"329","endLine":131,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":140,"column":37,"nodeType":"328","messageId":"329","endLine":140,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":163,"column":30,"nodeType":"328","messageId":"329","endLine":163,"endColumn":32},{"ruleId":"326","severity":1,"message":"342","line":168,"column":77,"nodeType":"328","messageId":"329","endLine":168,"endColumn":79},{"ruleId":"333","severity":1,"message":"343","line":195,"column":15,"nodeType":"335","messageId":"336","endLine":195,"endColumn":27},{"ruleId":"333","severity":1,"message":"344","line":206,"column":17,"nodeType":"335","messageId":"336","endLine":206,"endColumn":24},{"ruleId":"333","severity":1,"message":"345","line":206,"column":26,"nodeType":"335","messageId":"336","endLine":206,"endColumn":32},{"ruleId":"326","severity":1,"message":"327","line":407,"column":79,"nodeType":"328","messageId":"329","endLine":407,"endColumn":81},{"ruleId":"326","severity":1,"message":"327","line":25,"column":29,"nodeType":"328","messageId":"329","endLine":25,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":28,"column":53,"nodeType":"340","messageId":"341","endLine":28,"endColumn":55},{"ruleId":"326","severity":1,"message":"327","line":29,"column":39,"nodeType":"328","messageId":"329","endLine":29,"endColumn":41},{"ruleId":"326","severity":1,"message":"327","line":34,"column":38,"nodeType":"328","messageId":"329","endLine":34,"endColumn":40},{"ruleId":"326","severity":1,"message":"327","line":76,"column":40,"nodeType":"328","messageId":"329","endLine":76,"endColumn":42},{"ruleId":"333","severity":1,"message":"346","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":25},{"ruleId":"333","severity":1,"message":"347","line":5,"column":23,"nodeType":"335","messageId":"336","endLine":5,"endColumn":32},{"ruleId":"326","severity":1,"message":"327","line":37,"column":28,"nodeType":"328","messageId":"329","endLine":37,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":52,"column":17,"nodeType":"328","messageId":"329","endLine":52,"endColumn":19},{"ruleId":"326","severity":1,"message":"327","line":53,"column":61,"nodeType":"328","messageId":"329","endLine":53,"endColumn":63},{"ruleId":"326","severity":1,"message":"327","line":55,"column":62,"nodeType":"328","messageId":"329","endLine":55,"endColumn":64},{"ruleId":"326","severity":1,"message":"327","line":56,"column":26,"nodeType":"328","messageId":"329","endLine":56,"endColumn":28},{"ruleId":"338","severity":1,"message":"339","line":59,"column":52,"nodeType":"340","messageId":"341","endLine":59,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":60,"column":42,"nodeType":"328","messageId":"329","endLine":60,"endColumn":44},{"ruleId":"326","severity":1,"message":"327","line":89,"column":47,"nodeType":"328","messageId":"329","endLine":89,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":90,"column":39,"nodeType":"328","messageId":"329","endLine":90,"endColumn":41},{"ruleId":"333","severity":1,"message":"348","line":8,"column":53,"nodeType":"335","messageId":"336","endLine":8,"endColumn":61},{"ruleId":"333","severity":1,"message":"349","line":8,"column":80,"nodeType":"335","messageId":"336","endLine":8,"endColumn":84},{"ruleId":"333","severity":1,"message":"350","line":12,"column":17,"nodeType":"335","messageId":"336","endLine":12,"endColumn":31},{"ruleId":"333","severity":1,"message":"351","line":12,"column":47,"nodeType":"335","messageId":"336","endLine":12,"endColumn":61},{"ruleId":"333","severity":1,"message":"352","line":12,"column":94,"nodeType":"335","messageId":"336","endLine":12,"endColumn":103},{"ruleId":"333","severity":1,"message":"353","line":13,"column":24,"nodeType":"335","messageId":"336","endLine":13,"endColumn":45},{"ruleId":"333","severity":1,"message":"354","line":121,"column":12,"nodeType":"335","messageId":"336","endLine":121,"endColumn":23},{"ruleId":"333","severity":1,"message":"355","line":125,"column":12,"nodeType":"335","messageId":"336","endLine":125,"endColumn":24},{"ruleId":"330","severity":1,"message":"331","line":173,"column":13,"nodeType":"332","endLine":173,"endColumn":152},{"ruleId":"326","severity":1,"message":"342","line":199,"column":22,"nodeType":"328","messageId":"329","endLine":199,"endColumn":24},{"ruleId":"326","severity":1,"message":"327","line":233,"column":22,"nodeType":"328","messageId":"329","endLine":233,"endColumn":24},{"ruleId":"326","severity":1,"message":"342","line":176,"column":16,"nodeType":"328","messageId":"329","endLine":176,"endColumn":18},{"ruleId":"333","severity":1,"message":"356","line":2,"column":8,"nodeType":"335","messageId":"336","endLine":2,"endColumn":17},{"ruleId":"333","severity":1,"message":"357","line":4,"column":13,"nodeType":"335","messageId":"336","endLine":4,"endColumn":20},{"ruleId":"333","severity":1,"message":"358","line":5,"column":9,"nodeType":"335","messageId":"336","endLine":5,"endColumn":16},{"ruleId":"333","severity":1,"message":"359","line":5,"column":24,"nodeType":"335","messageId":"336","endLine":5,"endColumn":35},{"ruleId":"333","severity":1,"message":"360","line":8,"column":43,"nodeType":"335","messageId":"336","endLine":8,"endColumn":51},{"ruleId":"333","severity":1,"message":"361","line":8,"column":62,"nodeType":"335","messageId":"336","endLine":8,"endColumn":71},{"ruleId":"333","severity":1,"message":"362","line":8,"column":82,"nodeType":"335","messageId":"336","endLine":8,"endColumn":91},{"ruleId":"326","severity":1,"message":"327","line":25,"column":32,"nodeType":"328","messageId":"329","endLine":25,"endColumn":34},{"ruleId":"333","severity":1,"message":"363","line":2,"column":24,"nodeType":"335","messageId":"336","endLine":2,"endColumn":30},{"ruleId":"333","severity":1,"message":"364","line":2,"column":72,"nodeType":"335","messageId":"336","endLine":2,"endColumn":86},{"ruleId":"333","severity":1,"message":"365","line":5,"column":17,"nodeType":"335","messageId":"336","endLine":5,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":36,"column":39,"nodeType":"328","messageId":"329","endLine":36,"endColumn":41},{"ruleId":"326","severity":1,"message":"327","line":38,"column":25,"nodeType":"328","messageId":"329","endLine":38,"endColumn":27},{"ruleId":"326","severity":1,"message":"327","line":49,"column":34,"nodeType":"328","messageId":"329","endLine":49,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":53,"column":37,"nodeType":"328","messageId":"329","endLine":53,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":78,"column":49,"nodeType":"328","messageId":"329","endLine":78,"endColumn":51},{"ruleId":"326","severity":1,"message":"327","line":81,"column":27,"nodeType":"328","messageId":"329","endLine":81,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":91,"column":38,"nodeType":"328","messageId":"329","endLine":91,"endColumn":40},{"ruleId":"326","severity":1,"message":"327","line":126,"column":52,"nodeType":"328","messageId":"329","endLine":126,"endColumn":54},{"ruleId":"330","severity":1,"message":"331","line":146,"column":45,"nodeType":"332","endLine":146,"endColumn":185},{"ruleId":"333","severity":1,"message":"366","line":1,"column":8,"nodeType":"335","messageId":"336","endLine":1,"endColumn":13},{"ruleId":"333","severity":1,"message":"364","line":7,"column":3,"nodeType":"335","messageId":"336","endLine":7,"endColumn":17},{"ruleId":"333","severity":1,"message":"365","line":16,"column":17,"nodeType":"335","messageId":"336","endLine":16,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":44,"column":25,"nodeType":"328","messageId":"329","endLine":44,"endColumn":27},{"ruleId":"326","severity":1,"message":"327","line":59,"column":21,"nodeType":"328","messageId":"329","endLine":59,"endColumn":23},{"ruleId":"326","severity":1,"message":"327","line":61,"column":27,"nodeType":"328","messageId":"329","endLine":61,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":65,"column":29,"nodeType":"328","messageId":"329","endLine":65,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":68,"column":36,"nodeType":"328","messageId":"329","endLine":68,"endColumn":38},{"ruleId":"326","severity":1,"message":"327","line":83,"column":23,"nodeType":"328","messageId":"329","endLine":83,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":85,"column":35,"nodeType":"328","messageId":"329","endLine":85,"endColumn":37},{"ruleId":"326","severity":1,"message":"327","line":86,"column":25,"nodeType":"328","messageId":"329","endLine":86,"endColumn":27},{"ruleId":"326","severity":1,"message":"327","line":100,"column":21,"nodeType":"328","messageId":"329","endLine":100,"endColumn":23},{"ruleId":"326","severity":1,"message":"327","line":102,"column":27,"nodeType":"328","messageId":"329","endLine":102,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":104,"column":29,"nodeType":"328","messageId":"329","endLine":104,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":107,"column":36,"nodeType":"328","messageId":"329","endLine":107,"endColumn":38},{"ruleId":"326","severity":1,"message":"327","line":154,"column":53,"nodeType":"328","messageId":"329","endLine":154,"endColumn":55},{"ruleId":"326","severity":1,"message":"327","line":176,"column":52,"nodeType":"328","messageId":"329","endLine":176,"endColumn":54},{"ruleId":"326","severity":1,"message":"327","line":176,"column":81,"nodeType":"328","messageId":"329","endLine":176,"endColumn":83},{"ruleId":"326","severity":1,"message":"327","line":181,"column":38,"nodeType":"328","messageId":"329","endLine":181,"endColumn":40},{"ruleId":"330","severity":1,"message":"331","line":242,"column":27,"nodeType":"332","endLine":249,"endColumn":29},{"ruleId":"330","severity":1,"message":"331","line":265,"column":27,"nodeType":"332","endLine":272,"endColumn":29},{"ruleId":"326","severity":1,"message":"342","line":286,"column":36,"nodeType":"328","messageId":"329","endLine":286,"endColumn":38},{"ruleId":"333","severity":1,"message":"358","line":7,"column":28,"nodeType":"335","messageId":"336","endLine":7,"endColumn":35},{"ruleId":"326","severity":1,"message":"342","line":23,"column":19,"nodeType":"328","messageId":"329","endLine":23,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":31,"column":33,"nodeType":"328","messageId":"329","endLine":31,"endColumn":35},{"ruleId":"326","severity":1,"message":"342","line":32,"column":26,"nodeType":"328","messageId":"329","endLine":32,"endColumn":28},{"ruleId":"330","severity":1,"message":"331","line":64,"column":53,"nodeType":"332","endLine":64,"endColumn":228},{"ruleId":"333","severity":1,"message":"357","line":3,"column":13,"nodeType":"335","messageId":"336","endLine":3,"endColumn":20},{"ruleId":"326","severity":1,"message":"327","line":17,"column":44,"nodeType":"328","messageId":"329","endLine":17,"endColumn":46},{"ruleId":"326","severity":1,"message":"327","line":20,"column":44,"nodeType":"328","messageId":"329","endLine":20,"endColumn":46},{"ruleId":"333","severity":1,"message":"367","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":25},{"ruleId":"368","severity":1,"message":"369","line":37,"column":23,"nodeType":"332","endLine":44,"endColumn":24},{"ruleId":"333","severity":1,"message":"370","line":1,"column":27,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"371","line":20,"column":11,"nodeType":"335","messageId":"336","endLine":20,"endColumn":18},{"ruleId":"333","severity":1,"message":"372","line":24,"column":12,"nodeType":"335","messageId":"336","endLine":24,"endColumn":20},{"ruleId":"333","severity":1,"message":"373","line":24,"column":22,"nodeType":"335","messageId":"336","endLine":24,"endColumn":33},{"ruleId":"326","severity":1,"message":"327","line":35,"column":29,"nodeType":"328","messageId":"329","endLine":35,"endColumn":31},{"ruleId":"333","severity":1,"message":"374","line":36,"column":17,"nodeType":"335","messageId":"336","endLine":36,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":38,"column":33,"nodeType":"328","messageId":"329","endLine":38,"endColumn":35},{"ruleId":"326","severity":1,"message":"342","line":58,"column":18,"nodeType":"328","messageId":"329","endLine":58,"endColumn":20},{"ruleId":"333","severity":1,"message":"375","line":66,"column":11,"nodeType":"335","messageId":"336","endLine":66,"endColumn":23},{"ruleId":"330","severity":1,"message":"331","line":96,"column":33,"nodeType":"332","endLine":96,"endColumn":208},{"ruleId":"326","severity":1,"message":"327","line":104,"column":60,"nodeType":"328","messageId":"329","endLine":104,"endColumn":62},{"ruleId":"326","severity":1,"message":"327","line":107,"column":61,"nodeType":"328","messageId":"329","endLine":107,"endColumn":63},{"ruleId":"326","severity":1,"message":"327","line":110,"column":61,"nodeType":"328","messageId":"329","endLine":110,"endColumn":63},{"ruleId":"326","severity":1,"message":"327","line":112,"column":70,"nodeType":"328","messageId":"329","endLine":112,"endColumn":72},{"ruleId":"326","severity":1,"message":"327","line":115,"column":61,"nodeType":"328","messageId":"329","endLine":115,"endColumn":63},{"ruleId":"333","severity":1,"message":"376","line":46,"column":7,"nodeType":"335","messageId":"336","endLine":46,"endColumn":12},{"ruleId":"333","severity":1,"message":"377","line":116,"column":10,"nodeType":"335","messageId":"336","endLine":116,"endColumn":24},{"ruleId":"326","severity":1,"message":"327","line":145,"column":24,"nodeType":"328","messageId":"329","endLine":145,"endColumn":26},{"ruleId":"333","severity":1,"message":"378","line":159,"column":17,"nodeType":"335","messageId":"336","endLine":159,"endColumn":21},{"ruleId":"333","severity":1,"message":"379","line":172,"column":17,"nodeType":"335","messageId":"336","endLine":172,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":36,"column":27,"nodeType":"328","messageId":"329","endLine":36,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":59,"column":29,"nodeType":"328","messageId":"329","endLine":59,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":84,"column":94,"nodeType":"328","messageId":"329","endLine":84,"endColumn":96},{"ruleId":"326","severity":1,"message":"327","line":86,"column":57,"nodeType":"328","messageId":"329","endLine":86,"endColumn":59},{"ruleId":"326","severity":1,"message":"327","line":119,"column":58,"nodeType":"328","messageId":"329","endLine":119,"endColumn":60},{"ruleId":"326","severity":1,"message":"327","line":147,"column":59,"nodeType":"328","messageId":"329","endLine":147,"endColumn":61},{"ruleId":"380","severity":1,"message":"381","line":147,"column":65,"nodeType":"382","messageId":"383","endLine":147,"endColumn":67},{"ruleId":"326","severity":1,"message":"327","line":147,"column":95,"nodeType":"328","messageId":"329","endLine":147,"endColumn":97},{"ruleId":"380","severity":1,"message":"381","line":147,"column":101,"nodeType":"382","messageId":"383","endLine":147,"endColumn":103},{"ruleId":"333","severity":1,"message":"370","line":1,"column":27,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"384","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":18},{"ruleId":"333","severity":1,"message":"385","line":3,"column":45,"nodeType":"335","messageId":"336","endLine":3,"endColumn":60},{"ruleId":"333","severity":1,"message":"386","line":3,"column":74,"nodeType":"335","messageId":"336","endLine":3,"endColumn":85},{"ruleId":"333","severity":1,"message":"387","line":21,"column":12,"nodeType":"335","messageId":"336","endLine":21,"endColumn":16},{"ruleId":"333","severity":1,"message":"388","line":21,"column":18,"nodeType":"335","messageId":"336","endLine":21,"endColumn":25},{"ruleId":"333","severity":1,"message":"389","line":29,"column":12,"nodeType":"335","messageId":"336","endLine":29,"endColumn":19},{"ruleId":"333","severity":1,"message":"373","line":30,"column":22,"nodeType":"335","messageId":"336","endLine":30,"endColumn":33},{"ruleId":"333","severity":1,"message":"390","line":31,"column":23,"nodeType":"335","messageId":"336","endLine":31,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":34,"column":31,"nodeType":"328","messageId":"329","endLine":34,"endColumn":33},{"ruleId":"338","severity":1,"message":"339","line":57,"column":37,"nodeType":"340","messageId":"341","endLine":57,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":58,"column":64,"nodeType":"328","messageId":"329","endLine":58,"endColumn":66},{"ruleId":"326","severity":1,"message":"327","line":97,"column":29,"nodeType":"328","messageId":"329","endLine":97,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":100,"column":27,"nodeType":"328","messageId":"329","endLine":100,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":108,"column":33,"nodeType":"328","messageId":"329","endLine":108,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":128,"column":29,"nodeType":"328","messageId":"329","endLine":128,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":130,"column":23,"nodeType":"328","messageId":"329","endLine":130,"endColumn":25},{"ruleId":"330","severity":1,"message":"331","line":152,"column":41,"nodeType":"332","endLine":152,"endColumn":216},{"ruleId":"326","severity":1,"message":"327","line":160,"column":68,"nodeType":"328","messageId":"329","endLine":160,"endColumn":70},{"ruleId":"326","severity":1,"message":"327","line":167,"column":67,"nodeType":"328","messageId":"329","endLine":167,"endColumn":69},{"ruleId":"326","severity":1,"message":"327","line":174,"column":69,"nodeType":"328","messageId":"329","endLine":174,"endColumn":71},{"ruleId":"326","severity":1,"message":"327","line":176,"column":78,"nodeType":"328","messageId":"329","endLine":176,"endColumn":80},{"ruleId":"326","severity":1,"message":"327","line":179,"column":70,"nodeType":"328","messageId":"329","endLine":179,"endColumn":72},{"ruleId":"326","severity":1,"message":"327","line":186,"column":73,"nodeType":"328","messageId":"329","endLine":186,"endColumn":75},{"ruleId":"326","severity":1,"message":"327","line":193,"column":73,"nodeType":"328","messageId":"329","endLine":193,"endColumn":75},{"ruleId":"333","severity":1,"message":"357","line":4,"column":13,"nodeType":"335","messageId":"336","endLine":4,"endColumn":20},{"ruleId":"326","severity":1,"message":"327","line":69,"column":33,"nodeType":"328","messageId":"329","endLine":69,"endColumn":35},{"ruleId":"326","severity":1,"message":"327","line":71,"column":81,"nodeType":"328","messageId":"329","endLine":71,"endColumn":83},{"ruleId":"326","severity":1,"message":"327","line":72,"column":42,"nodeType":"328","messageId":"329","endLine":72,"endColumn":44},{"ruleId":"326","severity":1,"message":"342","line":94,"column":37,"nodeType":"328","messageId":"329","endLine":94,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":103,"column":37,"nodeType":"328","messageId":"329","endLine":103,"endColumn":39},{"ruleId":"326","severity":1,"message":"327","line":137,"column":92,"nodeType":"328","messageId":"329","endLine":137,"endColumn":94},{"ruleId":"326","severity":1,"message":"327","line":144,"column":91,"nodeType":"328","messageId":"329","endLine":144,"endColumn":93},{"ruleId":"326","severity":1,"message":"327","line":161,"column":69,"nodeType":"328","messageId":"329","endLine":161,"endColumn":71},{"ruleId":"326","severity":1,"message":"327","line":164,"column":69,"nodeType":"328","messageId":"329","endLine":164,"endColumn":71},"no-native-reassign",["391"],"no-negated-in-lhs",["392"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'file' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'customStyles' is assigned a value but never used.","'country' is assigned a value but never used.","'region' is assigned a value but never used.","'setUserTemplate' is defined but never used.","'mergePage' is defined but never used.","'Collapse' is defined but never used.","'Link' is defined but never used.","'IconExpandLess' is defined but never used.","'IconExpandMore' is defined but never used.","'InboxIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'handleClick' is defined but never used.","'handleClick2' is defined but never used.","'ModalPage' is defined but never used.","'actions' is defined but never used.","'Tooltip' is defined but never used.","'CardContent' is defined but never used.","'EditIcon' is defined but never used.","'CheckIcon' is defined but never used.","'ClearIcon' is defined but never used.","'MDBBtn' is defined but never used.","'MDBModalFooter' is defined but never used.","'ToastContainer' is defined but never used.","'axios' is defined but never used.","'useState' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'isPaused' is assigned a value but never used.","'setIsPaused' is assigned a value but never used.","'list' is assigned a value but never used.","'toggleLoader' is assigned a value but never used.","'Field' is assigned a value but never used.","'billingDetails' is assigned a value but never used.","'resp' is assigned a value but never used.","'response' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'addSlots' is defined but never used.","'publishTemplate' is defined but never used.","'updateSlots' is defined but never used.","'slot' is assigned a value but never used.","'setSlot' is assigned a value but never used.","'fileSrc' is assigned a value but never used.","'setIsStopped' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]